Anchored allocation at 609040 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608360
that has 1 entries.
The allocation at 0x609040 appears to be directly statically anchored.
Address 0x608370 is at offset 0x370 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608370.
This is readable and writable
and is mapped into the process image.
Static address 0x608370 references 0x609040.
Address 0x608378 is at offset 0x378 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608378.
This is readable and writable
and is mapped into the process image.
Static address 0x608378 references 0x609040.
Address 0x608380 is at offset 0x380 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608380.
This is readable and writable
and is mapped into the process image.
Static address 0x608380 references 0x609040.

Anchored allocation at 6090b0 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608390
that has 2 entries.
The allocation at 0x6090b0 appears to be directly statically anchored.
Address 0x6083a0 is at offset 0x3a0 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6083a0.
This is readable and writable
and is mapped into the process image.
Static address 0x6083a0 references 0x6090b0.
Address 0x6083a8 is at offset 0x3a8 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6083a8.
This is readable and writable
and is mapped into the process image.
Static address 0x6083a8 references 0x6090b0.

Anchored allocation at 609120 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608390
that has 2 entries.
The allocation at 0x609120 appears to be directly statically anchored.
Address 0x6083b0 is at offset 0x3b0 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6083b0.
This is readable and writable
and is mapped into the process image.
Static address 0x6083b0 references 0x609120.

Anchored allocation at 609190 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x6083c0
that has 2 entries.
The allocation at 0x609190 appears to be directly statically anchored.
Address 0x6083d0 is at offset 0x3d0 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6083d0.
This is readable and writable
and is mapped into the process image.
Static address 0x6083d0 references 0x609190.
Address 0x6083e0 is at offset 0x3e0 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6083e0.
This is readable and writable
and is mapped into the process image.
Static address 0x6083e0 references 0x609190.

Anchored allocation at 6091f0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x6083c0
that has 2 entries.
The allocation at 0x6091f0 appears to be directly statically anchored.
Address 0x6083d8 is at offset 0x3d8 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6083d8.
This is readable and writable
and is mapped into the process image.
Static address 0x6083d8 references 0x6091f0.

Anchored allocation at 609220 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x6083f0
that has 2 entries.
The allocation at 0x609220 appears to be directly statically anchored.
Address 0x608400 is at offset 0x400 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608400.
This is readable and writable
and is mapped into the process image.
Static address 0x608400 references 0x609220.
Address 0x608408 is at offset 0x408 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608408.
This is readable and writable
and is mapped into the process image.
Static address 0x608408 references 0x609220.

Anchored allocation at 609250 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x6083f0
that has 2 entries.
The allocation at 0x609250 appears to be directly statically anchored.
Address 0x608410 is at offset 0x410 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608410.
This is readable and writable
and is mapped into the process image.
Static address 0x608410 references 0x609250.

Anchored allocation at 609280 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608420
that has 2 entries.
The allocation at 0x609280 appears to be directly statically anchored.
Address 0x608430 is at offset 0x430 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608430.
This is readable and writable
and is mapped into the process image.
Static address 0x608430 references 0x609280.
Address 0x608438 is at offset 0x438 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608438.
This is readable and writable
and is mapped into the process image.
Static address 0x608438 references 0x609280.

Anchored allocation at 6092b0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608420
that has 2 entries.
The allocation at 0x6092b0 appears to be directly statically anchored.
Address 0x608440 is at offset 0x440 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608440.
This is readable and writable
and is mapped into the process image.
Static address 0x608440 references 0x6092b0.

Anchored allocation at 609310 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608450
that has 3 entries.
The allocation at 0x609310 appears to be directly statically anchored.
Address 0x608468 is at offset 0x468 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608468.
This is readable and writable
and is mapped into the process image.
Static address 0x608468 references 0x609310.

Anchored allocation at 609380 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608450
that has 3 entries.
The allocation at 0x609380 appears to be directly statically anchored.
Address 0x608460 is at offset 0x460 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608460.
This is readable and writable
and is mapped into the process image.
Static address 0x608460 references 0x609380.

Anchored allocation at 6093f0 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608450
that has 3 entries.
The allocation at 0x6093f0 appears to be directly statically anchored.
Address 0x608470 is at offset 0x470 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608470.
This is readable and writable
and is mapped into the process image.
Static address 0x608470 references 0x6093f0.

Anchored allocation at 609460 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608480
that has 3 entries.
The allocation at 0x609460 appears to be directly statically anchored.
Address 0x608498 is at offset 0x498 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608498.
This is readable and writable
and is mapped into the process image.
Static address 0x608498 references 0x609460.
The allocation at 0x609460 appears to be indirectly anchored from
at least one stack via anchor point 0x6094c0.
Address 0x7fffffffe0f0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe0f0 references anchor point 0x6094c0
which references 0x609460

Anchored allocation at 6094c0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608480
that has 3 entries.
The allocation at 0x6094c0 appears to be directly statically anchored.
Address 0x608490 is at offset 0x490 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608490.
This is readable and writable
and is mapped into the process image.
Static address 0x608490 references 0x6094c0.
The allocation at 0x6094c0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe0f0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe0f0 references 0x6094c0.

Anchored allocation at 609520 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608480
that has 3 entries.
The allocation at 0x609520 appears to be directly statically anchored.
Address 0x6084a0 is at offset 0x4a0 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6084a0.
This is readable and writable
and is mapped into the process image.
Static address 0x6084a0 references 0x609520.
The allocation at 0x609520 appears to be indirectly anchored from
at least one stack via anchor point 0x6094c0.
Address 0x7fffffffe0f0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe0f0 references anchor point 0x6094c0
which references 0x609520

Anchored allocation at 609550 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x6084b0
that has 3 entries.
The allocation at 0x609550 appears to be directly statically anchored.
Address 0x6084c8 is at offset 0x4c8 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6084c8.
This is readable and writable
and is mapped into the process image.
Static address 0x6084c8 references 0x609550.

Anchored allocation at 609580 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x6084b0
that has 3 entries.
The allocation at 0x609580 appears to be directly statically anchored.
Address 0x6084c0 is at offset 0x4c0 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6084c0.
This is readable and writable
and is mapped into the process image.
Static address 0x6084c0 references 0x609580.

Anchored allocation at 6095b0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x6084b0
that has 3 entries.
The allocation at 0x6095b0 appears to be directly statically anchored.
Address 0x6084d0 is at offset 0x4d0 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6084d0.
This is readable and writable
and is mapped into the process image.
Static address 0x6084d0 references 0x6095b0.

Anchored allocation at 6095e0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x6084e0
that has 3 entries.
The allocation at 0x6095e0 appears to be directly statically anchored.
Address 0x6084f8 is at offset 0x4f8 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6084f8.
This is readable and writable
and is mapped into the process image.
Static address 0x6084f8 references 0x6095e0.

Anchored allocation at 609610 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x6084e0
that has 3 entries.
The allocation at 0x609610 appears to be directly statically anchored.
Address 0x6084f0 is at offset 0x4f0 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x6084f0.
This is readable and writable
and is mapped into the process image.
Static address 0x6084f0 references 0x609610.

Anchored allocation at 609640 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x6084e0
that has 3 entries.
The allocation at 0x609640 appears to be directly statically anchored.
Address 0x608500 is at offset 0x500 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608500.
This is readable and writable
and is mapped into the process image.
Static address 0x608500 references 0x609640.

Anchored allocation at 609670 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x609670 appears to be directly statically anchored.
Address 0x608528 is at offset 0x528 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608528.
This is readable and writable
and is mapped into the process image.
Static address 0x608528 references 0x609670.

Anchored allocation at 6096a0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x6096a0 appears to be indirectly statically anchored
via anchor point 0x609670.
Address 0x608528 is at offset 0x528 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608528.
This is readable and writable
and is mapped into the process image.
Static address 0x608528 references anchor point 0x609670
which references 0x6096a0
The allocation at 0x6096a0 appears to be indirectly statically anchored
via anchor point 0x609700.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references anchor point 0x609700
which references 0x6096a0

Anchored allocation at 6096d0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x6096d0 appears to be indirectly statically anchored
via anchor point 0x609670.
Address 0x608528 is at offset 0x528 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608528.
This is readable and writable
and is mapped into the process image.
Static address 0x608528 references anchor point 0x609670
which references 0x6096a0
which references 0x6096d0
The allocation at 0x6096d0 appears to be indirectly statically anchored
via anchor point 0x609700.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references anchor point 0x609700
which references 0x6096a0
which references 0x6096d0

Anchored allocation at 609700 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x609700 appears to be directly statically anchored.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references 0x609700.

Anchored allocation at 609730 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x609730 appears to be indirectly statically anchored
via anchor point 0x609700.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references anchor point 0x609700
which references 0x6097c0
which references 0x609760
which references 0x609730

Anchored allocation at 609760 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x609760 appears to be indirectly statically anchored
via anchor point 0x609700.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references anchor point 0x609700
which references 0x6097c0
which references 0x609760

Anchored allocation at 609790 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x609790 appears to be indirectly statically anchored
via anchor point 0x609700.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references anchor point 0x609700
which references 0x6097c0
which references 0x609760
which references 0x609790

Anchored allocation at 6097c0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x6097c0 appears to be indirectly statically anchored
via anchor point 0x609700.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references anchor point 0x609700
which references 0x6097c0

Anchored allocation at 6097f0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x6097f0 appears to be indirectly statically anchored
via anchor point 0x609700.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references anchor point 0x609700
which references 0x6097c0
which references 0x609880
which references 0x609820
which references 0x6097f0

Anchored allocation at 609820 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x609820 appears to be indirectly statically anchored
via anchor point 0x609700.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references anchor point 0x609700
which references 0x6097c0
which references 0x609880
which references 0x609820

Anchored allocation at 609850 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x609850 appears to be indirectly statically anchored
via anchor point 0x609700.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references anchor point 0x609700
which references 0x6097c0
which references 0x609880
which references 0x609820
which references 0x609850

Anchored allocation at 609880 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x609880 appears to be indirectly statically anchored
via anchor point 0x609700.
Address 0x608520 is at offset 0x520 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608520.
This is readable and writable
and is mapped into the process image.
Static address 0x608520 references anchor point 0x609700
which references 0x6097c0
which references 0x609880

Anchored allocation at 6098b0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x6098b0 appears to be indirectly statically anchored
via anchor point 0x609940.
Address 0x608530 is at offset 0x530 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608530.
This is readable and writable
and is mapped into the process image.
Static address 0x608530 references anchor point 0x609940
which references 0x609910
which references 0x6098e0
which references 0x6098b0

Anchored allocation at 6098e0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x6098e0 appears to be indirectly statically anchored
via anchor point 0x609940.
Address 0x608530 is at offset 0x530 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608530.
This is readable and writable
and is mapped into the process image.
Static address 0x608530 references anchor point 0x609940
which references 0x609910
which references 0x6098e0

Anchored allocation at 609910 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x609910 appears to be indirectly statically anchored
via anchor point 0x609940.
Address 0x608530 is at offset 0x530 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608530.
This is readable and writable
and is mapped into the process image.
Static address 0x608530 references anchor point 0x609940
which references 0x609910

Anchored allocation at 609940 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x608510
that has 16 entries.
The allocation at 0x609940 appears to be directly statically anchored.
Address 0x608530 is at offset 0x530 in range
[0x608000, 609000)
for module main executable
and at module-relative virtual address 0x608530.
This is readable and writable
and is mapped into the process image.
Static address 0x608530 references 0x609940.

Anchored allocation at 6099a0 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe060
that has 1 entries.
The allocation at 0x6099a0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe070 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe070 references 0x6099a0.
Address 0x7fffffffe078 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe078 references 0x6099a0.
Address 0x7fffffffe080 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe080 references 0x6099a0.

Anchored allocation at 609a10 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe090
that has 2 entries.
The allocation at 0x609a10 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe0a0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe0a0 references 0x609a10.
Address 0x7fffffffe0a8 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe0a8 references 0x609a10.

Anchored allocation at 609a80 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe090
that has 2 entries.
The allocation at 0x609a80 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe0b0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe0b0 references 0x609a80.

Anchored allocation at 609af0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe0c0
that has 2 entries.
The allocation at 0x609af0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe0d0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe0d0 references 0x609af0.
Address 0x7fffffffe0e0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe0e0 references 0x609af0.

Anchored allocation at 609b50 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe0c0
that has 2 entries.
The allocation at 0x609b50 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe0d8 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe0d8 references 0x609b50.

Anchored allocation at 609b80 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe0f0
that has 2 entries.
The allocation at 0x609b80 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe100 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe100 references 0x609b80.
Address 0x7fffffffe108 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe108 references 0x609b80.

Anchored allocation at 609bb0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe0f0
that has 2 entries.
The allocation at 0x609bb0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe110 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe110 references 0x609bb0.

Anchored allocation at 609be0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe120
that has 2 entries.
The allocation at 0x609be0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe130 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe130 references 0x609be0.
Address 0x7fffffffe138 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe138 references 0x609be0.

Anchored allocation at 609c10 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe120
that has 2 entries.
The allocation at 0x609c10 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe140 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe140 references 0x609c10.

Anchored allocation at 609c70 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe150
that has 3 entries.
The allocation at 0x609c70 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe168 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe168 references 0x609c70.

Anchored allocation at 609ce0 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe150
that has 3 entries.
The allocation at 0x609ce0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe160 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe160 references 0x609ce0.

Anchored allocation at 609d50 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe150
that has 3 entries.
The allocation at 0x609d50 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe170 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe170 references 0x609d50.

Anchored allocation at 609dc0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe180
that has 3 entries.
The allocation at 0x609dc0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe198 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe198 references 0x609dc0.

Anchored allocation at 609e20 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe180
that has 3 entries.
The allocation at 0x609e20 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe190 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe190 references 0x609e20.

Anchored allocation at 609e80 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe180
that has 3 entries.
The allocation at 0x609e80 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe1a0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe1a0 references 0x609e80.

Anchored allocation at 609eb0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe1b0
that has 3 entries.
The allocation at 0x609eb0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe1c8 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe1c8 references 0x609eb0.

Anchored allocation at 609ee0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe1b0
that has 3 entries.
The allocation at 0x609ee0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe1c0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe1c0 references 0x609ee0.

Anchored allocation at 609f10 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe1b0
that has 3 entries.
The allocation at 0x609f10 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe1d0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe1d0 references 0x609f10.

Anchored allocation at 609f40 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe1e0
that has 3 entries.
The allocation at 0x609f40 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe1f8 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe1f8 references 0x609f40.

Anchored allocation at 609f70 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe1e0
that has 3 entries.
The allocation at 0x609f70 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe1f0 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe1f0 references 0x609f70.

Anchored allocation at 609fa0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe1e0
that has 3 entries.
The allocation at 0x609fa0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe200 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe200 references 0x609fa0.

Anchored allocation at 609fd0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x609fd0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe228 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe228 references 0x609fd0.

Anchored allocation at 60a000 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a000 appears to be indirectly anchored from
at least one stack via anchor point 0x609fd0.
Address 0x7fffffffe228 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe228 references anchor point 0x609fd0
which references 0x60a000
The allocation at 0x60a000 appears to be indirectly anchored from
at least one stack via anchor point 0x60a060.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references anchor point 0x60a060
which references 0x60a000

Anchored allocation at 60a030 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a030 appears to be indirectly anchored from
at least one stack via anchor point 0x609fd0.
Address 0x7fffffffe228 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe228 references anchor point 0x609fd0
which references 0x60a000
which references 0x60a030
The allocation at 0x60a030 appears to be indirectly anchored from
at least one stack via anchor point 0x60a060.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references anchor point 0x60a060
which references 0x60a000
which references 0x60a030

Anchored allocation at 60a060 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a060 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references 0x60a060.

Anchored allocation at 60a090 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a090 appears to be indirectly anchored from
at least one stack via anchor point 0x60a060.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references anchor point 0x60a060
which references 0x60a120
which references 0x60a0c0
which references 0x60a090

Anchored allocation at 60a0c0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a0c0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a060.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references anchor point 0x60a060
which references 0x60a120
which references 0x60a0c0

Anchored allocation at 60a0f0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a0f0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a060.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references anchor point 0x60a060
which references 0x60a120
which references 0x60a0c0
which references 0x60a0f0

Anchored allocation at 60a120 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a120 appears to be indirectly anchored from
at least one stack via anchor point 0x60a060.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references anchor point 0x60a060
which references 0x60a120

Anchored allocation at 60a150 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a150 appears to be indirectly anchored from
at least one stack via anchor point 0x60a060.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references anchor point 0x60a060
which references 0x60a120
which references 0x60a1e0
which references 0x60a180
which references 0x60a150

Anchored allocation at 60a180 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a180 appears to be indirectly anchored from
at least one stack via anchor point 0x60a060.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references anchor point 0x60a060
which references 0x60a120
which references 0x60a1e0
which references 0x60a180

Anchored allocation at 60a1b0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a1b0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a060.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references anchor point 0x60a060
which references 0x60a120
which references 0x60a1e0
which references 0x60a180
which references 0x60a1b0

Anchored allocation at 60a1e0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a1e0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a060.
Address 0x7fffffffe220 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe220 references anchor point 0x60a060
which references 0x60a120
which references 0x60a1e0

Anchored allocation at 60a210 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a210 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2a0.
Address 0x7fffffffe230 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe230 references anchor point 0x60a2a0
which references 0x60a270
which references 0x60a240
which references 0x60a210

Anchored allocation at 60a240 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a240 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2a0.
Address 0x7fffffffe230 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe230 references anchor point 0x60a2a0
which references 0x60a270
which references 0x60a240

Anchored allocation at 60a270 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a270 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2a0.
Address 0x7fffffffe230 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe230 references anchor point 0x60a2a0
which references 0x60a270

Anchored allocation at 60a2a0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x7fffffffe210
that has 16 entries.
The allocation at 0x60a2a0 appears to be directly anchored from
at least one stack.
Address 0x7fffffffe230 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe230 references 0x60a2a0.

Anchored allocation at 60a4f0 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a2d0
that has 1 entries.
The allocation at 0x60a4f0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a4f0
The allocation at 0x60a4f0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a4f0

Anchored allocation at 60a560 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a300
that has 2 entries.
The allocation at 0x60a560 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a560
The allocation at 0x60a560 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a560

Anchored allocation at 60a5d0 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a300
that has 2 entries.
The allocation at 0x60a5d0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a5d0
The allocation at 0x60a5d0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a5d0

Anchored allocation at 60a640 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a330
that has 2 entries.
The allocation at 0x60a640 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a640
The allocation at 0x60a640 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a640

Anchored allocation at 60a6a0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a330
that has 2 entries.
The allocation at 0x60a6a0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a6a0
The allocation at 0x60a6a0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a6a0

Anchored allocation at 60a6d0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a360
that has 2 entries.
The allocation at 0x60a6d0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a6d0
The allocation at 0x60a6d0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a6d0

Anchored allocation at 60a700 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a360
that has 2 entries.
The allocation at 0x60a700 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a700
The allocation at 0x60a700 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a700

Anchored allocation at 60a730 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a390
that has 2 entries.
The allocation at 0x60a730 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a730
The allocation at 0x60a730 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a730

Anchored allocation at 60a760 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a390
that has 2 entries.
The allocation at 0x60a760 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a760
The allocation at 0x60a760 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a760

Anchored allocation at 60a7c0 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a3c0
that has 3 entries.
The allocation at 0x60a7c0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a7c0
The allocation at 0x60a7c0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a7c0

Anchored allocation at 60a830 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a3c0
that has 3 entries.
The allocation at 0x60a830 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a830
The allocation at 0x60a830 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a830

Anchored allocation at 60a8a0 of size 38
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a3c0
that has 3 entries.
The allocation at 0x60a8a0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a8a0
The allocation at 0x60a8a0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a8a0

Anchored allocation at 60a910 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a3f0
that has 3 entries.
The allocation at 0x60a910 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a910
The allocation at 0x60a910 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a910

Anchored allocation at 60a970 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a3f0
that has 3 entries.
The allocation at 0x60a970 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a970
The allocation at 0x60a970 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a970

Anchored allocation at 60a9d0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a3f0
that has 3 entries.
The allocation at 0x60a9d0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60a9d0
The allocation at 0x60a9d0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60a9d0

Anchored allocation at 60aa00 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a420
that has 3 entries.
The allocation at 0x60aa00 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60aa00
The allocation at 0x60aa00 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60aa00

Anchored allocation at 60aa30 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a420
that has 3 entries.
The allocation at 0x60aa30 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60aa30
The allocation at 0x60aa30 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60aa30

Anchored allocation at 60aa60 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a420
that has 3 entries.
The allocation at 0x60aa60 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60aa60
The allocation at 0x60aa60 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60aa60

Anchored allocation at 60aa90 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a450
that has 3 entries.
The allocation at 0x60aa90 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60aa90
The allocation at 0x60aa90 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60aa90

Anchored allocation at 60aac0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a450
that has 3 entries.
The allocation at 0x60aac0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60aac0
The allocation at 0x60aac0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60aac0

Anchored allocation at 60aaf0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a450
that has 3 entries.
The allocation at 0x60aaf0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60aaf0
The allocation at 0x60aaf0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60aaf0

Anchored allocation at 60ab20 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60ab20 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60ab20
The allocation at 0x60ab20 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60ab20

Anchored allocation at 60ab50 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60ab50 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60ab20
which references 0x60ab50
The allocation at 0x60ab50 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60ab20
which references 0x60ab50

Anchored allocation at 60ab80 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60ab80 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60ab20
which references 0x60ab50
which references 0x60ab80
The allocation at 0x60ab80 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60ab20
which references 0x60ab50
which references 0x60ab80

Anchored allocation at 60abb0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60abb0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60abb0
The allocation at 0x60abb0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60abb0

Anchored allocation at 60abe0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60abe0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ac10
which references 0x60abe0
The allocation at 0x60abe0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ac10
which references 0x60abe0

Anchored allocation at 60ac10 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60ac10 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ac10
The allocation at 0x60ac10 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ac10

Anchored allocation at 60ac40 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60ac40 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ac10
which references 0x60ac40
The allocation at 0x60ac40 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ac10
which references 0x60ac40

Anchored allocation at 60ac70 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60ac70 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
The allocation at 0x60ac70 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70

Anchored allocation at 60aca0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60aca0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ad30
which references 0x60acd0
which references 0x60aca0
The allocation at 0x60aca0 appears to be indirectly anchored from
at least one register via anchor point 0x60adf0.
Register rcx for thread 1 references anchor point 0x60adf0
which references 0x60adc0
which references 0x60ad90
which references 0x60ad30
which references 0x60acd0
which references 0x60aca0
The allocation at 0x60aca0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ad30
which references 0x60acd0
which references 0x60aca0

Anchored allocation at 60acd0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60acd0 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ad30
which references 0x60acd0
The allocation at 0x60acd0 appears to be indirectly anchored from
at least one register via anchor point 0x60adf0.
Register rcx for thread 1 references anchor point 0x60adf0
which references 0x60adc0
which references 0x60ad90
which references 0x60ad30
which references 0x60acd0
The allocation at 0x60acd0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ad30
which references 0x60acd0

Anchored allocation at 60ad00 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60ad00 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ad30
which references 0x60acd0
which references 0x60ad00
The allocation at 0x60ad00 appears to be indirectly anchored from
at least one register via anchor point 0x60adf0.
Register rcx for thread 1 references anchor point 0x60adf0
which references 0x60adc0
which references 0x60ad90
which references 0x60ad30
which references 0x60acd0
which references 0x60ad00
The allocation at 0x60ad00 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ad30
which references 0x60acd0
which references 0x60ad00

Anchored allocation at 60ad30 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60ad30 appears to be indirectly anchored from
at least one register via anchor point 0x60a2d0.
Register rbx for thread 1 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ad30
The allocation at 0x60ad30 appears to be indirectly anchored from
at least one register via anchor point 0x60adf0.
Register rcx for thread 1 references anchor point 0x60adf0
which references 0x60adc0
which references 0x60ad90
which references 0x60ad30
The allocation at 0x60ad30 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60abb0
which references 0x60ac70
which references 0x60ad30

Anchored allocation at 60ad60 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60ad60 appears to be indirectly anchored from
at least one register via anchor point 0x60adf0.
Register rcx for thread 1 references anchor point 0x60adf0
which references 0x60adc0
which references 0x60ad90
which references 0x60ad60
The allocation at 0x60ad60 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60adf0
which references 0x60adc0
which references 0x60ad90
which references 0x60ad60

Anchored allocation at 60ad90 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60ad90 appears to be indirectly anchored from
at least one register via anchor point 0x60adf0.
Register rcx for thread 1 references anchor point 0x60adf0
which references 0x60adc0
which references 0x60ad90
The allocation at 0x60ad90 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60adf0
which references 0x60adc0
which references 0x60ad90

Anchored allocation at 60adc0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60adc0 appears to be indirectly anchored from
at least one register via anchor point 0x60adf0.
Register rcx for thread 1 references anchor point 0x60adf0
which references 0x60adc0
The allocation at 0x60adc0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60adf0
which references 0x60adc0

Anchored allocation at 60adf0 of size 28
This allocation matches pattern MapOrSetNode.
This allocation belongs to an std::map or std::set at 0x60a480
that has 16 entries.
The allocation at 0x60adf0 appears to be directly anchored from
at least one register.
Register rcx for thread 1 references 0x60adf0.
The allocation at 0x60adf0 appears to be indirectly anchored from
at least one stack via anchor point 0x60a2d0.
Address 0x7fffffffe248 is in the live part of the main stack that
uses [0x7ffffffea000, 0x7ffffffff000).
Thread 1 is currently using this stack.
Stack address 0x7fffffffe248 references anchor point 0x60a2d0
which references 0x60adf0

111 allocations use 0x1278 (4,728) bytes.
