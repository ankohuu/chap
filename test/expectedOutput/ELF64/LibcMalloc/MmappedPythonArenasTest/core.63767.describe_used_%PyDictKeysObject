Anchored allocation at 16f7ea0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16f87e0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16f88d0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "bool(x) -> bool

Returns True when the argument x is true, False otherwise.
The builtins True and False are the only two instances of the class bool.
The class bool is a subclass of the class int, and cannot be subclassed."

Anchored allocation at 16f8cc0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16f8db0 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "The most base type"

Anchored allocation at 16f93e0 of size 628
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16f9a10 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16f9fe0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fa0d0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fa1c0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fa2b0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fa400 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "range(stop) -> range object
range(start, stop[, step]) -> range object

Return an object that produces a sequence of integers from start (inclusive)
to stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.
start defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.
These are exactly the valid indices for a list of 4 elements.
When step is given, it specifies the increment (or decrement)."

Anchored allocation at 16faa30 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, v in iterable:
        d[k] = v
dict(**kwargs) -> new dictionary initialized with the name=value pairs
    in the keyword argument list.  For example:  dict(one=1, two=2)"

Anchored allocation at 16fb060 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Dictionary that remembers insertion order"

Anchored allocation at 16fb6c0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fb7b0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fb8a0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fb930 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "list() -> new empty list
list(iterable) -> new list initialized from iterable's items"

Anchored allocation at 16fbf60 of size c28
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fcb90 of size c28
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fd7c0 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "int(x=0) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by '+' or '-' and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int('0b100', base=0)
4"

Anchored allocation at 16fe3f0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fe4e0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fe690 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16fe840 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "super() -> same as super(__class__, <first argument>)
super(type) -> unbound super object
super(type, obj) -> bound super object; requires isinstance(obj, type)
super(type, type2) -> bound super object; requires issubclass(type2, type)
Typical use to call a cooperative superclass method:
class C(B):
    def meth(self, arg):
        super().meth(arg)
This works for class methods too:
class C(B):
    @classmethod
    def cmeth(cls, arg):
        super().cmeth(arg)
"

Anchored allocation at 16fea20 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "bytearray(iterable_of_ints) -> bytearray
bytearray(string, encoding[, errors]) -> bytearray
bytearray(bytes_or_buffer) -> mutable copy of bytes_or_buffer
bytearray(int) -> bytes array of size given by the parameter initialized with null bytes
bytearray() -> empty bytes array

Construct a mutable bytearray object from:
  - an iterable yielding integers in range(256)
  - a text string encoded using the specified encoding
  - a bytes or a buffer object
  - any object implementing the buffer API.
  - an integer"

Anchored allocation at 16ff860 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16ff950 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "enumerate(iterable[, start]) -> iterator for index, value of iterable

Return an enumerate object.  iterable must be another object that supports
iteration.  The enumerate object yields pairs containing a count (from
start, which defaults to zero) and a value yielded by the iterable argument.
enumerate is useful for obtaining an indexed list:
    (0, seq[0]), (1, seq[1]), (2, seq[2]), ..."

Anchored allocation at 16ffb00 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16ffb90 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 16ffc80 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "bytes(iterable_of_ints) -> bytes
bytes(string, encoding[, errors]) -> bytes
bytes(bytes_or_buffer) -> immutable copy of bytes_or_buffer
bytes(int) -> bytes object of size given by the parameter initialized with null bytes
bytes() -> empty bytes object

Construct an immutable array of bytes from:
  - an iterable yielding integers in range(256)
  - a text string encoded using the specified encoding
  - any object implementing the buffer API.
  - an integer"

Anchored allocation at 17008b0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1700b50 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1700e80 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "hash_info

A struct sequence providing parameters used for computing
hashes. The attributes are read only."

Anchored allocation at 17012a0 of size e8
This allocation matches pattern PyDictKeysObject.
"cache_tag" : "cpython-35"
"name" : "cpython"

Anchored allocation at 1701390 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings.latin_1"

Anchored allocation at 17014e0 of size 1828
This allocation matches pattern PyDictKeysObject.
"__name__" : "builtins"
"__doc__" : "Built-in functions, exceptions, and other objects.

Noteworthy: None is the `nil' object; Ellipsis represents `...' in slices."

Anchored allocation at 1702d10 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Program interrupted by user."

Anchored allocation at 1702e00 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Read beyond end of file."

Anchored allocation at 1702ef0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Import can't find module, or can't find name in module."

Anchored allocation at 17030a0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for I/O related errors."

Anchored allocation at 1703250 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Unicode related error."

Anchored allocation at 1703400 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Recursion limit exceeded."

Anchored allocation at 17034f0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17035e0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Method or function hasn't been implemented yet."

Anchored allocation at 17036d0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Name not found globally."

Anchored allocation at 17037c0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Local name referenced but not bound to a value."

Anchored allocation at 17038e0 of size 628
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1703f10 of size 628
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1704540 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1704630 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "staticmethod(function) -> method

Convert a function to be a static method.

A static method does not receive an implicit first argument.
To declare a static method, use this idiom:

     class C:
     def f(arg1, arg2, ...): ...
     f = staticmethod(f)

It can be called either on the class (e.g. C.f()) or on an instance
(e.g. C().f()).  The instance is ignored except for its class.

Static methods in Python are similar to those found in Java or C++.
For a more advanced concept, see the classmethod builtin."

Anchored allocation at 17047e0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "slice(stop)
slice(start, stop[, step])

Create a slice object.  This is used for extended slicing (e.g. a[0:10:2])."

Anchored allocation at 1704d50 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1705080 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1705140 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "set() -> new empty set object
set(iterable) -> new set object

Build an unordered collection of unique elements."

Anchored allocation at 1705d70 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'."

Anchored allocation at 17069a0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1706b50 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "A simple attribute-based namespace.

SimpleNamespace(**kwargs)"

Anchored allocation at 1706e80 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Capsule objects let you wrap a C "void *" pointer in a Python
object.  They're a way of passing data through the Python interpreter
without creating your own custom type.

Capsules are used for communication between extension modules.
They provide a way for an extension module to export a C interface
to other extension modules, so that extension modules can use the
Python import mechanism to link to one another.
"

Anchored allocation at 1706fd0 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "complex(real[, imag]) -> complex number

Create a complex number from a real part and an optional imaginary part.
This is equivalent to (real + imag*1j) where imag defaults to 0."

Anchored allocation at 1707600 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "frozenset() -> empty frozenset object
frozenset(iterable) -> frozenset object

Build an immutable unordered collection of unique elements."

Anchored allocation at 1707c30 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "float(x) -> floating point number

Convert a string or number to a floating point number, if possible."

Anchored allocation at 1708860 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "tuple() -> empty tuple
tuple(iterable) -> tuple initialized from iterable's items

If the argument is a tuple, the return value is the same object."

Anchored allocation at 1708b90 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Create a new memoryview object which references the given object."

Anchored allocation at 17091c0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "reversed(sequence) -> reverse iterator over values of the sequence

Return a reverse iterator"

Anchored allocation at 1709370 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1709520 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1709850 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1709b80 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "code(argcount, kwonlyargcount, nlocals, stacksize, flags, codestring,
      constants, names, varnames, filename, name, firstlineno,
      lnotab[, freevars[, cellvars]])

Create a code object.  Not for the faint of heart."

Anchored allocation at 170a1b0 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170a4e0 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170a810 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170ab40 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170ae70 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170b1a0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170b350 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170b500 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170b830 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170b9e0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Text I/O implementation using an in-memory buffer.

The initial_value argument sets the value of object.  The newline
argument is like the one of TextIOWrapper's constructor."

Anchored allocation at 170bd10 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "A buffered reader and writer object together.

A buffered reader object and buffered writer object put together to
form a sequential IO object that can read and write. This is typically
used with a socket or two-way pipe.

reader and writer are RawIOBase objects that are readable and
writeable respectively. If the buffer_size is omitted it defaults to
DEFAULT_BUFFER_SIZE."

Anchored allocation at 170c610 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170c7c0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170c970 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170cca0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170ce50 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170cf40 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170d0f0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "A wrapper object implementing __await__ for coroutines."

Anchored allocation at 170d2a0 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170d5d0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "sys.int_info

A struct sequence that holds information about Python's
internal representation of integers.  The attributes are read only."

Anchored allocation at 170d970 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170da60 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170dc10 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "sys.float_info

A structseq holding information about the float type. It contains low level
information about the precision and internal representation. Please study
your system's :file:`float.h` for more information."

Anchored allocation at 170df40 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170e030 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170e120 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170e210 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "filter(function or None, iterable) --> filter object

Return an iterator yielding those items of iterable for which function(item)
is true. If function is None, return the items that are true."

Anchored allocation at 170e3c0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "map(func, *iterables) --> map object

Make an iterator that computes the function using arguments from
each of the iterables.  Stops when the shortest iterable is exhausted."

Anchored allocation at 170e570 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "zip(iter1 [,iter2 [...]]) --> zip object

Return a zip object whose .__next__() method returns a tuple where
the i-th element comes from the i-th iterable argument.  The .__next__()
method continues until the shortest iterable in the argument sequence
is exhausted and then it raises StopIteration."

Anchored allocation at 170e810 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Common base class for all non-exit exceptions."

Anchored allocation at 170e900 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "module(name[, doc])

Create a module object.
The name must be a string; the optional doc argument can have any type."

Anchored allocation at 170eab0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170ec60 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Common base class for all exceptions"

Anchored allocation at 170ef90 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Inappropriate argument type."

Anchored allocation at 170f0c0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Unspecified run-time error."

Anchored allocation at 170f1b0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Signal the end from iterator.__anext__()."

Anchored allocation at 170f2a0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Signal the end from iterator.__next__()."

Anchored allocation at 170f390 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Request that a generator exit."

Anchored allocation at 170f480 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Request to exit from the interpreter."

Anchored allocation at 170f570 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Manages the possible clean-up of sys.modules for load_module()."
"__module__" : "_frozen_importlib"

Anchored allocation at 170fad0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170fbc0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170fcb0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 170fda0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1710270 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_frozen_importlib"

Anchored allocation at 1710420 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "A recursive lock implementation which is able to detect deadlocks
    (e.g. thread 1 trying to take locks A then B, and thread 2 trying to
    take locks B then A).
    "
"__module__" : "_frozen_importlib"

Anchored allocation at 1710b90 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "A simple _ModuleLock equivalent for Python builds without
    multi-threading support."
"__module__" : "_frozen_importlib"

Anchored allocation at 17110f0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1711f10 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_frozen_importlib"

Anchored allocation at 17120c0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "The specification for a module, used for loading.

    A module's spec is the source for information about the module.  For
    data associated with the module, including source, use the spec's
    loader.

    `name` is the absolute name of the module.  `loader` is the loader
    to use when loading the module.  `parent` is the name of the
    package the module is in.  The parent is derived from the name.

    `is_package` determines if the module is considered a package or
    not.  On modules this is reflected by the `__path__` attribute.

    `origin` is the specific location used by the loader from which to
    load the module, if that information is available.  When filename is
    set, origin will match.

    `has_location` indicates that a spec's "origin" reflects a location.
    When this is True, `__file__` attribute of the module is set.

    `cached` is the location of the cached bytecode file, if any.  It
    corresponds to the `__cached__` attribute.

    `submodule_search_locations` is the sequence of path entries to
    search when importing submodules.  If set, is_package should be
    True--and False otherwise.

    Packages are simply modules that (may) have submodules.  If a spec
    has a non-None value in `submodule_search_locations`, the import
    system will consider modules loaded from the spec as packages.

    Only finders (see importlib.abc.MetaPathFinder and
    importlib.abc.PathEntryFinder) should modify ModuleSpec instances.

    "
"__module__" : "_frozen_importlib"

Anchored allocation at 1712d80 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1712e70 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1712f30 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1713020 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1713110 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1713200 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17132f0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17134a0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1713590 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1713620 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "_frozen_importlib"
"__doc__" : "Meta path import for built-in modules.

    All methods are either class or static methods to avoid the need to
    instantiate the class.

    "

Anchored allocation at 1713d00 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1713d90 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1713e80 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1713f70 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1714060 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1714480 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "_frozen_importlib"
"__doc__" : "Meta path import for frozen modules.

    All methods are either class or static methods to avoid the need to
    instantiate the class.

    "

Anchored allocation at 1714f30 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Context manager for the import lock."
"__module__" : "_frozen_importlib"

Anchored allocation at 17150e0 of size 328
This allocation matches pattern PyDictKeysObject.
"__name__" : "_imp"
"__doc__" : "(Extremely) low-level import machinery bits as used by importlib and imp."
"__package__" : ""

Anchored allocation at 1715410 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__name__" : "_warnings"
"_defaultaction" : "default"
"__doc__" : "_warnings provides basic warning filtering support.
It is a helper module to speed up interpreter start-up."
"__package__" : ""

Anchored allocation at 17155f0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17156e0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Attribute not found."

Anchored allocation at 17157d0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Improper indentation."

Anchored allocation at 17158c0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Invalid syntax."

Anchored allocation at 1715a70 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1715b60 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Improper mixture of spaces and tabs."

Anchored allocation at 1715c50 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1715d40 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for lookup errors."

Anchored allocation at 1715e30 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Sequence index out of range."

Anchored allocation at 1715f20 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1716010 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Mapping key not found."

Anchored allocation at 1716100 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Inappropriate argument value (of correct type)."

Anchored allocation at 17161f0 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1716520 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1716610 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1716700 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Unicode encoding error."

Anchored allocation at 17168b0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Assertion failed."

Anchored allocation at 17169a0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Unicode decoding error."

Anchored allocation at 1716b50 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Unicode translation error."

Anchored allocation at 1716d00 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for arithmetic errors."

Anchored allocation at 1716df0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Floating point operation failed."

Anchored allocation at 1716ee0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1716fd0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Result too large to be represented."

Anchored allocation at 17170c0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Second argument to a division or modulo operation was zero."

Anchored allocation at 17171b0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Internal error in the Python interpreter.

Please report this to the Python maintainer, along with the traceback,
the Python version, and the hardware/OS platform and version."

Anchored allocation at 17172a0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Weak ref proxy used after referent went away."

Anchored allocation at 1717390 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Buffer error."

Anchored allocation at 1717480 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Out of memory."

Anchored allocation at 1717570 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warning categories."

Anchored allocation at 1717660 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warnings generated by user code."

Anchored allocation at 1717750 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warnings about probable mistakes in module imports"

Anchored allocation at 1717840 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warnings about deprecated features."

Anchored allocation at 1717930 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warnings about features which will be deprecated
in the future."

Anchored allocation at 1717a20 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warnings about dubious syntax."

Anchored allocation at 1717b10 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warnings about dubious runtime behavior."

Anchored allocation at 1717c00 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warnings about constructs that will change semantically
in the future."

Anchored allocation at 1717cf0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1717ea0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warnings about Unicode related problems, mostly
related to conversion problems."

Anchored allocation at 1717f90 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warnings about bytes and buffer related problems, mostly
related to conversion from str or comparing to str."

Anchored allocation at 1718080 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for warnings about resource usage."

Anchored allocation at 1718170 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Connection error."

Anchored allocation at 1718260 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Operation only works on directories."

Anchored allocation at 1718350 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "I/O operation would block."

Anchored allocation at 1718440 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Broken pipe."

Anchored allocation at 1718530 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1718620 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Child process error."

Anchored allocation at 1718710 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Connection aborted."

Anchored allocation at 1718800 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Connection refused."

Anchored allocation at 17188f0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Connection reset."

Anchored allocation at 17189e0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "File already exists."

Anchored allocation at 1718ad0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "File not found."

Anchored allocation at 1718bc0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Operation doesn't work on directories."

Anchored allocation at 1718cb0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1718d40 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1718e60 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Interrupted by signal."

Anchored allocation at 1718f50 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Not enough permissions."

Anchored allocation at 1719040 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Process not found."

Anchored allocation at 1719130 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Timeout expired."

Anchored allocation at 1719220 of size 1828
This allocation matches pattern PyDictKeysObject.
"__name__" : "builtins"
"__doc__" : "Built-in functions, exceptions, and other objects.

Noteworthy: None is the `nil' object; Ellipsis represents `...' in slices."
"__package__" : ""

Anchored allocation at 171be70 of size c28
This allocation matches pattern PyDictKeysObject.
"prefix" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"__doc__" : "This module provides access to some objects used or maintained by the
interpreter and to functions that interact strongly with the interpreter.

Dynamic objects:

argv -- command line arguments; argv[0] is the script pathname if known
path -- module search path; path[0] is the script directory, else ''
modules -- dictionary of loaded modules

displayhook -- called to show results in an interactive session
excepthook -- called to handle any uncaught exception other than SystemExit
  To customize printing in an interactive session or to install a custom
  top-level exception handler, assign other functions to replace these.

stdin -- standard input file object; used by input()
stdout -- standard output file object; used by print()
stderr -- standard error object; used for error messages
  By assigning other file objects (or objects that behave like files)
  to these, it is possible to redirect all of the interpreter's I/O.

last_type -- type of last uncaught exception
last_value -- value of last uncaught exception
last_traceback -- traceback of last uncaught exception
  These three are only available in an interactive session after a
  traceback has been printed.

Static objects:

builtin_module_names -- tuple of module names built into this interpreter
copyright -- copyright notice pertaining to this interpreter
exec_prefix -- prefix used to find the machine-specific Python library
executable -- absolute path of the executable binary of the Python interpreter
float_info -- a struct sequence with information about the float implementation.
float_repr_style -- string indicating the style of repr() output for floats
hash_info -- a struct sequence with information about the hash algorithm.
hexversion -- version information encoded as a single integer
implementation -- Python implementation information.
int_info -- a struct sequence with information about the int implementation.
maxsize -- the largest supported length of containers.
maxunicode -- the value of the largest Unicode code point
platform -- platform identifier
prefix -- prefix used to find the Python library
thread_info -- a struct sequence with information about the thread implementation.
version -- the version of this interpreter as a string
version_info -- version information as a named tuple
__stdin__ -- the original stdin; don't touch!
__stdout__ -- the original stdout; don't touch!
__stderr__ -- the original stderr; don't touch!
__displayhook__ -- the original displayhook; don't touch!
__excepthook__ -- the original excepthook; don't touch!

Functions:

displayhook() -- print an object to the screen, and save it in builtins._
excepthook() -- print an exception and its traceback to sys.stderr
exc_info() -- return thread-safe information about the current exception
exit() -- exit the interpreter by raising SystemExit
getdlopenflags() -- returns flags to be used for dlopen() calls
getprofile() -- get the global profiling function
getrefcount() -- return the reference count for an object (plus one :-)
getrecursionlimit() -- return the max recursion depth for the interpreter
getsizeof() -- return the size of an object in bytes
gettrace() -- get the global debug tracing function
setcheckinterval() -- control how often the interpreter checks for events
setdlopenflags() -- set the flags to be used for dlopen() calls
setprofile() -- set the global profiling function
setrecursionlimit() -- set the max recursion depth for the interpreter
settrace() -- set the global debug tracing function
"
"lib" : "lib64"
"byteorder" : "little"
"arch" : "x86_64"
"platform" : "linux"
"__name__" : "sys"
"float_repr_style" : "short"
"base_prefix" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"abiflags" : "m"
"base_exec_prefix" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"exec_prefix" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"copyright" : "Copyright (c) 2001-2016 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved."
"__package__" : ""
"executable" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/bin/python"
"version" : "3.5.2 (default, Apr 16 2019, 18:49:59) 
[GCC 4.4.3]"

Anchored allocation at 171caa0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "sys.version_info

Version information as a named tuple."

Anchored allocation at 171d010 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "sys.thread_info

A struct sequence holding information about the thread implementation."

Anchored allocation at 171d1c0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "sys.flags

Flags provided through command line arguments or environment vars."

Anchored allocation at 171d6a0 of size 1828
This allocation matches pattern PyDictKeysObject.
"prefix" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"arch" : "x86_64"
"lib" : "lib64"
"version" : "3.5.2 (default, Apr 16 2019, 18:49:59) 
[GCC 4.4.3]"
"float_repr_style" : "short"
"byteorder" : "little"
"base_exec_prefix" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"__doc__" : "This module provides access to some objects used or maintained by the
interpreter and to functions that interact strongly with the interpreter.

Dynamic objects:

argv -- command line arguments; argv[0] is the script pathname if known
path -- module search path; path[0] is the script directory, else ''
modules -- dictionary of loaded modules

displayhook -- called to show results in an interactive session
excepthook -- called to handle any uncaught exception other than SystemExit
  To customize printing in an interactive session or to install a custom
  top-level exception handler, assign other functions to replace these.

stdin -- standard input file object; used by input()
stdout -- standard output file object; used by print()
stderr -- standard error object; used for error messages
  By assigning other file objects (or objects that behave like files)
  to these, it is possible to redirect all of the interpreter's I/O.

last_type -- type of last uncaught exception
last_value -- value of last uncaught exception
last_traceback -- traceback of last uncaught exception
  These three are only available in an interactive session after a
  traceback has been printed.

Static objects:

builtin_module_names -- tuple of module names built into this interpreter
copyright -- copyright notice pertaining to this interpreter
exec_prefix -- prefix used to find the machine-specific Python library
executable -- absolute path of the executable binary of the Python interpreter
float_info -- a struct sequence with information about the float implementation.
float_repr_style -- string indicating the style of repr() output for floats
hash_info -- a struct sequence with information about the hash algorithm.
hexversion -- version information encoded as a single integer
implementation -- Python implementation information.
int_info -- a struct sequence with information about the int implementation.
maxsize -- the largest supported length of containers.
maxunicode -- the value of the largest Unicode code point
platform -- platform identifier
prefix -- prefix used to find the Python library
thread_info -- a struct sequence with information about the thread implementation.
version -- the version of this interpreter as a string
version_info -- version information as a named tuple
__stdin__ -- the original stdin; don't touch!
__stdout__ -- the original stdout; don't touch!
__stderr__ -- the original stderr; don't touch!
__displayhook__ -- the original displayhook; don't touch!
__excepthook__ -- the original excepthook; don't touch!

Functions:

displayhook() -- print an object to the screen, and save it in builtins._
excepthook() -- print an exception and its traceback to sys.stderr
exc_info() -- return thread-safe information about the current exception
exit() -- exit the interpreter by raising SystemExit
getdlopenflags() -- returns flags to be used for dlopen() calls
getprofile() -- get the global profiling function
getrefcount() -- return the reference count for an object (plus one :-)
getrecursionlimit() -- return the max recursion depth for the interpreter
getsizeof() -- return the size of an object in bytes
gettrace() -- get the global debug tracing function
setcheckinterval() -- control how often the interpreter checks for events
setdlopenflags() -- set the flags to be used for dlopen() calls
setprofile() -- set the global profiling function
setrecursionlimit() -- set the max recursion depth for the interpreter
settrace() -- set the global debug tracing function
"
"platform" : "linux"
"__name__" : "sys"
"abiflags" : "m"
"exec_prefix" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"base_prefix" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"copyright" : "Copyright (c) 2001-2016 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved."
"executable" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/bin/python"

Anchored allocation at 171eed0 of size 3028
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Built-in functions, exceptions, and other objects.

Noteworthy: None is the `nil' object; Ellipsis represents `...' in slices."
"__name__" : "builtins"

Anchored allocation at 1721f00 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__name__" : "_warnings"
"_defaultaction" : "default"
"__doc__" : "_warnings provides basic warning filtering support.
It is a helper module to speed up interpreter start-up."

Anchored allocation at 1722440 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17225c0 of size f8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Thread-local dummy"

Anchored allocation at 1722920 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1722a10 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17232e0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17233d0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_frozen_importlib"

Anchored allocation at 17234c0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17235b0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1723640 of size 1828
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1724f40 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1725110 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1725440 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "times_result: Result from os.times().

This object may be accessed either as a tuple of
  (user, system, children_user, children_system, elapsed),
or via the attributes user, system, children_user, children_system,
and elapsed.

See os.times for more information."

Anchored allocation at 1725770 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "uname_result: Result from os.uname().

This object may be accessed either as a tuple of
  (sysname, nodename, release, version, machine),
or via the attributes sysname, nodename, release, version, and machine.

See os.uname for more information."

Anchored allocation at 1725aa0 of size 3028
This allocation matches pattern PyDictKeysObject.
"__name__" : "posix"
"__doc__" : "This module provides access to operating system functionality that is
standardized by the C Standard and the POSIX standard (a thinly
disguised Unix interface).  Refer to the library manual and
corresponding Unix manual entries for more information on calls."

Anchored allocation at 1728ad0 of size c28
This allocation matches pattern PyDictKeysObject.
"__name__" : "_thread"
"__doc__" : "This module provides primitive operations to write multi-threaded programs.
The 'threading' module provides a more convenient interface."
"__package__" : ""

Anchored allocation at 1729700 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "zipimporter(archivepath) -> zipimporter object

Create a new zipimporter instance. 'archivepath' must be a path to
a zipfile, or to a specific path inside a zipfile. For example, it can be
'/tmp/myimport.zip', or '/tmp/myimport.zip/mydirectory', if mydirectory is a
valid directory inside the archive.

'ZipImportError is raised if 'archivepath' doesn't point to a valid Zip
archive.

The 'archive' attribute of zipimporter objects contains the name of the
zipfile targeted."

Anchored allocation at 1729cc0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1729db0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "zipimport"

Anchored allocation at 172a270 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 172a360 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 172a3f0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__name__" : "zipimport"
"__doc__" : "zipimport provides support for importing Python modules from Zip archives.

This module exports three objects:
- zipimporter: a class; its constructor takes a path to a Zip archive.
- ZipImportError: exception raised by zipimporter objects. It's a
  subclass of ImportError, so it can be caught as ImportError, too.
- _zip_directory_cache: a dict, mapping archive paths to zip directory
  info dicts, as used in zipimporter._files.

It is usually not needed to use the zipimport module explicitly; it is
used by the builtin import mechanism for sys.path items that are paths
to Zip archives."
"__package__" : ""

Anchored allocation at 172a7c0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 172a8d0 of size 328
This allocation matches pattern PyDictKeysObject.
"__name__" : "zipimport"
"__doc__" : "zipimport provides support for importing Python modules from Zip archives.

This module exports three objects:
- zipimporter: a class; its constructor takes a path to a Zip archive.
- ZipImportError: exception raised by zipimporter objects. It's a
  subclass of ImportError, so it can be caught as ImportError, too.
- _zip_directory_cache: a dict, mapping archive paths to zip directory
  info dicts, as used in zipimporter._files.

It is usually not needed to use the zipimport module explicitly; it is
used by the builtin import mechanism for sys.path items that are paths
to Zip archives."

Anchored allocation at 172d4a0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 172ece0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 172ee90 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 172f330 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 172f420 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 172f4b0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 172f5a0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 172f670 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Core implementation of import.

This module is NOT meant to be directly imported! It has been designed such
that it can be bootstrapped into Python as the implementation of import. As
such it requires the injection of specific modules and attributes in order to
work. One should use importlib as the public-facing version of this module.

"
"__name__" : "_frozen_importlib"
"_ERR_MSG" : "No module named {!r}"
"__package__" : ""
"_ERR_MSG_PREFIX" : "No module named "

Anchored allocation at 17304e0 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Thread-local data"

Anchored allocation at 17305d0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17306c0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1730870 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1730a20 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1730e40 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1730f00 of size 628
This allocation matches pattern PyDictKeysObject.
"__name__" : "_thread"
"__doc__" : "This module provides primitive operations to write multi-threaded programs.
The 'threading' module provides a more convenient interface."

Anchored allocation at 1731530 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17316e0 of size 328
This allocation matches pattern PyDictKeysObject.
"__name__" : "_weakref"
"__doc__" : "Weak-reference support module."
"__package__" : ""

Anchored allocation at 1731a10 of size 328
This allocation matches pattern PyDictKeysObject.
"__name__" : "_weakref"
"__doc__" : "Weak-reference support module."

Anchored allocation at 1732690 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for text I/O.

This class provides a character and line based interface to stream
I/O. There is no readinto method because Python's character strings
are immutable. There is no public constructor.
"

Anchored allocation at 1732bf0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1732ce0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1732dd0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17338d0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17339c0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1733ab0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1733b70 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1733c00 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_frozen_importlib_external"
"__doc__" : "Loader which handles sourceless file imports."

Anchored allocation at 1733cf0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1733db0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Concrete implementation of SourceLoader using the file system."
"__module__" : "_frozen_importlib_external"

Anchored allocation at 1733f60 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1734050 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17340e0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1734230 of size 328
This allocation matches pattern PyDictKeysObject.
"REGISTRY_KEY_DEBUG" : "Software\Python\PythonCore\{sys_version}\Modules\{fullname}\Debug"
"REGISTRY_KEY" : "Software\Python\PythonCore\{sys_version}\Modules\{fullname}"
"__doc__" : "Meta path finder for modules declared in the Windows registry."
"__module__" : "_frozen_importlib_external"

Anchored allocation at 1734910 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class of common code needed by both SourceLoader and
    SourcelessFileLoader."
"__module__" : "_frozen_importlib_external"

Anchored allocation at 1734e70 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1734f60 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "_frozen_importlib_external"

Anchored allocation at 1735640 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1735730 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1735a10 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1735b00 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1735bf0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1735ce0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1735dd0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base file loader class which implements the loader protocol methods that
    require file system usage."
"__module__" : "_frozen_importlib_external"

Anchored allocation at 17364b0 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Core implementation of path-based import.

This module is NOT meant to be directly imported! It has been designed such
that it can be bootstrapped into Python as the implementation of import. As
such it requires the injection of specific modules and attributes in order to
work. One should use importlib as the public-facing version of this module.

"
"_OPT" : "opt-"
"__name__" : "_frozen_importlib_external"
"_PYCACHE" : "__pycache__"
"path_separators" : "/"
"path_sep" : "/"
"__package__" : ""

Anchored allocation at 1737840 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17378d0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1737960 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17379f0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1737ae0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Represents a namespace package's path.  It uses the module name
    to find its parent module, and from there it looks up the parent's
    __path__.  When this changes, the module's own path is recomputed,
    using path_finder.  For top-level modules, the parent module's path
    is sys.path."
"__module__" : "_frozen_importlib_external"

Anchored allocation at 1737e10 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "_frozen_importlib_external"
"__doc__" : "Loader for extension modules.

    The constructor is designed to work with FileFinder.

    "

Anchored allocation at 1738bd0 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "_frozen_importlib_external"

Anchored allocation at 17392b0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Meta path finder for sys.path and package __path__ attributes."
"__module__" : "_frozen_importlib_external"

Anchored allocation at 1739990 of size e8
This allocation matches pattern PyDictKeysObject.
"name" : "<stdin>"

Anchored allocation at 1739a80 of size e8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for raw binary I/O."

Anchored allocation at 1739b70 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "io"

Anchored allocation at 1739cc0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "File-based finder.

    Interactions with the file system are cached for performance, being
    refreshed when the directory the finder is handling has been modified.

    "
"__module__" : "_frozen_importlib_external"

Anchored allocation at 173a9a0 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 173acd0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for buffered IO objects.

The main difference with RawIOBase is that the read() method
supports omitting the size argument, and does not have a default
implementation that defers to readinto().

In addition, read(), readinto() and write() may raise
BlockingIOError if the underlying raw stream is in non-blocking
mode and not ready; unlike their raw counterparts, they will never
return None.

A typical implementation should not inherit from a RawIOBase
implementation, but wrap one.
"

Anchored allocation at 173b1b0 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "The abstract base class for all I/O classes, acting on streams of
bytes. There is no public constructor.

This class provides dummy implementations for many methods that
derived classes can override selectively; the default implementations
represent a file that cannot be read, written or seeked.

Even though IOBase does not declare read, readinto, or write because
their signatures will vary, implementations and clients should
consider those methods part of the interface. Also, implementations
may raise UnsupportedOperation when operations they do not support are
called.

The basic type used for binary data read from or written to a file is
bytes. Other bytes-like objects are accepted as method arguments too.
In some cases (such as readinto), a writable object is required. Text
I/O classes work with str data.

Note that calling any method (except additional calls to close(),
which are ignored) on a closed stream should raise a ValueError.

IOBase (and its subclasses) support the iterator protocol, meaning
that an IOBase object can be iterated over yielding the lines in a
stream.

IOBase also supports the :keyword:`with` statement. In this example,
fp is closed after the suite of the with statement is complete:

with open('spam.txt', 'r') as fp:
    fp.write('Spam and eggs!')
"

Anchored allocation at 173bd30 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 173c3b0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 173c540 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Open a file.

The mode can be 'r' (default), 'w', 'x' or 'a' for reading,
writing, exclusive creation or appending.  The file will be created if it
doesn't exist when opened for writing or appending; it will be truncated
when opened for writing.  A FileExistsError will be raised if it already
exists when opened for creating. Opening a file for creating implies
writing so this mode behaves in a similar way to 'w'.Add a '+' to the mode
to allow simultaneous reading and writing. A custom opener can be used by
passing a callable as *opener*. The underlying file descriptor for the file
object is then obtained by calling opener with (*name*, *flags*).
*opener* must return an open file descriptor (passing os.open as *opener*
results in functionality similar to passing None)."

Anchored allocation at 173cb70 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 173cd50 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Codec used when reading a file in universal newlines mode.

It wraps another incremental decoder, translating \r\n and \r into \n.
It also records the types of newlines encountered.  When used with
translate=False, it ensures that the newline sequence is returned in
one piece. When used with decoder=None, it expects unicode strings as
decode input and translates newlines without first invoking an external
decoder."

Anchored allocation at 173cf00 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 173d050 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Buffered I/O implementation using an in-memory bytes buffer."

Anchored allocation at 173d680 of size 1828
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 173eeb0 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Create a new buffered reader using the given readable raw IO object."

Anchored allocation at 173f4e0 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "A buffer for a writeable sequential RawIO object.

The constructor creates a BufferedWriter for the given writeable raw
stream. If the buffer_size is not given, it defaults to
DEFAULT_BUFFER_SIZE."

Anchored allocation at 173fb10 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "A buffered interface to random access streams.

The constructor creates a reader and writer for a seekable stream,
raw, given in the first argument. If the buffer_size is omitted it
defaults to DEFAULT_BUFFER_SIZE."

Anchored allocation at 1740140 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Character and line based layer over a BufferedIOBase object, buffer.

encoding gives the name of the encoding that the stream will be
decoded or encoded with. It defaults to locale.getpreferredencoding(False).

errors determines the strictness of encoding and decoding (see
help(codecs.Codec) or the documentation for codecs.register) and
defaults to "strict".

newline controls how line endings are handled. It can be None, '',
'\n', '\r', and '\r\n'.  It works as follows:

* On input, if newline is None, universal newlines mode is
  enabled. Lines in the input can end in '\n', '\r', or '\r\n', and
  these are translated into '\n' before being returned to the
  caller. If it is '', universal newline mode is enabled, but line
  endings are returned to the caller untranslated. If it has any of
  the other legal values, input lines are only terminated by the given
  string, and the line ending is returned to the caller untranslated.

* On output, if newline is None, any '\n' characters written are
  translated to the system default line separator, os.linesep. If
  newline is '' or '\n', no translation takes place. If newline is any
  of the other legal values, any '\n' characters written are translated
  to the given string.

If line_buffering is True, a call to flush is implied when a call to
write contains a newline character."

Anchored allocation at 1740770 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "The io module provides the Python interfaces to stream handling. The
builtin open function is defined in this module.

At the top of the I/O hierarchy is the abstract base class IOBase. It
defines the basic interface to a stream. Note, however, that there is no
separation between reading and writing to streams; implementations are
allowed to raise an IOError if they do not support a given operation.

Extending IOBase is RawIOBase which deals simply with the reading and
writing of raw bytes to a stream. FileIO subclasses RawIOBase to provide
an interface to OS files.

BufferedIOBase deals with buffering on a raw byte stream (RawIOBase). Its
subclasses, BufferedWriter, BufferedReader, and BufferedRWPair buffer
streams that are readable, writable, and both respectively.
BufferedRandom provides a buffered interface to random access
streams. BytesIO is a simple stream of in-memory bytes.

Another IOBase subclass, TextIOBase, deals with the encoding and decoding
of streams into text. TextIOWrapper, which extends it, is a buffered text
interface to a buffered raw stream (`BufferedIOBase`). Finally, StringIO
is an in-memory stream for text.

Argument names are not part of the specification, and only the arguments
of open() are intended to be used as keyword arguments.

data:

DEFAULT_BUFFER_SIZE

   An int containing the default buffer size used by the module's buffered
   I/O classes. open() uses the file's blksize (as obtained by os.stat) if
   possible.
"
"__name__" : "io"
"__package__" : ""

Anchored allocation at 1740da0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__name__" : "marshal"
"__doc__" : "This module contains functions that can read and write Python values in
a binary format. The format is specific to Python, but independent of
machine architecture issues.

Not all Python object types are supported; in general, only objects
whose value is independent from a particular invocation of Python can be
written and read by this module. The following types are supported:
None, integers, floating point numbers, strings, bytes, bytearrays,
tuples, lists, sets, dictionaries, and code objects, where it
should be understood that tuples, lists and dictionaries are only
supported as long as the values contained therein are themselves
supported; and recursive lists and dictionaries should not be written
(they will cause infinite loops).

Variables:

version -- indicates the format that the module uses. Version 0 is the
    historical format, version 1 shares interned strings and version 2
    uses a binary format for floating point numbers.
    Version 3 shares common object references (New in version 3.4).

Functions:

dump() -- write value to a file
load() -- read value from a file
dumps() -- write value to a string
loads() -- read value from a string"
"__package__" : ""

Anchored allocation at 1741420 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1741510 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1741c00 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1741f30 of size 628
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1742890 of size 628
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1742ec0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "waitid_result: Result from waitid.

This object may be accessed either as a tuple of
  (si_pid, si_uid, si_signo, si_status, si_code),
or via the attributes si_pid, si_uid, and so on.

See os.waitid for more information."

Anchored allocation at 17433b0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Current has only one field: sched_priority");

  sched_priority
    A scheduling parameter."

Anchored allocation at 17436d0 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "stat_result: Result from stat, fstat, or lstat.

This object may be accessed either as a tuple of
  (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime)
or via the attributes st_mode, st_ino, st_dev, st_nlink, st_uid, and so on.

Posix/windows: If your platform supports st_blksize, st_blocks, st_rdev,
or st_flags, they are available as attributes only.

See os.stat for more information."

Anchored allocation at 1743d00 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "statvfs_result: Result from statvfs or fstatvfs.

This object may be accessed either as a tuple of
  (bsize, frsize, blocks, bfree, bavail, files, ffree, favail, flag, namemax),
or via the attributes f_bsize, f_frsize, f_blocks, f_bfree, and so on.

See os.statvfs for more information."

Anchored allocation at 1744030 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "A tuple of (columns, lines) for holding terminal window size"

Anchored allocation at 17441e0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1744390 of size 3028
This allocation matches pattern PyDictKeysObject.
"__name__" : "posix"
"__doc__" : "This module provides access to operating system functionality that is
standardized by the C Standard and the POSIX standard (a thinly
disguised Unix interface).  Refer to the library manual and
corresponding Unix manual entries for more information on calls."
"__package__" : ""

Anchored allocation at 1752bc0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"platlib" : "{platbase}/lib64/python{py_version_short}/site-packages"
"scripts" : "{base}/bin"
"data" : "{base}"
"stdlib" : "{installed_base}/lib64lib/python{py_version_short}"
"platstdlib" : "{platbase}/lib64/python{py_version_short}"
"purelib" : "{base}/lib/python{py_version_short}/site-packages"
"platinclude" : "{installed_platbase}/include/python{py_version_short}{abiflags}"
"include" : "{installed_base}/include/python{py_version_short}{abiflags}"

Anchored allocation at 1753410 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Access to Python's configuration information."
"_BASE_PREFIX" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"__name__" : "sysconfig"
"_PY_VERSION" : "3.5.2"
"_PROJECT_BASE" : "/build/mts/toolchain/lin64/python-3.5.2-openssl1.0.2r/bin"
"_PREFIX" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"_PY_VERSION_SHORT" : "3.5"
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/sysconfig.py"
"pardir" : ".."
"_EXEC_PREFIX" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"_BASE_EXEC_PREFIX" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/sysconfig.cpython-35.pyc"
"__package__" : ""
"_PY_VERSION_SHORT_NO_DOT" : "35"

Anchored allocation at 17551b0 of size 6028
This allocation matches pattern PyDictKeysObject.
"SHLIB_SUFFIX" : ".so"
"PROFILE_TASK" : "-m test.regrtest --pgo -x test_asyncore test_gdb test_multiprocessing_fork test_multiprocessing_forkserver test_multiprocessing_main_handling test_multiprocessing_spawn test_subprocess"
"INSTSONAME" : "libpython3.5m.so.1.0"
"GRAMMAR_H" : "Include/graminit.h"
"DISTDIRS" : "Include Lib Misc Ext-dummy"
"NO_AS_NEEDED" : "-Wl,--no-as-needed"
"LIBOBJDIR" : "Python/"
"LDFLAGS" : "-Wl,--as-needed -Wl,--fatal-warnings -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-rpath,'$ORIGIN'/../lib64 -L/build/toolchain/lin64/tcl-8.5.9-1/lib -L/build/toolchain/lin64/xorg-7.4/lib64 -L/build/toolchain/lin64/ncurses-5.7-2/lib -L/build/toolchain/lin64/fontconfig-2.6.0/lib -L/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib -L/build/toolchain/lin64/readline-6.2/lib -L/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib -L/build/toolchain/lin64/gdbm-1.8.3/lib -L/build/toolchain/lin64/gdbm-1.8.3-compat/lib -L/build/toolchain/lin64/db-4.3.29/lib -L/build/toolchain/lin64/sqlite-3.3.6-fpic/lib -L/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -Wl,--fatal-warnings -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-rpath,'$$ORIGIN'/../lib64 -L/build/toolchain/lin64/tcl-8.5.9-1/lib -L/build/toolchain/lin64/xorg-7.4/lib64 -L/build/toolchain/lin64/ncurses-5.7-2/lib -L/build/toolchain/lin64/fontconfig-2.6.0/lib -L/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib -L/build/toolchain/lin64/readline-6.2/lib -L/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib -L/build/toolchain/lin64/gdbm-1.8.3/lib -L/build/toolchain/lin64/gdbm-1.8.3-compat/lib -L/build/toolchain/lin64/db-4.3.29/lib -L/build/toolchain/lin64/sqlite-3.3.6-fpic/lib -L/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-z,relro -Wl,-z,now"
"PY_CPPFLAGS" : "-I. -IInclude -I./Include -I/build/toolchain/lin64/ncurses-5.7-2/include -I/build/toolchain/lin64/ncurses-5.7-2/include/ncursesw -I/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/include -I/build/toolchain/lin64/readline-6.2/include -I/build/toolchain/lin64/gdbm-1.8.3/include -I/build/toolchain/lin64/gdbm-1.8.3-compat/include -I/build/toolchain/lin64/tcl-8.5.9-1/include -I/build/toolchain/lin64/xorg-7.4/include -I/build/toolchain/lin64/db-4.3.29/include -I/build/toolchain/lin64/sqlite-3.3.6-fpic/include -I/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/include  -I/build/toolchain/lin64/ncurses-5.7-2/include -I/build/toolchain/lin64/ncurses-5.7-2/include/ncursesw -I/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/include -I/build/toolchain/lin64/readline-6.2/include -I/build/toolchain/lin64/gdbm-1.8.3/include -I/build/toolchain/lin64/gdbm-1.8.3-compat/include -I/build/toolchain/lin64/tcl-8.5.9-1/include -I/build/toolchain/lin64/xorg-7.4/include -I/build/toolchain/lin64/db-4.3.29/include -I/build/toolchain/lin64/sqlite-3.3.6-fpic/include -I/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/include"
"VERSION" : "3.5"
"LN" : "ln"
"RUNSHARED" : "LD_LIBRARY_PATH=/build/mts/release/bora-13353791/cayman_python/build/release/lin64/python/build:/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64:/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64:/build/toolchain/lin64/fontconfig-2.6.0/lib:/build/toolchain/lin64/gdbm-1.8.3/lib:/build/mts/release/bora-13353791/compcache/cayman_expat/ob-5214877/linux64/lin64/lib:/build/toolchain/lin64/gdbm-1.8.3-compat/lib:/build/toolchain/lin64/xorg-7.4/lib64:/build/toolchain/lin64/sqlite-3.3.6-fpic/lib:/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib:/build/toolchain/lin64/readline-6.2/lib:/build/toolchain/lin64/ncurses-5.7-2/lib:/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib:/build/toolchain/lin64/db-4.3.29/lib:/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib:/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib"
"GRAMMAR_INPUT" : "./Grammar/Grammar"
"IO_H" : "Modules/_io/_iomodule.h"
"STRIPFLAG" : "-s"
"TESTPYTHON" : "LD_LIBRARY_PATH=/build/mts/release/bora-13353791/cayman_python/build/release/lin64/python/build:/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64:/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64:/build/toolchain/lin64/fontconfig-2.6.0/lib:/build/toolchain/lin64/gdbm-1.8.3/lib:/build/mts/release/bora-13353791/compcache/cayman_expat/ob-5214877/linux64/lin64/lib:/build/toolchain/lin64/gdbm-1.8.3-compat/lib:/build/toolchain/lin64/xorg-7.4/lib64:/build/toolchain/lin64/sqlite-3.3.6-fpic/lib:/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib:/build/toolchain/lin64/readline-6.2/lib:/build/toolchain/lin64/ncurses-5.7-2/lib:/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib:/build/toolchain/lin64/db-4.3.29/lib:/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib:/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib ./python"
"OPCODE_H" : "./Include/opcode.h"
"ASDLGEN" : "python ./Parser/asdl_c.py"
"PGEN" : "Parser/pgen"
"LLVM_PROF_MERGER" : "true"
"ARFLAGS" : "rc"
"MODOBJS" : "Modules/_threadmodule.o  Modules/signalmodule.o  Modules/posixmodule.o  Modules/errnomodule.o  Modules/pwdmodule.o  Modules/_sre.o  Modules/_codecsmodule.o  Modules/_weakref.o  Modules/_functoolsmodule.o  Modules/_operator.o  Modules/_collectionsmodule.o  Modules/itertoolsmodule.o  Modules/atexitmodule.o  Modules/_stat.o  Modules/timemodule.o  Modules/_localemodule.o  Modules/_iomodule.o Modules/iobase.o Modules/fileio.o Modules/bytesio.o Modules/bufferedio.o Modules/textio.o Modules/stringio.o  Modules/zipimport.o  Modules/faulthandler.o  Modules/_tracemalloc.o Modules/hashtable.o  Modules/symtablemodule.o  Modules/zlibmodule.o  Modules/xxsubtype.o"
"LDLIBRARYDIR" : ""
"abs_builddir" : "/build/mts/release/bora-13353791/cayman_python/build/release/lin64/python/build"
"LIBPC" : "/build/mts/release/bora-13353791/publish/lin64/lib64/pkgconfig"
"PARSER_HEADERS" : "\"
"TIMEMODULE_LIB" : "rt"
"MACOSX_DEPLOYMENT_TARGET" : ""
"DESTSHARED" : "/build/mts/release/bora-13353791/publish/lin64/lib64/python3.5/lib-dynload"
"DESTLIB" : "/build/mts/release/bora-13353791/publish/lin64/lib64/python3.5"
"LLVM_PROF_FILE" : ""
"PGENOBJS" : "\ \"
"AST_H" : "Include/Python-ast.h"
"abs_srcdir" : "/build/mts/release/bora-13353791/cayman_python/build/release/lin64/python/build"
"LDLIBRARY" : "libpython3.5m.so"
"INSTALL" : "/build/toolchain/lin64/coreutils-8.6/bin/install -c"
"SITEPATH" : ""
"LDCXXSHARED" : "gcc -pthread -shared"
"EXTRATESTOPTS" : ""
"SHLIBS" : "-lpthread -ldl  -lutil -lrt"
"LIBRARY_OBJS" : "\"
"RESSRCDIR" : "Mac/Resources/framework"
"DISTFILES" : "README ChangeLog configure configure.ac acconfig.h pyconfig.h.in Makefile.pre.in"
"STRICT_SYSV_CURSES" : "/* Don't use ncurses extensions */"
"PYTHONPATH" : ":plat-linux"
"AST_C" : "Python/Python-ast.c"
"PY3LIBRARY" : "libpython3.so"
"PY_FORMAT_SIZE_T" : ""z""
"BASECPPFLAGS" : ""
"UNIVERSALSDK" : ""
"BINDIR" : "/build/mts/release/bora-13353791/publish/lin64/bin"
"cross_compiling" : "no"
"TESTOPTS" : ""
"TCLTK_INCLUDES" : ""
"OPCODE_H_SCRIPT" : "./Tools/scripts/generate_opcode_h.py"
"CONFINCLUDEDIR" : "/build/mts/release/bora-13353791/publish/lin64/include"
"BASEMODLIBS" : ""
"CONFIG_ARGS" : "'--enable-shared' '--enable-ipv6' '--cache-file=linux.cache' '--enable-unicode=ucs4' '--with-fpectl' '--with-atfuncs=yes' '--with-ensurepip=no' '--prefix=/build/mts/release/bora-13353791/publish/lin64' '--libdir=/build/mts/release/bora-13353791/publish/lin64/lib64' 'CC=/build/toolchain/lin32/gcc-4.4.3/bin/x86_64-linux5.0-gcc --sysroot=/build/toolchain/lin64/RHEL5/' 'CFLAGS=-g -ggdb -Wall -Wextra -Wno-missing-field-initializers -fPIC -fno-strict-aliasing -march=x86-64 -fno-builtin' 'LDFLAGS=-Wl,--as-needed -Wl,--fatal-warnings -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-rpath,'\''$$ORIGIN'\''/../lib64 -L/build/toolchain/lin64/tcl-8.5.9-1/lib -L/build/toolchain/lin64/xorg-7.4/lib64 -L/build/toolchain/lin64/ncurses-5.7-2/lib -L/build/toolchain/lin64/fontconfig-2.6.0/lib -L/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib -L/build/toolchain/lin64/readline-6.2/lib -L/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib -L/build/toolchain/lin64/gdbm-1.8.3/lib -L/build/toolchain/lin64/gdbm-1.8.3-compat/lib -L/build/toolchain/lin64/db-4.3.29/lib -L/build/toolchain/lin64/sqlite-3.3.6-fpic/lib -L/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-z,relro -Wl,-z,now' 'CPPFLAGS= -I/build/toolchain/lin64/ncurses-5.7-2/include -I/build/toolchain/lin64/ncurses-5.7-2/include/ncursesw -I/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/include -I/build/toolchain/lin64/readline-6.2/include -I/build/toolchain/lin64/gdbm-1.8.3/include -I/build/toolchain/lin64/gdbm-1.8.3-compat/include -I/build/toolchain/lin64/tcl-8.5.9-1/include -I/build/toolchain/lin64/xorg-7.4/include -I/build/toolchain/lin64/db-4.3.29/include -I/build/toolchain/lin64/sqlite-3.3.6-fpic/include -I/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/include'"
"OPCODETARGETGEN" : "\"
"PY_LDFLAGS" : "-Wl,--as-needed -Wl,--fatal-warnings -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-rpath,'$ORIGIN'/../lib64 -L/build/toolchain/lin64/tcl-8.5.9-1/lib -L/build/toolchain/lin64/xorg-7.4/lib64 -L/build/toolchain/lin64/ncurses-5.7-2/lib -L/build/toolchain/lin64/fontconfig-2.6.0/lib -L/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib -L/build/toolchain/lin64/readline-6.2/lib -L/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib -L/build/toolchain/lin64/gdbm-1.8.3/lib -L/build/toolchain/lin64/gdbm-1.8.3-compat/lib -L/build/toolchain/lin64/db-4.3.29/lib -L/build/toolchain/lin64/sqlite-3.3.6-fpic/lib -L/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -Wl,--fatal-warnings -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-rpath,'$$ORIGIN'/../lib64 -L/build/toolchain/lin64/tcl-8.5.9-1/lib -L/build/toolchain/lin64/xorg-7.4/lib64 -L/build/toolchain/lin64/ncurses-5.7-2/lib -L/build/toolchain/lin64/fontconfig-2.6.0/lib -L/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib -L/build/toolchain/lin64/readline-6.2/lib -L/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib -L/build/toolchain/lin64/gdbm-1.8.3/lib -L/build/toolchain/lin64/gdbm-1.8.3-compat/lib -L/build/toolchain/lin64/db-4.3.29/lib -L/build/toolchain/lin64/sqlite-3.3.6-fpic/lib -L/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-z,relro -Wl,-z,now"
"LIBDEST" : "/build/mts/release/bora-13353791/publish/lin64/lib64/python3.5"
"LIBOBJS" : ""
"MACHDEPS" : "plat-linux"
"BYTESTR_DEPS" : "\"
"PYTHON" : "python"
"XMLLIBSUBDIRS" : "xml xml/dom xml/etree xml/parsers xml/sax"
"INCLDIRSTOMAKE" : "/build/mts/release/bora-13353791/publish/lin64/include /build/mts/release/bora-13353791/publish/lin64/include /build/mts/release/bora-13353791/publish/lin64/include/python3.5m /build/mts/release/bora-13353791/publish/lin64/include/python3.5m"
"CONFIGURE_CPPFLAGS" : "-I/build/toolchain/lin64/ncurses-5.7-2/include -I/build/toolchain/lin64/ncurses-5.7-2/include/ncursesw -I/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/include -I/build/toolchain/lin64/readline-6.2/include -I/build/toolchain/lin64/gdbm-1.8.3/include -I/build/toolchain/lin64/gdbm-1.8.3-compat/include -I/build/toolchain/lin64/tcl-8.5.9-1/include -I/build/toolchain/lin64/xorg-7.4/include -I/build/toolchain/lin64/db-4.3.29/include -I/build/toolchain/lin64/sqlite-3.3.6-fpic/include -I/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/include"
"EXTRA_CFLAGS" : ""
"LIBM" : "-lm"
"ABIFLAGS" : "m"
"LIBFFI_INCLUDEDIR" : ""
"CC" : "/build/toolchain/lin32/gcc-4.4.3/bin/x86_64-linux5.0-gcc --sysroot=/build/toolchain/lin64/RHEL5/ -pthread"
"LINKCC" : "/build/toolchain/lin32/gcc-4.4.3/bin/x86_64-linux5.0-gcc --sysroot=/build/toolchain/lin64/RHEL5/ -pthread"
"LIBSUBDIRS" : "tkinter tkinter/test tkinter/test/test_tkinter \"
"MACHDESTLIB" : "/build/mts/release/bora-13353791/publish/lin64/lib64/python3.5"
"DIST" : "README ChangeLog configure configure.ac acconfig.h pyconfig.h.in Makefile.pre.in Include Lib Misc Ext-dummy"
"SRC_GDB_HOOKS" : "./Tools/gdb/libpython.py"
"SIGNAL_OBJS" : ""
"AR" : "ar"
"PGO_PROF_USE_FLAG" : "-fprofile-use -fprofile-correction"
"PYTHON_OBJS" : "\"
"THREADOBJ" : "Python/thread.o"
"INCLUDEDIR" : "/build/mts/release/bora-13353791/publish/lin64/include"
"QUICKTESTOPTS" : "-x test_subprocess test_io test_lib2to3 \"
"DLLLIBRARY" : ""
"DYNLOADFILE" : "dynload_shlib.o"
"GRAMMAR_C" : "Python/graminit.c"
"LIBDIR" : "/build/mts/release/bora-13353791/publish/lin64/lib64"
"BUILDEXE" : ""
"PURIFY" : ""
"HGVERSION" : ""
"OPT" : "-DNDEBUG -g  -O3 -Wall -Wstrict-prototypes"
"ENSUREPIP" : "no"
"INSTALL_PROGRAM" : "/build/toolchain/lin64/coreutils-8.6/bin/install -c"
"LLVM_PROF_ERR" : "no"
"GNULD" : "yes"
"CPPFLAGS" : "-I. -IInclude -I./Include -I/build/toolchain/lin64/ncurses-5.7-2/include -I/build/toolchain/lin64/ncurses-5.7-2/include/ncursesw -I/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/include -I/build/toolchain/lin64/readline-6.2/include -I/build/toolchain/lin64/gdbm-1.8.3/include -I/build/toolchain/lin64/gdbm-1.8.3-compat/include -I/build/toolchain/lin64/tcl-8.5.9-1/include -I/build/toolchain/lin64/xorg-7.4/include -I/build/toolchain/lin64/db-4.3.29/include -I/build/toolchain/lin64/sqlite-3.3.6-fpic/include -I/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/include  -I/build/toolchain/lin64/ncurses-5.7-2/include -I/build/toolchain/lin64/ncurses-5.7-2/include/ncursesw -I/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/include -I/build/toolchain/lin64/readline-6.2/include -I/build/toolchain/lin64/gdbm-1.8.3/include -I/build/toolchain/lin64/gdbm-1.8.3-compat/include -I/build/toolchain/lin64/tcl-8.5.9-1/include -I/build/toolchain/lin64/xorg-7.4/include -I/build/toolchain/lin64/db-4.3.29/include -I/build/toolchain/lin64/sqlite-3.3.6-fpic/include -I/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/include"
"CONFIGURE_CFLAGS_NODIST" : "-Werror=declaration-after-statement"
"DLINCLDIR" : "."
"PYTHONFRAMEWORKINSTALLDIR" : ""
"UNICODE_DEPS" : "\"
"SHELL" : "/bin/sh"
"LDLAST" : ""
"PYTHON_FOR_BUILD" : "./python -E"
"INSTALL_SHARED" : "/build/toolchain/lin64/coreutils-8.6/bin/install -c -m 555"
"PYTHONFRAMEWORK" : ""
"LIBS" : "-lpthread -ldl  -lutil -lrt"
"CFLAGS" : "-fno-strict-aliasing -Wsign-compare -DNDEBUG -g  -O3 -Wall -Wstrict-prototypes -g -ggdb -Wall -Wextra -Wno-missing-field-initializers -fPIC -fno-strict-aliasing -march=x86-64 -fno-builtin -g -ggdb -Wall -Wextra -Wno-missing-field-initializers -fPIC -fno-strict-aliasing -march=x86-64 -fno-builtin"
"HGTAG" : ""
"PYTHON_HEADERS" : "\"
"INSTALL_SCRIPT" : "/build/toolchain/lin64/coreutils-8.6/bin/install -c"
"MACHDEPPATH" : ":plat-linux"
"BLDSHARED" : "/build/toolchain/lin32/gcc-4.4.3/bin/x86_64-linux5.0-gcc --sysroot=/build/toolchain/lin64/RHEL5/ -pthread -shared -Wl,--as-needed -Wl,--fatal-warnings -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-rpath,'$ORIGIN'/../lib64 -L/build/toolchain/lin64/tcl-8.5.9-1/lib -L/build/toolchain/lin64/xorg-7.4/lib64 -L/build/toolchain/lin64/ncurses-5.7-2/lib -L/build/toolchain/lin64/fontconfig-2.6.0/lib -L/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib -L/build/toolchain/lin64/readline-6.2/lib -L/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib -L/build/toolchain/lin64/gdbm-1.8.3/lib -L/build/toolchain/lin64/gdbm-1.8.3-compat/lib -L/build/toolchain/lin64/db-4.3.29/lib -L/build/toolchain/lin64/sqlite-3.3.6-fpic/lib -L/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -Wl,--fatal-warnings -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-rpath,'$$ORIGIN'/../lib64 -L/build/toolchain/lin64/tcl-8.5.9-1/lib -L/build/toolchain/lin64/xorg-7.4/lib64 -L/build/toolchain/lin64/ncurses-5.7-2/lib -L/build/toolchain/lin64/fontconfig-2.6.0/lib -L/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib -L/build/toolchain/lin64/readline-6.2/lib -L/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib -L/build/toolchain/lin64/gdbm-1.8.3/lib -L/build/toolchain/lin64/gdbm-1.8.3-compat/lib -L/build/toolchain/lin64/db-4.3.29/lib -L/build/toolchain/lin64/sqlite-3.3.6-fpic/lib -L/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-z,relro -Wl,-z,now"
"AST_ASDL" : "./Parser/Python.asdl"
"BLDLIBRARY" : "-L. -lpython3.5m"
"DESTDIRS" : "/build/mts/release/bora-13353791/publish/lin64 /build/mts/release/bora-13353791/publish/lin64/lib64 /build/mts/release/bora-13353791/publish/lin64/lib64/python3.5 /build/mts/release/bora-13353791/publish/lin64/lib64/python3.5/lib-dynload"
"TESTRUNNER" : "LD_LIBRARY_PATH=/build/mts/release/bora-13353791/cayman_python/build/release/lin64/python/build:/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64:/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64:/build/toolchain/lin64/fontconfig-2.6.0/lib:/build/toolchain/lin64/gdbm-1.8.3/lib:/build/mts/release/bora-13353791/compcache/cayman_expat/ob-5214877/linux64/lin64/lib:/build/toolchain/lin64/gdbm-1.8.3-compat/lib:/build/toolchain/lin64/xorg-7.4/lib64:/build/toolchain/lin64/sqlite-3.3.6-fpic/lib:/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib:/build/toolchain/lin64/readline-6.2/lib:/build/toolchain/lin64/ncurses-5.7-2/lib:/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib:/build/toolchain/lin64/db-4.3.29/lib:/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib:/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib ./python ./Tools/scripts/run_tests.py"
"SOABI" : "cpython-35m-x86_64-linux-gnu"
"RETSIGTYPE" : "void"
"PGOBJS" : "\"
"exec_prefix" : "/build/mts/release/bora-13353791/publish/lin64"
"LDSHARED" : "/build/toolchain/lin32/gcc-4.4.3/bin/x86_64-linux5.0-gcc --sysroot=/build/toolchain/lin64/RHEL5/ -pthread -shared -Wl,--as-needed -Wl,--fatal-warnings -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-rpath,'$ORIGIN'/../lib64 -L/build/toolchain/lin64/tcl-8.5.9-1/lib -L/build/toolchain/lin64/xorg-7.4/lib64 -L/build/toolchain/lin64/ncurses-5.7-2/lib -L/build/toolchain/lin64/fontconfig-2.6.0/lib -L/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib -L/build/toolchain/lin64/readline-6.2/lib -L/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib -L/build/toolchain/lin64/gdbm-1.8.3/lib -L/build/toolchain/lin64/gdbm-1.8.3-compat/lib -L/build/toolchain/lin64/db-4.3.29/lib -L/build/toolchain/lin64/sqlite-3.3.6-fpic/lib -L/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -Wl,--fatal-warnings -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-rpath,'$$ORIGIN'/../lib64 -L/build/toolchain/lin64/tcl-8.5.9-1/lib -L/build/toolchain/lin64/xorg-7.4/lib64 -L/build/toolchain/lin64/ncurses-5.7-2/lib -L/build/toolchain/lin64/fontconfig-2.6.0/lib -L/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib -L/build/toolchain/lin64/readline-6.2/lib -L/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib -L/build/toolchain/lin64/gdbm-1.8.3/lib -L/build/toolchain/lin64/gdbm-1.8.3-compat/lib -L/build/toolchain/lin64/db-4.3.29/lib -L/build/toolchain/lin64/sqlite-3.3.6-fpic/lib -L/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-z,relro -Wl,-z,now"
"ARCH" : "x86_64"
"MACHDEP_OBJS" : ""
"PGO_PROF_GEN_FLAG" : "-fprofile-generate"
"CONFIGFILES" : "configure configure.ac acconfig.h pyconfig.h.in Makefile.pre.in"
"MAKESETUP" : "./Modules/makesetup"
"PYTHONFRAMEWORKDIR" : "no-framework"
"OBJECT_OBJS" : "\"
"MULTIARCH" : ""
"ASDLGEN_FILES" : "./Parser/asdl.py ./Parser/asdl_c.py"
"prefix" : "/build/mts/release/bora-13353791/publish/lin64"
"COVERAGE_REPORT" : "/build/mts/release/bora-13353791/cayman_python/build/release/lin64/python/build/lcov-report"
"OTHER_LIBTOOL_OPT" : ""
"CONFIGURE_CFLAGS" : "-g -ggdb -Wall -Wextra -Wno-missing-field-initializers -fPIC -fno-strict-aliasing -march=x86-64 -fno-builtin"
"CFLAGS_NODIST" : ""
"POBJS" : "\"
"MKDIR_P" : "/build/toolchain/lin64/coreutils-8.6/bin/mkdir -p"
"EXT_SUFFIX" : ".cpython-35m-x86_64-linux-gnu.so"
"LINKFORSHARED" : "-Xlinker -export-dynamic"
"SUBDIRS" : ""
"INCLUDEPY" : "/build/mts/release/bora-13353791/publish/lin64/include/python3.5m"
"PGENSRCS" : "\ \"
"AST_C_DIR" : "Python"
"LDVERSION" : "3.5m"
"PYTHONFRAMEWORKPREFIX" : ""
"COVERAGE_INFO" : "/build/mts/release/bora-13353791/cayman_python/build/release/lin64/python/build/coverage.info"
"SUBDIRSTOO" : "Include Lib Misc"
"AST_H_DIR" : "Include"
"SRCDIRS" : "Parser Grammar Objects Python Modules Mac Programs"
"BUILD_GNU_TYPE" : "x86_64-unknown-linux-gnu"
"BUILDPYTHON" : "python"
"TCLTK_LIBS" : ""
"EXE" : ""
"TESTPYTHONOPTS" : ""
"RANLIB" : "ranlib"
"READELF" : "readelf"
"MACHDEP" : "linux"
"INSTALL_DATA" : "/build/toolchain/lin64/coreutils-8.6/bin/install -c -m 644"
"DESTPATH" : ""
"PGSRCS" : "\"
"PY_CORE_CFLAGS" : "-fno-strict-aliasing -Wsign-compare -DNDEBUG -g  -O3 -Wall -Wstrict-prototypes -g -ggdb -Wall -Wextra -Wno-missing-field-initializers -fPIC -fno-strict-aliasing -march=x86-64 -fno-builtin -g -ggdb -Wall -Wextra -Wno-missing-field-initializers -fPIC -fno-strict-aliasing -march=x86-64 -fno-builtin -Werror=declaration-after-statement -I. -IInclude -I./Include -I/build/toolchain/lin64/ncurses-5.7-2/include -I/build/toolchain/lin64/ncurses-5.7-2/include/ncursesw -I/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/include -I/build/toolchain/lin64/readline-6.2/include -I/build/toolchain/lin64/gdbm-1.8.3/include -I/build/toolchain/lin64/gdbm-1.8.3-compat/include -I/build/toolchain/lin64/tcl-8.5.9-1/include -I/build/toolchain/lin64/xorg-7.4/include -I/build/toolchain/lin64/db-4.3.29/include -I/build/toolchain/lin64/sqlite-3.3.6-fpic/include -I/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/include  -I/build/toolchain/lin64/ncurses-5.7-2/include -I/build/toolchain/lin64/ncurses-5.7-2/include/ncursesw -I/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/include -I/build/toolchain/lin64/readline-6.2/include -I/build/toolchain/lin64/gdbm-1.8.3/include -I/build/toolchain/lin64/gdbm-1.8.3-compat/include -I/build/toolchain/lin64/tcl-8.5.9-1/include -I/build/toolchain/lin64/xorg-7.4/include -I/build/toolchain/lin64/db-4.3.29/include -I/build/toolchain/lin64/sqlite-3.3.6-fpic/include -I/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/include -I/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/include -fPIC -DPy_BUILD_CORE"
"HOST_GNU_TYPE" : "x86_64-unknown-linux-gnu"
"BINLIBDEST" : "/build/mts/release/bora-13353791/publish/lin64/lib64/python3.5"
"IO_OBJS" : "\"
"PLATDIR" : "plat-linux"
"PY_CFLAGS_NODIST" : "-Werror=declaration-after-statement"
"OPCODE_H_DIR" : "./Include"
"PY_CFLAGS" : "-fno-strict-aliasing -Wsign-compare -DNDEBUG -g  -O3 -Wall -Wstrict-prototypes -g -ggdb -Wall -Wextra -Wno-missing-field-initializers -fPIC -fno-strict-aliasing -march=x86-64 -fno-builtin -g -ggdb -Wall -Wextra -Wno-missing-field-initializers -fPIC -fno-strict-aliasing -march=x86-64 -fno-builtin"
"PARSER_OBJS" : "\ Parser/myreadline.o Parser/parsetok.o Parser/tokenizer.o"
"LIBPL" : "/build/mts/release/bora-13353791/publish/lin64/lib/python3.5/config-3.5m"
"LIBRARY_OBJS_OMIT_FROZEN" : "\"
"datarootdir" : "/build/mts/release/bora-13353791/publish/lin64/share"
"CONFIGURE_LDFLAGS" : "-Wl,--as-needed -Wl,--fatal-warnings -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-rpath,'$ORIGIN'/../lib64 -L/build/toolchain/lin64/tcl-8.5.9-1/lib -L/build/toolchain/lin64/xorg-7.4/lib64 -L/build/toolchain/lin64/ncurses-5.7-2/lib -L/build/toolchain/lin64/fontconfig-2.6.0/lib -L/build/mts/release/bora-13353791/compcache/cayman_freetype/ob-6055210/linux64/lin64/lib -L/build/toolchain/lin64/readline-6.2/lib -L/build/mts/release/bora-13353791/compcache/cayman_xz/ob-5132800/linux64/lin64/lib -L/build/toolchain/lin64/gdbm-1.8.3/lib -L/build/toolchain/lin64/gdbm-1.8.3-compat/lib -L/build/toolchain/lin64/db-4.3.29/lib -L/build/toolchain/lin64/sqlite-3.3.6-fpic/lib -L/build/mts/release/bora-13353791/compcache/cayman_bzip2/ob-5176645/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_libpng/ob-4524110/linux64/lin64/lib -L/build/mts/release/bora-13353791/compcache/cayman_openssl/ob-12677144/linux64/lin64/lib64 -L/build/mts/release/bora-13353791/compcache/cayman_zlib/ob-6046996/linux64/lin64/lib64 -Wl,-z,relro -Wl,-z,now"
"CXX" : "gcc -pthread"
"COVERAGE_REPORT_OPTIONS" : "--no-branch-coverage --title "CPython lcov report""
"SCRIPTDIR" : "/build/mts/release/bora-13353791/publish/lin64/lib64"
"SGI_ABI" : ""
"OPCODE_H_GEN" : "python  ./Tools/scripts/generate_opcode_h.py ./Lib/opcode.py ./Include/opcode.h"
"MAINCC" : "/build/toolchain/lin32/gcc-4.4.3/bin/x86_64-linux5.0-gcc --sysroot=/build/toolchain/lin64/RHEL5/ -pthread"
"LIBC" : ""
"LIPO_32BIT_FLAGS" : ""
"OPCODETARGETS_H" : "\"
"TESTPATH" : ""
"CONFINCLUDEPY" : "/build/mts/release/bora-13353791/publish/lin64/include/python3.5m"
"LIB" : "lib64"
"MANDIR" : "/build/mts/release/bora-13353791/publish/lin64/share/man"
"LOCALMODLIBS" : "-L/build/mts/release/bora-13353791/publish/lin64/lib -lz"
"EXTRAMACHDEPPATH" : ""
"LIBRARY" : "libpython3.5m.a"
"BASECFLAGS" : "-fno-strict-aliasing -Wsign-compare"
"CCSHARED" : "-fPIC"
"SYSLIBS" : "-lm"
"COREPYTHONPATH" : ":plat-linux"
"PY_FORMAT_LONG_LONG" : ""ll""
"CFLAGSFORSHARED" : "-fPIC"
"HGBRANCH" : ""
"PSRCS" : "\"
"MODULE_OBJS" : "\"
"MODLIBS" : "-L/build/mts/release/bora-13353791/publish/lin64/lib -lz"
"srcdir" : "."
"OPCODETARGETGEN_FILES" : "\"

Anchored allocation at 1761400 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : " StreamRecoder instances translate data from one encoding to another.

        They use the complete set of APIs returned by the
        codecs.lookup() function to implement their task.

        Data written to the StreamRecoder is first decoded into an
        intermediate format (depending on the "decode" codec) and then
        written to the underlying stream using an instance of the provided
        Writer class.

        In the other direction, data is read from the underlying stream using
        a Reader instance and then encoded and returned to the caller.

    "
"file_encoding" : "unknown"
"data_encoding" : "unknown"
"__module__" : "codecs"

Anchored allocation at 1762030 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1762470 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1762560 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17629a0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1762a90 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1762b20 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings.utf_8"

Anchored allocation at 1762fc0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17630b0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1763b10 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1763c00 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17640a0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1764540 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17649e0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1764a70 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1764f10 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1764fa0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1765440 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1765530 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17655c0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1765a60 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1765af0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1765f90 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1766020 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17664c0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1766550 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17669f0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1766a80 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1766f20 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1766fb0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17670d0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1767570 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1767600 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1767aa0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1767b30 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1767fd0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1768060 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1768500 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1768590 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1768a30 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1768ac0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1768f60 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1768ff0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17690e0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1769170 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1769640 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17696d0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1769b70 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1769c00 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176a0a0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176a130 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176a5d0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176a660 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176ab00 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176ab90 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176b030 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176b0c0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176b560 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176b5f0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176ba90 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176bb20 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176bfc0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176c050 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176c4f0 of size 628
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176d280 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176d310 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176d7b0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176d840 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176dce0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176ddd0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176de60 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176e300 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176e390 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176e830 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176e8c0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176ed60 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176edf0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176f290 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176f320 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176f7c0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176f850 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176f970 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 176fe10 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 176fea0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1770340 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17703d0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1770870 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1770900 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1770da0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1770e30 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17712d0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1771360 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1771800 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1771890 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1771980 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1771a10 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1771ee0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1771f70 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1772410 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17724a0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1772940 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17729d0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1772e70 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1772f00 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17733a0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1773430 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17738d0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1773960 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1773e00 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1773e90 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1774330 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17743c0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1774860 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17748f0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1774d90 of size 628
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1775b20 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1775bb0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1776050 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17760e0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1776580 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1776610 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1776ab0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1776b40 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1776fe0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1777070 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1777510 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1777600 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1777690 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1777b30 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1777bc0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1778060 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17780f0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1778590 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1778620 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1778ac0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1778b50 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1778ff0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17791a0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1779640 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17796d0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1779b70 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1779c60 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1779cf0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177a190 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177a220 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177a6c0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177a750 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177abf0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177ac80 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177ada0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177b240 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177b330 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177b3c0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177b860 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177b8f0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177bd90 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177be20 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177c2c0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177c3b0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177c440 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177c8e0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177c970 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177ce10 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177cea0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177d340 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177d3d0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177d870 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177d900 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177dda0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177de30 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177df50 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177e3f0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177e480 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177e920 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177e9b0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177ee50 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177eee0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177f380 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177f410 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177f8b0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 177f940 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 177fde0 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17804c0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1780550 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17809f0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1780a80 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1780f20 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1781010 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17810a0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1781540 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17815d0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1781a70 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1781b00 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1781fa0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1782030 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17824d0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1782560 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1782a00 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1782af0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1782b80 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1783020 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17830b0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1783550 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17835e0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1783a80 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1783b10 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1783fb0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1784040 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17844e0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1784690 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1784b30 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1784bc0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1785060 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17850f0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1785590 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1785620 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1785ac0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1785b50 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1785ff0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1786080 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1786520 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17865b0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1786a50 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1786b40 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1786bd0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1787070 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1787750 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17877e0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 1787c80 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1787d10 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17881b0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1788240 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_ast"

Anchored allocation at 17886e0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1789010 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "
    This subclass of IncrementalEncoder can be used as the baseclass for an
    incremental encoder if the encoder must keep some of the output in a
    buffer between calls to encode().
    "
"__module__" : "codecs"

Anchored allocation at 17896f0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1789780 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1789870 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1789930 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "
    An IncrementalDecoder decodes an input in multiple steps. The input can
    be passed piece by piece to the decode() method. The IncrementalDecoder
    remembers the state of the decoding process between calls to decode().
    "
"__module__" : "codecs"

Anchored allocation at 178a010 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 178a0a0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "
    This subclass of IncrementalDecoder can be used as the baseclass for an
    incremental decoder if the decoder must be able to handle incomplete
    byte sequences.
    "
"__module__" : "codecs"

Anchored allocation at 178aee0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings.utf_8"

Anchored allocation at 178afd0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings.utf_8"

Anchored allocation at 178b180 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings.utf_8"

Anchored allocation at 178b620 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 178b6b0 of size 328
This allocation matches pattern PyDictKeysObject.
"__name__" : "encodings.utf_8"
"__doc__" : " Python 'utf-8' Codec


Written by Marc-Andre Lemburg (mal@lemburg.com).

(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.

"
"__package__" : "encodings"
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/encodings/utf_8.py"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/encodings/__pycache__/utf_8.cpython-35.pyc"

Anchored allocation at 178b9e0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 178ba70 of size 98
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 178bb10 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Codec details when looking up the codec registry"
"__module__" : "codecs"

Anchored allocation at 178c070 of size e8
This allocation matches pattern PyDictKeysObject.
"name" : "<stdout>"

Anchored allocation at 179e080 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "This module provides mechanisms to use signal handlers in Python.

Functions:

alarm() -- cause SIGALRM after a specified time [Unix only]
setitimer() -- cause a signal (described below) after a specified
               float time and the timer may restart then [Unix only]
getitimer() -- get current value of timer [Unix only]
signal() -- set the action for a given signal
getsignal() -- get the signal action for a given signal
pause() -- wait until a signal arrives [Unix only]
default_int_handler() -- default SIGINT handler

signal constants:
SIG_DFL -- used to refer to the system default handler
SIG_IGN -- used to ignore the signal
NSIG -- number of defined signals
SIGINT, SIGTERM, etc. -- signal numbers

itimer constants:
ITIMER_REAL -- decrements in real time, and delivers SIGALRM upon
               expiration
ITIMER_VIRTUAL -- decrements only when the process is executing,
               and delivers SIGVTALRM upon expiration
ITIMER_PROF -- decrements both when the process is executing and
               when the system is executing on behalf of the process.
               Coupled with ITIMER_VIRTUAL, this timer is usually
               used to profile the time spent by the application
               in user and kernel space. SIGPROF is delivered upon
               expiration.


*** IMPORTANT NOTICE ***
A signal handler function is called with two arguments:
the first is the signal number, the second is the interrupted stack frame."
"__name__" : "_signal"
"__package__" : ""

Anchored allocation at 179ecb0 of size 1828
This allocation matches pattern PyDictKeysObject.
"__doc__" : "This module provides mechanisms to use signal handlers in Python.

Functions:

alarm() -- cause SIGALRM after a specified time [Unix only]
setitimer() -- cause a signal (described below) after a specified
               float time and the timer may restart then [Unix only]
getitimer() -- get current value of timer [Unix only]
signal() -- set the action for a given signal
getsignal() -- get the signal action for a given signal
pause() -- wait until a signal arrives [Unix only]
default_int_handler() -- default SIGINT handler

signal constants:
SIG_DFL -- used to refer to the system default handler
SIG_IGN -- used to ignore the signal
NSIG -- number of defined signals
SIGINT, SIGTERM, etc. -- signal numbers

itimer constants:
ITIMER_REAL -- decrements in real time, and delivers SIGALRM upon
               expiration
ITIMER_VIRTUAL -- decrements only when the process is executing,
               and delivers SIGVTALRM upon expiration
ITIMER_PROF -- decrements both when the process is executing and
               when the system is executing on behalf of the process.
               Coupled with ITIMER_VIRTUAL, this timer is usually
               used to profile the time spent by the application
               in user and kernel space. SIGPROF is delivered upon
               expiration.


*** IMPORTANT NOTICE ***
A signal handler function is called with two arguments:
the first is the signal number, the second is the interrupted stack frame."
"__name__" : "_signal"

Anchored allocation at 17a0c40 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a0cd0 of size 328
This allocation matches pattern PyDictKeysObject.
"__name__" : "encodings.latin_1"
"__doc__" : " Python 'latin-1' Codec


Written by Marc-Andre Lemburg (mal@lemburg.com).

(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.

"
"__package__" : "encodings"
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/encodings/latin_1.py"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/encodings/__pycache__/latin_1.cpython-35.pyc"

Anchored allocation at 17a13b0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a1850 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a18e0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings.latin_1"

Anchored allocation at 17a1d80 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a1e70 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a1f60 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a1ff0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a2170 of size e8
This allocation matches pattern PyDictKeysObject.
"mode" : "w"

Anchored allocation at 17a2470 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a2560 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a2620 of size 628
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a3000 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "
    A decorator indicating abstract staticmethods.

    Similar to abstractmethod.

    Usage:

        class C(metaclass=ABCMeta):
            @abstractstaticmethod
            def my_abstract_staticmethod(...):
                ...

    'abstractstaticmethod' is deprecated. Use 'staticmethod' with
    'abstractmethod' instead.
    "
"__module__" : "abc"

Anchored allocation at 17a31b0 of size 328
This allocation matches pattern PyDictKeysObject.
"__name__" : "abc"
"__doc__" : "Abstract Base Classes (ABCs) according to PEP 3119."
"__package__" : ""
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/abc.py"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/abc.cpython-35.pyc"

Anchored allocation at 17a3c10 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "
    A decorator indicating abstract properties.

    Requires that the metaclass is ABCMeta or derived from it.  A
    class that has a metaclass derived from ABCMeta cannot be
    instantiated unless all of its abstract properties are overridden.
    The abstract properties can be called using any of the normal
    'super' call mechanisms.

    Usage:

        class C(metaclass=ABCMeta):
            @abstractproperty
            def my_abstract_property(self):
                ...

    This defines a read-only property; you can also define a read-write
    abstract property using the 'long' form of property declaration:

        class C(metaclass=ABCMeta):
            def getx(self): ...
            def setx(self, value): ...
            x = abstractproperty(getx, setx)

    'abstractproperty' is deprecated. Use 'property' with 'abstractmethod'
    instead.
    "
"__module__" : "abc"

Anchored allocation at 17a3dc0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Metaclass for defining Abstract Base Classes (ABCs).

    Use this metaclass to create an ABC.  An ABC can be subclassed
    directly, and then acts as a mix-in class.  You can also register
    unrelated concrete classes (even built-in classes) and unrelated
    ABCs as 'virtual subclasses' -- these and their descendants will
    be considered subclasses of the registering ABC by the built-in
    issubclass() function, but the registering ABC won't show up in
    their MRO (Method Resolution Order) nor will method
    implementations defined by the registering ABC be callable (not
    even via super()).

    "
"__module__" : "abc"

Anchored allocation at 17a4bb0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a5050 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a50e0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a5290 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a54d0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "The abstract base class for all I/O classes, acting on streams of
bytes. There is no public constructor.

This class provides dummy implementations for many methods that
derived classes can override selectively; the default implementations
represent a file that cannot be read, written or seeked.

Even though IOBase does not declare read, readinto, or write because
their signatures will vary, implementations and clients should
consider those methods part of the interface. Also, implementations
may raise UnsupportedOperation when operations they do not support are
called.

The basic type used for binary data read from or written to a file is
bytes. Other bytes-like objects are accepted as method arguments too.
In some cases (such as readinto), a writable object is required. Text
I/O classes work with str data.

Note that calling any method (except additional calls to close(),
which are ignored) on a closed stream should raise a ValueError.

IOBase (and its subclasses) support the iterator protocol, meaning
that an IOBase object can be iterated over yielding the lines in a
stream.

IOBase also supports the :keyword:`with` statement. In this example,
fp is closed after the suite of the with statement is complete:

with open('spam.txt', 'r') as fp:
    fp.write('Spam and eggs!')
"
"__module__" : "io"

Anchored allocation at 17a5710 of size e8
This allocation matches pattern PyDictKeysObject.
"mode" : "r"

Anchored allocation at 17a5800 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "The io module provides the Python interfaces to stream handling. The
builtin open function is defined in this module.

At the top of the I/O hierarchy is the abstract base class IOBase. It
defines the basic interface to a stream. Note, however, that there is no
separation between reading and writing to streams; implementations are
allowed to raise an OSError if they do not support a given operation.

Extending IOBase is RawIOBase which deals simply with the reading and
writing of raw bytes to a stream. FileIO subclasses RawIOBase to provide
an interface to OS files.

BufferedIOBase deals with buffering on a raw byte stream (RawIOBase). Its
subclasses, BufferedWriter, BufferedReader, and BufferedRWPair buffer
streams that are readable, writable, and both respectively.
BufferedRandom provides a buffered interface to random access
streams. BytesIO is a simple stream of in-memory bytes.

Another IOBase subclass, TextIOBase, deals with the encoding and decoding
of streams into text. TextIOWrapper, which extends it, is a buffered text
interface to a buffered raw stream (`BufferedIOBase`). Finally, StringIO
is an in-memory stream for text.

Argument names are not part of the specification, and only the arguments
of open() are intended to be used as keyword arguments.

data:

DEFAULT_BUFFER_SIZE

   An int containing the default buffer size used by the module's buffered
   I/O classes. open() uses the file's blksize (as obtained by os.stat) if
   possible.
"
"__author__" : "Guido van Rossum <guido@python.org>, Mike Verdone <mike.verdone@gmail.com>, Mark Russell <mark.russell@zen.co.uk>, Antoine Pitrou <solipsis@pitrou.net>, Amaury Forgeot d'Arc <amauryfa@gmail.com>, Benjamin Peterson <benjamin@python.org>"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/io.cpython-35.pyc"
"__name__" : "io"
"__package__" : ""
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/io.py"

Anchored allocation at 17a6ae0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a6e10 of size 328
This allocation matches pattern PyDictKeysObject.
"__name__" : "encodings"
"__doc__" : " Standard "encodings" Package

    Standard Python encoding modules are stored in this package
    directory.

    Codec modules must have names corresponding to normalized encoding
    names as defined in the normalize_encoding() function below, e.g.
    'utf-8' must be implemented by the module 'utf_8.py'.

    Each codec module must export the following interface:

    * getregentry() -> codecs.CodecInfo object
    The getregentry() API must return a CodecInfo object with encoder, decoder,
    incrementalencoder, incrementaldecoder, streamwriter and streamreader
    atttributes which adhere to the Python Codec Interface Standard.

    In addition, a module may optionally also define the following
    APIs which are then used by the package's codec search function:

    * getaliases() -> sequence of encoding name strings to use as aliases

    Alias names returned by getaliases() must be normalized encoding
    names as defined by normalize_encoding().

Written by Marc-Andre Lemburg (mal@lemburg.com).

(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.

"
"__package__" : "encodings"
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/encodings/__init__.py"
"_unknown" : "--unknown--"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/encodings/__pycache__/__init__.cpython-35.pyc"

Anchored allocation at 17a7450 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a75d0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : " Defines the interface for stateless encoders/decoders.

        The .encode()/.decode() methods may use different error
        handling schemes by providing the errors argument. These
        string values are predefined:

         'strict' - raise a ValueError error (or a subclass)
         'ignore' - ignore the character and continue with the next
         'replace' - replace with a suitable replacement character;
                    Python will use the official U+FFFD REPLACEMENT
                    CHARACTER for the builtin Unicode codecs on
                    decoding and '?' on encoding.
         'surrogateescape' - replace with private code points U+DCnn.
         'xmlcharrefreplace' - Replace with the appropriate XML
                               character reference (only for encoding).
         'backslashreplace'  - Replace with backslashed escape sequences.
         'namereplace'       - Replace with \N{...} escape sequences
                               (only for encoding).

        The set of allowed values can be extended via register_error.

    "
"__module__" : "codecs"

Anchored allocation at 17a7b20 of size 1828
This allocation matches pattern PyDictKeysObject.
"__name__" : "stat"
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/stat.py"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/stat.cpython-35.pyc"
"__doc__" : "Constants/functions for interpreting results of os.stat() and os.lstat().

Suggested usage: from stat import *
"
"__package__" : ""

Anchored allocation at 17a9350 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17a9980 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17a9a70 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17aab80 of size 3028
This allocation matches pattern PyDictKeysObject.
"extsep" : "."
"name" : "posix"
"devnull" : "/dev/null"
"sep" : "/"
"curdir" : "."
"__name__" : "os"
"__doc__" : "OS routines for NT or Posix depending on what system we're on.

This exports:
  - all functions from posix, nt or ce, e.g. unlink, stat, etc.
  - os.path is either posixpath or ntpath
  - os.name is either 'posix', 'nt' or 'ce'.
  - os.curdir is a string representing the current directory ('.' or ':')
  - os.pardir is a string representing the parent directory ('..' or '::')
  - os.sep is the (or a most common) pathname separator ('/' or ':' or '\\')
  - os.extsep is the extension separator (always '.')
  - os.altsep is the alternate pathname separator (None or '/')
  - os.pathsep is the component separator used in $PATH etc
  - os.linesep is the line separator in text files ('\r' or '\n' or '\r\n')
  - os.defpath is the default search path for executables
  - os.devnull is the file path of the null device ('/dev/null', etc.)

Programs that import and use 'os' stand a better chance of being
portable between different platforms.  Of course, they must then
only use functions that are defined by all platforms (e.g., unlink
and opendir), and leave all pathname manipulation to os.path
(e.g., split and join).
"
"defpath" : ":/bin:/usr/bin"
"pathsep" : ":"
"pardir" : ".."
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/os.py"
"linesep" : "
"
"__package__" : ""
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/os.cpython-35.pyc"

Anchored allocation at 17af6f0 of size 328
This allocation matches pattern PyDictKeysObject.
"__name__" : "_sitebuiltins"
"__doc__" : "
The objects used by the site module to add custom builtins.
"
"__package__" : ""
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/_sitebuiltins.py"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/_sitebuiltins.cpython-35.pyc"

Anchored allocation at 17afd50 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b04d0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17b0680 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b0c10 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17b0ee0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b0fd0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b10c0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b24c0 of size e8
This allocation matches pattern PyDictKeysObject.
"mode" : "w"

Anchored allocation at 17b25b0 of size e8
This allocation matches pattern PyDictKeysObject.
"name" : "<stderr>"

Anchored allocation at 17b2880 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b2b90 of size c28
This allocation matches pattern PyDictKeysObject.
"__name__" : "_codecs"
"__package__" : ""

Anchored allocation at 17b37c0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b38b0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b4c90 of size c28
This allocation matches pattern PyDictKeysObject.
"__module__" : "_weakrefset"

Anchored allocation at 17b5de0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for raw binary I/O."
"__module__" : "io"

Anchored allocation at 17b6570 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b6840 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for buffered IO objects.

The main difference with RawIOBase is that the read() method
supports omitting the size argument, and does not have a default
implementation that defers to readinto().

In addition, read(), readinto() and write() may raise
BlockingIOError if the underlying raw stream is in non-blocking
mode and not ready; unlike their raw counterparts, they will never
return None.

A typical implementation should not inherit from a RawIOBase
implementation, but wrap one.
"
"__module__" : "io"

Anchored allocation at 17b6da0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b6fe0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Base class for text I/O.

This class provides a character and line based interface to stream
I/O. There is no readinto method because Python's character strings
are immutable. There is no public constructor.
"
"__module__" : "io"

Anchored allocation at 17b87d0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b8980 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b8b30 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b8ce0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b90a0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b9250 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b9400 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b95b0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b9760 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b9910 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b9a00 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17b9bb0 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17ba440 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17ba530 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17ba620 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17babb0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17badf0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17bb380 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17bb650 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17bbbe0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17bbeb0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17bc090 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17bc1e0 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "A set is a finite, iterable container.

    This class provides concrete generic implementations of all
    methods except for __contains__, __iter__ and __len__.

    To override the comparisons (presumably for speed, as the
    semantics are fixed), redefine __le__ and __ge__,
    then the other operations will automatically follow suit.
    "
"__module__" : "collections.abc"

Anchored allocation at 17bcbf0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17bce90 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17bd1c0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "A mutable set is a finite, iterable container.

    This class provides concrete generic implementations of all
    methods except for __contains__, __iter__, __len__,
    add(), and discard().

    To override the comparisons (presumably for speed, as the
    semantics are fixed), all you have to do is redefine __le__ and
    then the other operations will automatically follow suit.
    "
"__module__" : "collections.abc"

Anchored allocation at 17bda50 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17bf180 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17bf700 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17bfbd0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "classmethod(function) -> method

Convert a function to be a class method.

A class method receives the class as implicit first argument,
just like an instance method receives the instance.
To declare a class method, use this idiom:

  class C:
      def f(cls, arg1, arg2, ...): ...
      f = classmethod(f)

It can be called either on the class (e.g. C.f()) or on an instance
(e.g. C().f()).  The instance is ignored except for its class.
If a class method is called for a derived class, the derived class
object is passed as the implied first argument.

Class methods are different than C++ or Java static methods.
If you want those, see the staticmethod builtin."

Anchored allocation at 17c0130 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_weakrefset"

Anchored allocation at 17c0750 of size 328
This allocation matches pattern PyDictKeysObject.
"__name__" : "_weakrefset"
"__package__" : ""
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/_weakrefset.py"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/_weakrefset.cpython-35.pyc"

Anchored allocation at 17c0d60 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17c1200 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "
    A decorator indicating abstract classmethods.

    Similar to abstractmethod.

    Usage:

        class C(metaclass=ABCMeta):
            @abstractclassmethod
            def my_abstract_classmethod(cls, ...):
                ...

    'abstractclassmethod' is deprecated. Use 'classmethod' with
    'abstractmethod' instead.
    "
"__module__" : "abc"

Anchored allocation at 17c2150 of size c28
This allocation matches pattern PyDictKeysObject.
"__name__" : "_codecs"

Anchored allocation at 17c34d0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17c3680 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "codecs"

Anchored allocation at 17c3d60 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17c3e50 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17c3ee0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__name__" : "encodings.aliases"
"__doc__" : " Encoding Aliases Support

    This module is used by the encodings package search function to
    map encodings names to module names.

    Note that the search function normalizes the encoding names before
    doing the lookup, so the mapping will have to map normalized
    encoding names to module names.

    Contents:

        The following aliases dictionary contains mappings of all IANA
        character set names for which the Python core library provides
        codecs. In addition to these, a few Python specific codec
        aliases have also been added.

"
"__package__" : "encodings"
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/encodings/aliases.py"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/encodings/__pycache__/aliases.cpython-35.pyc"

Anchored allocation at 17c4090 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17c4180 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17c4210 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "codecs"

Anchored allocation at 17c48f0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17c4980 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : " StreamReaderWriter instances allow wrapping streams which
        work in both read and write modes.

        The design is such that one can use the factory functions
        returned by the codec.lookup() function to construct the
        instance.

    "
"encoding" : "unknown"
"__module__" : "codecs"

Anchored allocation at 17c5360 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17c53f0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17c5570 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings"

Anchored allocation at 17c79c0 of size 3028
This allocation matches pattern PyDictKeysObject.
"iso8859_1" : "latin_1"
"csisolatin5" : "iso8859_9"
"857" : "cp857"
"greek8" : "iso8859_7"
"850" : "cp850"
"iso_8859_4_1988" : "iso8859_4"
"shiftjis" : "shift_jis"
"936" : "gbk"
"l6" : "iso8859_10"
"csibm273" : "cp273"
"csibm866" : "cp866"
"csibm858" : "cp858"
"thai" : "iso8859_11"
"1253" : "cp1253"
"sjis_2004" : "shift_jis_2004"
"jisx0213" : "euc_jis_2004"
"iso_ir_144" : "iso8859_5"
"mskanji" : "cp932"
"utf8" : "utf_8"
"unicode_1_1_utf_7" : "utf_7"
"ecma_114" : "iso8859_6"
"855" : "cp855"
"iso_8859_16" : "iso8859_16"
"hkscs" : "big5hkscs"
"csibm855" : "cp855"
"iso_8859_16_2001" : "iso8859_16"
"latin3" : "iso8859_3"
"iso_ir_6" : "ascii"
"iso_8859_6_1987" : "iso8859_6"
"csbig5" : "big5"
"iso2022jp_2004" : "iso2022_jp_2004"
"cp1361" : "johab"
"windows_1258" : "cp1258"
"ibm860" : "cp860"
"ibm865" : "cp865"
"iso_ir_127" : "iso8859_6"
"1256" : "cp1256"
"hebrew" : "iso8859_8"
"latin1" : "latin_1"
"shiftjisx0213" : "shift_jisx0213"
"cskoi8r" : "koi8_r"
"ksx1001" : "euc_kr"
"ibm819" : "latin_1"
"base64" : "base64_codec"
"sjisx0213" : "shift_jisx0213"
"rot13" : "rot_13"
"roman8" : "hp_roman8"
"863" : "cp863"
"kz_1048" : "kz1048"
"windows_1257" : "cp1257"
"utf8_ucs2" : "utf_8"
"tis620" : "tis_620"
"latin2" : "iso8859_2"
"ujis" : "euc_jp"
"iso2022kr" : "iso2022_kr"
"ms936" : "gbk"
"iso_2022_jp_ext" : "iso2022_jp_ext"
"unicodebigunmarked" : "utf_16_be"
"iso_celtic" : "iso8859_14"
"zip" : "zlib_codec"
"iso_ir_110" : "iso8859_4"
"iso2022jp_ext" : "iso2022_jp_ext"
"windows_1251" : "cp1251"
"1257" : "cp1257"
"iso2022jp" : "iso2022_jp"
"1250" : "cp1250"
"l1" : "latin_1"
"1251" : "cp1251"
"l10" : "iso8859_16"
"ibm037" : "cp037"
"iso_ir_58" : "gb2312"
"iso2022jp_1" : "iso2022_jp_1"
"utf" : "utf_8"
"iso_ir_138" : "iso8859_8"
"eucjis2004" : "euc_jis_2004"
"ibm866" : "cp866"
"csiso2022jp" : "iso2022_jp"
"ibm367" : "ascii"
"ibm273" : "cp273"
"gb18030_2000" : "gb18030"
"hex" : "hex_codec"
"ibm858" : "cp858"
"unicodelittleunmarked" : "utf_16_le"
"iso_8859_7" : "iso8859_7"
"iso_ir_148" : "iso8859_9"
"chinese" : "gb2312"
"latin7" : "iso8859_13"
"1125" : "cp1125"
"windows_1256" : "cp1256"
"csshiftjis" : "shift_jis"
"cspc8codepage437" : "cp437"
"iso_2022_jp" : "iso2022_jp"
"arabic" : "iso8859_6"
"8859" : "latin_1"
"iso_8859_4" : "iso8859_4"
"ms949" : "cp949"
"437" : "cp437"
"r8" : "hp_roman8"
"u16" : "utf_16"
"s_jis_2004" : "shift_jis_2004"
"1254" : "cp1254"
"cspc850multilingual" : "cp850"
"iso_ir_226" : "iso8859_16"
"uhc" : "cp949"
"us" : "ascii"
"l8" : "iso8859_14"
"zlib" : "zlib_codec"
"ebcdic_cp_be" : "cp500"
"csibm037" : "cp037"
"utf8_ucs4" : "utf_8"
"ruscii" : "cp1125"
"iso_8859_5" : "iso8859_5"
"csHPRoman8" : "hp_roman8"
"iso_8859_14" : "iso8859_14"
"ansi_x3_4_1968" : "ascii"
"csibm864" : "cp864"
"424" : "cp424"
"iso_8859_2" : "iso8859_2"
"iso_8859_10_1992" : "iso8859_10"
"iso_8859_8" : "iso8859_8"
"strk1048_2002" : "kz1048"
"s_jisx0213" : "shift_jisx0213"
"ibm424" : "cp424"
"gb2312_1980" : "gb2312"
"x_mac_korean" : "euc_kr"
"dbcs" : "mbcs"
"iso8859" : "latin_1"
"x_mac_japanese" : "shift_jis"
"latin6" : "iso8859_10"
"latin10" : "iso8859_16"
"ibm864" : "cp864"
"greek" : "iso8859_7"
"646" : "ascii"
"ms_kanji" : "cp932"
"shiftjis2004" : "shift_jis_2004"
"eucjp" : "euc_jp"
"csisolatin4" : "iso8859_4"
"iso_8859_3" : "iso8859_3"
"iso_646.irv_1991" : "ascii"
"windows_1252" : "cp1252"
"iso_8859_6" : "iso8859_6"
"ebcdic_cp_he" : "cp424"
"ks_x_1001" : "euc_kr"
"ibm850" : "cp850"
"latin4" : "iso8859_4"
"iso_8859_7_1987" : "iso8859_7"
"x_mac_simp_chinese" : "gb2312"
"l7" : "iso8859_13"
"cyrillic_asian" : "ptcp154"
"1026" : "cp1026"
"u8" : "utf_8"
"latin9" : "iso8859_15"
"iso2022jp_2" : "iso2022_jp_2"
"iso_ir_101" : "iso8859_2"
"ibm861" : "cp861"
"maciceland" : "mac_iceland"
"ibm437" : "cp437"
"949" : "cp949"
"cspc862latinhebrew" : "cp862"
"ibm775" : "cp775"
"big5_hkscs" : "big5hkscs"
"iso_8859_11" : "iso8859_11"
"iso_2022_kr" : "iso2022_kr"
"u_jis" : "euc_jp"
"ibm869" : "cp869"
"775" : "cp775"
"ebcdic_cp_nl" : "cp037"
"cspc775baltic" : "cp775"
"maccentraleurope" : "mac_latin2"
"1258" : "cp1258"
"windows_1255" : "cp1255"
"big5_tw" : "big5"
"iso_2022_jp_3" : "iso2022_jp_3"
"euc_cn" : "gb2312"
"iso_ir_157" : "iso8859_10"
"csptcp154" : "ptcp154"
"euc_jis2004" : "euc_jis_2004"
"ibm863" : "cp863"
"iso_ir_100" : "latin_1"
"l5" : "iso8859_9"
"hz_gb" : "hz"
"windows_1250" : "cp1250"
"csibm869" : "cp869"
"latin5" : "iso8859_9"
"us_ascii" : "ascii"
"iso_2022_jp_2" : "iso2022_jp_2"
"950" : "cp950"
"csibm861" : "cp861"
"1140" : "cp1140"
"ibm855" : "cp855"
"ebcdic_cp_wt" : "cp037"
"iso_ir_166" : "tis_620"
"quotedprintable" : "quopri_codec"
"l2" : "iso8859_2"
"861" : "cp861"
"cp_gr" : "cp869"
"csisolatin6" : "iso8859_10"
"asmo_708" : "iso8859_6"
"cspcp852" : "cp852"
"utf32" : "utf_32"
"ks_c_5601_1987" : "euc_kr"
"windows_1254" : "cp1254"
"iso_8859_9" : "iso8859_9"
"csibm857" : "cp857"
"macroman" : "mac_roman"
"eucgb2312_cn" : "gb2312"
"iso_ir_199" : "iso8859_14"
"852" : "cp852"
"uu" : "uu_codec"
"csibm865" : "cp865"
"maccyrillic" : "mac_cyrillic"
"ksc5601" : "euc_kr"
"ibm1125" : "cp1125"
"ms932" : "cp932"
"s_jis" : "shift_jis"
"utf_32le" : "utf_32_le"
"csiso2022kr" : "iso2022_kr"
"iso_8859_13" : "iso8859_13"
"1255" : "cp1255"
"euccn" : "gb2312"
"ibm1140" : "cp1140"
"iso_8859_10" : "iso8859_10"
"iso_8859_11_2001" : "iso8859_11"
"gb2312_80" : "gb2312"
"windows_1253" : "cp1253"
"iso_2022_jp_2004" : "iso2022_jp_2004"
"pt154" : "ptcp154"
"ibm852" : "cp852"
"utf16" : "utf_16"
"latin8" : "iso8859_14"
"866" : "cp866"
"csisolatin2" : "iso8859_2"
"euckr" : "euc_kr"
"500" : "cp500"
"u7" : "utf_7"
"csisolatin1" : "latin_1"
"ibm039" : "cp037"
"korean" : "euc_kr"
"iso646_us" : "ascii"
"cp936" : "gbk"
"macgreek" : "mac_greek"
"ebcdic_cp_us" : "cp037"
"iso_8859_2_1987" : "iso8859_2"
"eucjisx0213" : "euc_jisx0213"
"tis_620_0" : "tis_620"
"hzgb" : "hz"
"ms1361" : "johab"
"ecma_118" : "iso8859_7"
"ebcdic_cp_ca" : "cp037"
"ibm500" : "cp500"
"csibm424" : "cp424"
"latin" : "latin_1"
"csibm860" : "cp860"
"ibm1026" : "cp1026"
"869" : "cp869"
"csisolatin3" : "iso8859_3"
"utf_32be" : "utf_32_be"
"ms950" : "cp950"
"quoted_printable" : "quopri_codec"
"860" : "cp860"
"ansi_x3.4_1968" : "ascii"
"l9" : "iso8859_15"
"hz_gb_2312" : "hz"
"csibm1026" : "cp1026"
"iso_ir_109" : "iso8859_3"
"l4" : "iso8859_4"
"932" : "cp932"
"ibm862" : "cp862"
"tis_620_2529_1" : "tis_620"
"u32" : "utf_32"
"csascii" : "ascii"
"base_64" : "base64_codec"
"iso_8859_1_1987" : "latin_1"
"ibm857" : "cp857"
"csisolatinhebrew" : "iso8859_8"
"macintosh" : "mac_roman"
"ks_c_5601" : "euc_kr"
"rk1048" : "kz1048"
"utf_16le" : "utf_16_le"
"csisolatincyrillic" : "iso8859_5"
"037" : "cp037"
"csisolatinarabic" : "iso8859_6"
"tis260" : "tactis"
"x_mac_trad_chinese" : "big5"
"cp_is" : "cp861"
"iso_ir_126" : "iso8859_7"
"iso_8859_8_1988" : "iso8859_8"
"utf7" : "utf_7"
"maclatin2" : "mac_latin2"
"sjis" : "shift_jis"
"iso_8859_14_1998" : "iso8859_14"
"csisolatingreek" : "iso8859_7"
"cp367" : "ascii"
"elot_928" : "iso8859_7"
"ebcdic_cp_ch" : "cp500"
"865" : "cp865"
"macturkish" : "mac_turkish"
"iso2022jp_3" : "iso2022_jp_3"
"862" : "cp862"
"csibm863" : "cp863"
"iso_2022_jp_1" : "iso2022_jp_1"
"utf_16be" : "utf_16_be"
"273" : "cp273"
"csiso58gb231280" : "gb2312"
"iso_8859_9_1989" : "iso8859_9"
"864" : "cp864"
"bz2" : "bz2_codec"
"iso_8859_1" : "latin_1"
"858" : "cp858"
"cyrillic" : "iso8859_5"
"tis_620_2529_0" : "tis_620"
"iso_8859_15" : "iso8859_15"
"1252" : "cp1252"
"iso_8859_5_1988" : "iso8859_5"
"iso_8859_3_1988" : "iso8859_3"
"csibm500" : "cp500"
"ansi_x3.4_1986" : "ascii"
"cp154" : "ptcp154"
"cp819" : "latin_1"
"quopri" : "quopri_codec"
"l3" : "iso8859_3"
"cp866u" : "cp1125"

Anchored allocation at 17ca9f0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17caba0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings.latin_1"

Anchored allocation at 17cad50 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings.latin_1"

Anchored allocation at 17cae40 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17cb4c0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__name__" : "__main__"
"__file__" : "sleepy.py"

Anchored allocation at 17cb670 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "struct_siginfo: Result from sigwaitinfo or sigtimedwait.

This object may be accessed either as a tuple of
(si_signo, si_code, si_errno, si_pid, si_uid, si_status, si_band),
or via the attributes si_signo, si_code, and so on."

Anchored allocation at 17cb9a0 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "signal"

Anchored allocation at 17cbe40 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17cc280 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17cc310 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings.latin_1"

Anchored allocation at 17cc400 of size e8
This allocation matches pattern PyDictKeysObject.
"__module__" : "encodings.latin_1"

Anchored allocation at 17cc4f0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17cd070 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "
    An IncrementalEncoder encodes an input in multiple steps. The input can
    be passed piece by piece to the encode() method. The IncrementalEncoder
    remembers the state of the encoding process between calls to encode().
    "
"__module__" : "codecs"

Anchored allocation at 17cd3a0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17cd820 of size 1828
This allocation matches pattern PyDictKeysObject.
"__name__" : "codecs"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/codecs.cpython-35.pyc"
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/codecs.py"
"__doc__" : " codecs -- Python Codec Registry, API and helpers.


Written by Marc-Andre Lemburg (mal@lemburg.com).

(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.

"
"__package__" : ""

Anchored allocation at 17cf200 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "The time value as returned by gmtime(), localtime(), and strptime(), and
 accepted by asctime(), mktime() and strftime().  May be considered as a
 sequence of 9 integers.

 Note that several fields' values are not the same as those defined by
 the C language standard for struct tm.  For example, the value of the
 field tm_year is the actual year, not year - 1900.  See individual
 fields' descriptions for details."

Anchored allocation at 17cf530 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "This module provides various functions to manipulate time values.

There are two standard representations of time.  One is the number
of seconds since the Epoch, in UTC (a.k.a. GMT).  It may be an integer
or a floating point number (to represent fractions of seconds).
The Epoch is system-defined; on Unix, it is generally January 1st, 1970.
The actual value can be retrieved by calling gmtime(0).

The other representation is a tuple of 9 integers giving local time.
The tuple items are:
  year (including century, e.g. 1998)
  month (1-12)
  day (1-31)
  hours (0-23)
  minutes (0-59)
  seconds (0-59)
  weekday (0-6, Monday is 0)
  Julian day (day in the year, 1-366)
  DST (Daylight Savings Time) flag (-1, 0 or 1)
If the DST flag is 0, the time is given in the regular time zone;
if it is 1, the time is given in the DST time zone;
if it is -1, mktime() should guess based on the date and time.

Variables:

timezone -- difference in seconds between UTC and local standard time
altzone -- difference in  seconds between UTC and local DST time
daylight -- whether local time should reflect DST
tzname -- tuple of (standard time zone name, DST time zone name)

Functions:

time() -- return current time in seconds since the Epoch as a float
clock() -- return CPU time since process start as a float
sleep() -- delay for a number of seconds given as a float
gmtime() -- convert seconds since Epoch to UTC tuple
localtime() -- convert seconds since Epoch to local time tuple
asctime() -- convert time tuple to string
ctime() -- convert time in seconds to string
mktime() -- convert local time tuple to seconds since Epoch
strftime() -- convert time tuple to string according to format specification
strptime() -- parse string to time tuple according to format specification
tzset() -- change the local timezone"
"__name__" : "time"

Anchored allocation at 17d1bb0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17d6120 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "This module provides various functions to manipulate time values.

There are two standard representations of time.  One is the number
of seconds since the Epoch, in UTC (a.k.a. GMT).  It may be an integer
or a floating point number (to represent fractions of seconds).
The Epoch is system-defined; on Unix, it is generally January 1st, 1970.
The actual value can be retrieved by calling gmtime(0).

The other representation is a tuple of 9 integers giving local time.
The tuple items are:
  year (including century, e.g. 1998)
  month (1-12)
  day (1-31)
  hours (0-23)
  minutes (0-59)
  seconds (0-59)
  weekday (0-6, Monday is 0)
  Julian day (day in the year, 1-366)
  DST (Daylight Savings Time) flag (-1, 0 or 1)
If the DST flag is 0, the time is given in the regular time zone;
if it is 1, the time is given in the DST time zone;
if it is -1, mktime() should guess based on the date and time.

Variables:

timezone -- difference in seconds between UTC and local standard time
altzone -- difference in  seconds between UTC and local DST time
daylight -- whether local time should reflect DST
tzname -- tuple of (standard time zone name, DST time zone name)

Functions:

time() -- return current time in seconds since the Epoch as a float
clock() -- return CPU time since process start as a float
sleep() -- delay for a number of seconds given as a float
gmtime() -- convert seconds since Epoch to UTC tuple
localtime() -- convert seconds since Epoch to local time tuple
asctime() -- convert time tuple to string
ctime() -- convert time in seconds to string
mktime() -- convert local time tuple to seconds since Epoch
strftime() -- convert time tuple to string according to format specification
strptime() -- parse string to time tuple according to format specification
tzset() -- change the local timezone"
"__name__" : "time"
"__package__" : ""

Anchored allocation at 17d7a70 of size 718
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17f78e0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"platlib" : "{base}/Lib/site-packages"
"scripts" : "{base}/Scripts"
"data" : "{base}"
"stdlib" : "{installed_base}/Lib"
"platstdlib" : "{base}/Lib"
"purelib" : "{base}/Lib/site-packages"
"platinclude" : "{installed_base}/Include"
"include" : "{installed_base}/Include"

Anchored allocation at 17f8300 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Define the builtin 'help'.

    This is a wrapper around pydoc.help that provides a helpful message
    when 'help' is typed at the Python interactive prompt.

    Calling help() at the Python prompt starts an interactive help session.
    Calling help(thing) prints help for the python object 'thing'.
    "
"__module__" : "_sitebuiltins"

Anchored allocation at 17f84b0 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Append module search paths for third-party packages to sys.path.

****************************************************************
* This module is automatically imported during initialization. *
****************************************************************

This will append site-specific paths to the module search path.  On
Unix (including Mac OSX), it starts with sys.prefix and
sys.exec_prefix (if different) and appends
lib/python<version>/site-packages.
On other platforms (such as Windows), it tries each of the
prefixes directly, as well as with lib/site-packages appended.  The
resulting directories, if they exist, are appended to sys.path, and
also inspected for path configuration files.

If a file named "pyvenv.cfg" exists one directory above sys.executable,
sys.prefix and sys.exec_prefix are set to that directory and
it is also checked for site-packages (sys.base_prefix and
sys.base_exec_prefix will always be the "real" prefixes of the Python
installation). If "pyvenv.cfg" (a bootstrap configuration file) contains
the key "include-system-site-packages" set to anything other than "false"
(case-insensitive), the system-level prefixes will still also be
searched for site-packages; otherwise they won't.

All of the resulting site-specific directories, if they exist, are
appended to sys.path, and also inspected for path configuration
files.

A path configuration file is a file whose name has the form
<package>.pth; its contents are additional directories (one per line)
to be added to sys.path.  Non-existing directories (or
non-directories) are never added to sys.path; no directory is added to
sys.path more than once.  Blank lines and lines beginning with
'#' are skipped. Lines starting with 'import' are executed.

For example, suppose sys.prefix and sys.exec_prefix are set to
/usr/local and there is a directory /usr/local/lib/python2.5/site-packages
with three subdirectories, foo, bar and spam, and two path
configuration files, foo.pth and bar.pth.  Assume foo.pth contains the
following:

  # foo package configuration
  foo
  bar
  bletch

and bar.pth contains:

  # bar package configuration
  bar

Then the following directories are added to sys.path, in this order:

  /usr/local/lib/python2.5/site-packages/bar
  /usr/local/lib/python2.5/site-packages/foo

Note that bletch is omitted because it doesn't exist; bar precedes foo
because bar.pth comes alphabetically before foo.pth; and spam is
omitted because it is not mentioned in either path configuration file.

The readline module is also automatically configured to enable
completion for systems that support it.  This can be overridden in
sitecustomize, usercustomize or PYTHONSTARTUP.

After these operations, an attempt is made to import a module
named sitecustomize, which can perform arbitrary additional
site-specific customizations.  If this import fails with an
ImportError exception, it is silently ignored.
"
"USER_SITE" : "/mts-cm/home/tim/.local/lib/python3.5/site-packages"
"USER_BASE" : "/mts-cm/home/tim/.local"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/site.cpython-35.pyc"
"__name__" : "site"
"__package__" : ""
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/site.py"
"CONFIG_LINE" : "^(?P<key>(\w|[-_])+)\s*=\s*(?P<value>.*)\s*$"

Anchored allocation at 17fd580 of size 1a8
This allocation matches pattern PyDictKeysObject.
"platlib" : "{userbase}/Python{py_version_nodot}/site-packages"
"scripts" : "{userbase}/Python{py_version_nodot}/Scripts"
"data" : "{userbase}"
"stdlib" : "{userbase}/Python{py_version_nodot}"
"platstdlib" : "{userbase}/Python{py_version_nodot}"
"purelib" : "{userbase}/Python{py_version_nodot}/site-packages"
"include" : "{userbase}/Python{py_version_nodot}/Include"

Anchored allocation at 17fd730 of size 1a8
This allocation matches pattern PyDictKeysObject.
"platlib" : "{userbase}/lib64/python{py_version_short}/site-packages"
"scripts" : "{userbase}/bin"
"data" : "{userbase}"
"stdlib" : "{userbase}/lib64/python{py_version_short}"
"platstdlib" : "{userbase}/lib64/python{py_version_short}"
"purelib" : "{userbase}/lib/python{py_version_short}/site-packages"
"include" : "{userbase}/include/python{py_version_short}"

Anchored allocation at 17fd8e0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"platlib" : "{userbase}/lib/python/site-packages"
"scripts" : "{userbase}/bin"
"data" : "{userbase}"
"stdlib" : "{userbase}/lib/python"
"platstdlib" : "{userbase}/lib/python"
"purelib" : "{userbase}/lib/python/site-packages"
"include" : "{userbase}/include"

Anchored allocation at 17fda90 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17fde80 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17fe030 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__name__" : "_sysconfigdata"
"__package__" : ""
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/_sysconfigdata.py"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/_sysconfigdata.cpython-35.pyc"

Anchored allocation at 17fec00 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17fef30 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17ff4c0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17ff670 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 17ff820 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 17fff30 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1800020 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 18005b0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 18007f0 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 18009a0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 1800b50 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1800d00 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1800df0 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1800ff0 of size 3028
This allocation matches pattern PyDictKeysObject.
"__doc__" : "This module makes available standard errno system symbols.

The value of each symbol is the corresponding integer value,
e.g., on most systems, errno.ENOENT equals the integer 2.

The dictionary errno.errorcode maps numeric codes to symbol names,
e.g., errno.errorcode[2] could be the string 'ENOENT'.

Symbols that are not relevant to the underlying system are not defined.

To map error codes to error messages, use the function os.strerror(),
e.g. os.strerror(2) could return 'No such file or directory'."
"__name__" : "errno"

Anchored allocation at 1804020 of size 1828
This allocation matches pattern PyDictKeysObject.
"__name__" : "_stat"
"__doc__" : "S_IFMT_: file type bits
S_IFDIR: directory
S_IFCHR: character device
S_IFBLK: block device
S_IFREG: regular file
S_IFIFO: fifo (named pipe)
S_IFLNK: symbolic link
S_IFSOCK: socket file
S_IFDOOR: door
S_IFPORT: event port
S_IFWHT: whiteout

S_ISUID: set UID bit
S_ISGID: set GID bit
S_ENFMT: file locking enforcement
S_ISVTX: sticky bit
S_IREAD: Unix V7 synonym for S_IRUSR
S_IWRITE: Unix V7 synonym for S_IWUSR
S_IEXEC: Unix V7 synonym for S_IXUSR
S_IRWXU: mask for owner permissions
S_IRUSR: read by owner
S_IWUSR: write by owner
S_IXUSR: execute by owner
S_IRWXG: mask for group permissions
S_IRGRP: read by group
S_IWGRP: write by group
S_IXGRP: execute by group
S_IRWXO: mask for others (not in group) permissions
S_IROTH: read by others
S_IWOTH: write by others
S_IXOTH: execute by others

UF_NODUMP: do not dump file
UF_IMMUTABLE: file may not be changed
UF_APPEND: file may only be appended to
UF_OPAQUE: directory is opaque when viewed through a union stack
UF_NOUNLINK: file may not be renamed or deleted
UF_COMPRESSED: OS X: file is hfs-compressed
UF_HIDDEN: OS X: file should not be displayed
SF_ARCHIVED: file may be archived
SF_IMMUTABLE: file may not be changed
SF_APPEND: file may only be appended to
SF_NOUNLINK: file may not be renamed or deleted
SF_SNAPSHOT: file is a snapshot file

ST_MODE
ST_INO
ST_DEV
ST_NLINK
ST_UID
ST_GID
ST_SIZE
ST_ATIME
ST_MTIME
ST_CTIME

FILE_ATTRIBUTE_*: Windows file attribute constants
                   (only present on Windows)
"

Anchored allocation at 1805c90 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "interactive prompt objects for printing the license text, a list of
    contributors and the copyright notice."
"__module__" : "_sitebuiltins"

Anchored allocation at 1806330 of size 628
This allocation matches pattern PyDictKeysObject.
"__doc__" : "
Path operations common to more than one OS
Do not use directly.  The OS specific modules import the appropriate
functions from this module themselves.
"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/genericpath.cpython-35.pyc"
"__name__" : "genericpath"
"__package__" : ""
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/genericpath.py"

Anchored allocation at 1806c30 of size 1828
This allocation matches pattern PyDictKeysObject.
"__name__" : "errno"
"__doc__" : "This module makes available standard errno system symbols.

The value of each symbol is the corresponding integer value,
e.g., on most systems, errno.ENOENT equals the integer 2.

The dictionary errno.errorcode maps numeric codes to symbol names,
e.g., errno.errorcode[2] could be the string 'ENOENT'.

Symbols that are not relevant to the underlying system are not defined.

To map error codes to error messages, use the function os.strerror(),
e.g. os.strerror(2) could return 'No such file or directory'."
"__package__" : ""

Anchored allocation at 1808460 of size 328
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1808c40 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1808df0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Dummy implementation of DirEntry

    Only used internally by os.walk(bytes). Since os.walk() doesn't need the
    follow_symlinks parameter: don't implement it, always follow symbolic
    links.
    "
"__module__" : "os"

Anchored allocation at 1809200 of size 1828
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 180aa30 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "S_IFMT_: file type bits
S_IFDIR: directory
S_IFCHR: character device
S_IFBLK: block device
S_IFREG: regular file
S_IFIFO: fifo (named pipe)
S_IFLNK: symbolic link
S_IFSOCK: socket file
S_IFDOOR: door
S_IFPORT: event port
S_IFWHT: whiteout

S_ISUID: set UID bit
S_ISGID: set GID bit
S_ENFMT: file locking enforcement
S_ISVTX: sticky bit
S_IREAD: Unix V7 synonym for S_IRUSR
S_IWRITE: Unix V7 synonym for S_IWUSR
S_IEXEC: Unix V7 synonym for S_IXUSR
S_IRWXU: mask for owner permissions
S_IRUSR: read by owner
S_IWUSR: write by owner
S_IXUSR: execute by owner
S_IRWXG: mask for group permissions
S_IRGRP: read by group
S_IWGRP: write by group
S_IXGRP: execute by group
S_IRWXO: mask for others (not in group) permissions
S_IROTH: read by others
S_IWOTH: write by others
S_IXOTH: execute by others

UF_NODUMP: do not dump file
UF_IMMUTABLE: file may not be changed
UF_APPEND: file may only be appended to
UF_OPAQUE: directory is opaque when viewed through a union stack
UF_NOUNLINK: file may not be renamed or deleted
UF_COMPRESSED: OS X: file is hfs-compressed
UF_HIDDEN: OS X: file should not be displayed
SF_ARCHIVED: file may be archived
SF_IMMUTABLE: file may not be changed
SF_APPEND: file may only be appended to
SF_NOUNLINK: file may not be renamed or deleted
SF_SNAPSHOT: file is a snapshot file

ST_MODE
ST_INO
ST_DEV
ST_NLINK
ST_UID
ST_GID
ST_SIZE
ST_ATIME
ST_MTIME
ST_CTIME

FILE_ATTRIBUTE_*: Windows file attribute constants
                   (only present on Windows)
"
"__name__" : "_stat"
"__package__" : ""

Anchored allocation at 180b660 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 180bc90 of size c38
This allocation matches pattern PyDictKeysObject.
"sep" : "/"
"devnull" : "/dev/null"
"extsep" : "."
"__name__" : "posixpath"
"__doc__" : "Common operations on Posix pathnames.

Instead of importing this module directly, import os and refer to
this module as os.path.  The "os.path" name is an alias for this
module on Posix systems; on other systems (e.g. Mac, Windows),
os.path provides the same operations in a manner specific to that
platform, and is an alias to another module (e.g. macpath, ntpath).

Some of this can actually be useful on non-Posix systems too, e.g.
for manipulation of the pathname component of URLs.
"
"defpath" : ":/bin:/usr/bin"
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/posixpath.py"
"curdir" : "."
"pathsep" : ":"
"pardir" : ".."
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/posixpath.cpython-35.pyc"
"__package__" : ""

Anchored allocation at 180cc80 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "_sitebuiltins"

Anchored allocation at 180ce30 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 180cee0 of size c28
This allocation matches pattern PyDictKeysObject.
"__doc__" : "Abstract Base Classes (ABCs) for collections, according to PEP 3119.

Unit tests are in test_collections.
"
"__name__" : "collections.abc"
"__file__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/_collections_abc.py"
"__cached__" : "/build/toolchain/lin64/python-3.5.2-openssl1.0.2r/lib64/python3.5/__pycache__/_collections_abc.cpython-35.pyc"
"__package__" : ""

Anchored allocation at 180db10 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 180e1f0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 180e490 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 180efe0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 180f0d0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 180f1c0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 180f370 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 180fa50 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 180fea0 of size 328
This allocation matches pattern PyDictKeysObject.
"__doc__" : "All the operations on a read-only sequence.

    Concrete subclasses must override __new__ or __init__,
    __getitem__, and __len__.
    "
"__module__" : "collections.abc"

Anchored allocation at 1810b40 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1810cc0 of size 1a8
This allocation matches pattern PyDictKeysObject.
"__doc__" : "This unifies bytes and bytearray.

    XXX Should add all their methods.
    "
"__module__" : "collections.abc"

Anchored allocation at 1810e70 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1810f60 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1811050 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1811140 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "os"

Anchored allocation at 1811470 of size 1a8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1811620 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "collections.abc"

Anchored allocation at 18121d0 of size e8
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 1812470 of size 1a8
This allocation matches pattern PyDictKeysObject.
"platlib" : "{base}/lib64/python"
"scripts" : "{base}/bin"
"data" : "{base}"
"stdlib" : "{installed_base}/lib64/python"
"platstdlib" : "{base}/lib64/python"
"purelib" : "{base}/lib/python"
"platinclude" : "{installed_base}/include/python"
"include" : "{installed_base}/include/python"

Anchored allocation at 1812620 of size 328
This allocation matches pattern PyDictKeysObject.
"__module__" : "os"

Anchored allocation at 1812d00 of size 88
This allocation matches pattern PyDictKeysObject.

Anchored allocation at 7f5e7bef5010 of size 30ff0
This allocation matches pattern PyDictKeysObject.
"" : ""
"__rxor__" : "__rxor__"
"path_sep" : "path_sep"
"IO_H" : "IO_H"
"CLD_EXITED" : "CLD_EXITED"
"SC_PRIORITY_SCHEDULING" : "SC_PRIORITY_SCHEDULING"
"HAVE_STRUCT_STAT_ST_BLOCKS" : "HAVE_STRUCT_STAT_ST_BLOCKS"
"rstrip" : "rstrip"
"jisx0213" : "jisx0213"
"HAVE_LIBSENDFILE" : "HAVE_LIBSENDFILE"
"st_atime_ns" : "st_atime_ns"
"is_namespace" : "is_namespace"
"SIG_SETMASK" : "SIG_SETMASK"
"855" : "855"
"SIGUSR1" : "SIGUSR1"
"strip" : "strip"
"destfile" : "destfile"
"sched_getparam" : "sched_getparam"
"CS_XBS5_ILP32_OFFBIG_LINTFLAGS" : "CS_XBS5_ILP32_OFFBIG_LINTFLAGS"
"enc" : "enc"
"OPCODE_H" : "OPCODE_H"
"ibm865" : "ibm865"
"PC_ASYNC_IO" : "PC_ASYNC_IO"
"isspace" : "isspace"
"SC_AIO_PRIO_DELTA_MAX" : "SC_AIO_PRIO_DELTA_MAX"
"Modules" : "Modules"
"execvp" : "execvp"
"ImportWarning" : "ImportWarning"
"type" : "type"
"mode" : "mode"
"uu_codec" : "uu_codec"
"AC_APPLE_UNIVERSAL_BUILD" : "AC_APPLE_UNIVERSAL_BUILD"
"BOM_BE" : "BOM_BE"
"P_ALL" : "P_ALL"
"_getframe" : "_getframe"
"SC_XOPEN_XPG4" : "SC_XOPEN_XPG4"
"DESTSHARED" : "DESTSHARED"
"__bases__" : "__bases__"
"renamed_variables" : "renamed_variables"
"api_version" : "api_version"
"latin_1" : "latin_1"
"HAVE_LOCKF" : "HAVE_LOCKF"
"look" : "look"
"utf_32le" : "utf_32le"
"HAVE_SIGPENDING" : "HAVE_SIGPENDING"
"locals" : "locals"
"__PYVENV_LAUNCHER__" : "__PYVENV_LAUNCHER__"
"CS_XBS5_LPBIG_OFFBIG_LINTFLAGS" : "CS_XBS5_LPBIG_OFFBIG_LINTFLAGS"
"getswitchinterval" : "getswitchinterval"
"fp" : "fp"
"reason" : "reason"
"localtime" : "localtime"
"__itruediv__" : "__itruediv__"
"SC_AVPHYS_PAGES" : "SC_AVPHYS_PAGES"
"sjis_2004" : "sjis_2004"
"iso_ir_109" : "iso_ir_109"
"asctime" : "asctime"
"LDFLAGS" : "LDFLAGS"
"S_ISUID" : "S_ISUID"
"__sizeof__" : "__sizeof__"
"iso_8859_4_1988" : "iso_8859_4_1988"
"_get_spec" : "_get_spec"
"data_encoding" : "data_encoding"
"_path_finder" : "_path_finder"
"EXTRATESTOPTS" : "EXTRATESTOPTS"
"extension" : "extension"
"filename2" : "filename2"
"module_repr" : "module_repr"
"namereplace_errors" : "namereplace_errors"
"csHPRoman8" : "csHPRoman8"
"classmethod" : "classmethod"
"fromhex" : "fromhex"
"SIGRTMIN" : "SIGRTMIN"
"ibm424" : "ibm424"
"_thread" : "_thread"
"SC_FSYNC" : "SC_FSYNC"
"SC_NGROUPS_MAX" : "SC_NGROUPS_MAX"
"spawnlpe" : "spawnlpe"
"PY3LIBRARY" : "PY3LIBRARY"
"ibm864" : "ibm864"
"HAVE_FEXECVE" : "HAVE_FEXECVE"
"AsyncIterable" : "AsyncIterable"
"HAVE_GETSID" : "HAVE_GETSID"
"GETPGRP_HAVE_ARG" : "GETPGRP_HAVE_ARG"
"strk1048_2002" : "strk1048_2002"
"OPT" : "OPT"
"SC_THREAD_PRIORITY_SCHEDULING" : "SC_THREAD_PRIORITY_SCHEDULING"
"HAVE_MEMMOVE" : "HAVE_MEMMOVE"
"os_module" : "os_module"
"OPCODE_H_SCRIPT" : "OPCODE_H_SCRIPT"
"WCONTINUED" : "WCONTINUED"
"SC_NL_MSGMAX" : "SC_NL_MSGMAX"
"spawnve" : "spawnve"
"excepthook" : "excepthook"
"sched_rr_get_interval" : "sched_rr_get_interval"
"HAVE_UNISTD_H" : "HAVE_UNISTD_H"
"BufferError" : "BufferError"
"u_jis" : "u_jis"
"_data" : "_data"
"backslashreplace" : "backslashreplace"
"encode" : "encode"
"WSTOPSIG" : "WSTOPSIG"
"killpg" : "killpg"
"stat" : "stat"
"_relaxed_path_cache" : "_relaxed_path_cache"
"exc_details" : "exc_details"
"co_firstlineno" : "co_firstlineno"
"csptcp154" : "csptcp154"
"iso_ir_100" : "iso_ir_100"
"MAJOR_IN_MKDEV" : "MAJOR_IN_MKDEV"
"get_terminal_size" : "get_terminal_size"
"_parse_makefile" : "_parse_makefile"
"__name__" : "__name__"
"iso_ir_199" : "iso_ir_199"
"fdopen" : "fdopen"
"iso_ir_166" : "iso_ir_166"
"daylight" : "daylight"
"line0withoutend" : "line0withoutend"
"asmo_708" : "asmo_708"
"f_trace" : "f_trace"
"stack_size" : "stack_size"
"size" : "size"
"getlogin" : "getlogin"
"BytesIO" : "BytesIO"
"encodekey" : "encodekey"
"HAVE_FSEEKO" : "HAVE_FSEEKO"
"u32" : "u32"
"BufferedRandom" : "BufferedRandom"
"EX_CANTCREAT" : "EX_CANTCREAT"
"linux" : "linux"
"HAVE_PRLIMIT" : "HAVE_PRLIMIT"
"RTLD_NOLOAD" : "RTLD_NOLOAD"
"tm_wday" : "tm_wday"
"csiso2022kr" : "csiso2022kr"
"is_dir" : "is_dir"
"_module_repr_from_spec" : "_module_repr_from_spec"
"copy" : "copy"
"LIBFFI_INCLUDEDIR" : "LIBFFI_INCLUDEDIR"
"_checkReadable" : "_checkReadable"
"getmtime" : "getmtime"
"ConnectionRefusedError" : "ConnectionRefusedError"
"F_ULOCK" : "F_ULOCK"
"SIGTSTP" : "SIGTSTP"
"EX_USAGE" : "EX_USAGE"
"_sysconfigdata" : "_sysconfigdata"
"*" : "*"
"r" : "r"
"abstractproperty" : "abstractproperty"
"PGO_PROF_USE_FLAG" : "PGO_PROF_USE_FLAG"
"ST_NOEXEC" : "ST_NOEXEC"
"utime" : "utime"
"THREADOBJ" : "THREADOBJ"
"_install" : "_install"
"_TextIOBase" : "_TextIOBase"
"pop" : "pop"
"max_exp" : "max_exp"
"getallocatedblocks" : "getallocatedblocks"
"_forget_codec" : "_forget_codec"
"HAVE_WCSCOLL" : "HAVE_WCSCOLL"
"WCOREDUMP" : "WCOREDUMP"
"WTERMSIG" : "WTERMSIG"
"statvfs" : "statvfs"
"smsl" : "smsl"
"PURIFY" : "PURIFY"
"932" : "932"
"iso_ir_126" : "iso_ir_126"
"tis_620_2529_1" : "tis_620_2529_1"
"HAVE_PIPE2" : "HAVE_PIPE2"
"CS_GNU_LIBPTHREAD_VERSION" : "CS_GNU_LIBPTHREAD_VERSION"
"HGVERSION" : "HGVERSION"
"execv" : "execv"
"float_info" : "float_info"
"sched_get_priority_max" : "sched_get_priority_max"
"MULTIARCH" : "MULTIARCH"
"getitimer" : "getitimer"
"SRCDIRS" : "SRCDIRS"
"__await__" : "__await__"
"8859" : "8859"
"hz_gb_2312" : "hz_gb_2312"
"pipe" : "pipe"
"sigtimedwait" : "sigtimedwait"
"sched_yield" : "sched_yield"
"delattr" : "delattr"
"HAVE_SETLOCALE" : "HAVE_SETLOCALE"
"MutableSet" : "MutableSet"
"SC_CHAR_BIT" : "SC_CHAR_BIT"
"_check_name" : "_check_name"
"REGISTRY_KEY" : "REGISTRY_KEY"
"extension_suffixes" : "extension_suffixes"
"override" : "override"
"SC_NL_ARGMAX" : "SC_NL_ARGMAX"
"csisolatin4" : "csisolatin4"
"values" : "values"
"SC_2_C_VERSION" : "SC_2_C_VERSION"
"_path_hooks" : "_path_hooks"
"HAVE_SEM_GETVALUE" : "HAVE_SEM_GETVALUE"
"__delete__" : "__delete__"
"HAVE_TIMES" : "HAVE_TIMES"
"__init__" : "__init__"
"SHELL" : "SHELL"
"sleep" : "sleep"
"_ImportLockContext" : "_ImportLockContext"
"bytecode_path" : "bytecode_path"
"SC_LINE_MAX" : "SC_LINE_MAX"
"entry" : "entry"
"new_comps" : "new_comps"
"hexversion" : "hexversion"
"PATH" : "PATH"
"HAVE_SETEUID" : "HAVE_SETEUID"
"S_IMODE" : "S_IMODE"
"HGTAG" : "HGTAG"
"setswitchinterval" : "setswitchinterval"
"HAVE_SETITIMER" : "HAVE_SETITIMER"
"sigpending" : "sigpending"
"BLDSHARED" : "BLDSHARED"
"WIFEXITED" : "WIFEXITED"
"csbig5" : "csbig5"
"P_NOWAIT" : "P_NOWAIT"
"cp1026" : "cp1026"
"_path_join" : "_path_join"
"PC_SYMLINK_MAX" : "PC_SYMLINK_MAX"
"BOM_UTF16_BE" : "BOM_UTF16_BE"
"BLDLIBRARY" : "BLDLIBRARY"
"HAVE_ERFC" : "HAVE_ERFC"
"HAVE_IPA_PURE_CONST_BUG" : "HAVE_IPA_PURE_CONST_BUG"
"staticmethod" : "staticmethod"
"EnvironmentError" : "EnvironmentError"
"sigwait" : "sigwait"
"tail_module" : "tail_module"
"HAVE_SYMLINK" : "HAVE_SYMLINK"
"__iadd__" : "__iadd__"
"HAVE_GETADDRINFO" : "HAVE_GETADDRINFO"
"pycache" : "pycache"
"abc" : "abc"
"__qualname__" : "__qualname__"
"_fields" : "_fields"
"BOM64_LE" : "BOM64_LE"
"FileExistsError" : "FileExistsError"
"lstat" : "lstat"
"VA_LIST_IS_ARRAY" : "VA_LIST_IS_ARRAY"
"DOUBLE_IS_LITTLE_ENDIAN_IEEE754" : "DOUBLE_IS_LITTLE_ENDIAN_IEEE754"
"HAVE_KILL" : "HAVE_KILL"
"sched_getscheduler" : "sched_getscheduler"
"ASCII" : "ASCII"
"make_identity_dict" : "make_identity_dict"
"__cached__" : "__cached__"
"HAVE_SYS_KERN_CONTROL_H" : "HAVE_SYS_KERN_CONTROL_H"
"allocate_lock" : "allocate_lock"
"__rmul__" : "__rmul__"
"HAVE_BROKEN_PTHREAD_SIGMASK" : "HAVE_BROKEN_PTHREAD_SIGMASK"
"EX_OSFILE" : "EX_OSFILE"
"l1" : "l1"
"TESTPYTHON" : "TESTPYTHON"
"prefixes" : "prefixes"
"BOM" : "BOM"
"HAVE_GLIBC_MEMMOVE_BUG" : "HAVE_GLIBC_MEMMOVE_BUG"
"ibm866" : "ibm866"
"self_module" : "self_module"
"cache_module" : "cache_module"
"optimization" : "optimization"
"EX_DATAERR" : "EX_DATAERR"
"USE_COMPUTED_GOTOS" : "USE_COMPUTED_GOTOS"
"aliasmbcs" : "aliasmbcs"
"joinuser" : "joinuser"
"info" : "info"
"OTHER_LIBTOOL_OPT" : "OTHER_LIBTOOL_OPT"
"_getuserbase" : "_getuserbase"
"CONFIGURE_CFLAGS" : "CONFIGURE_CFLAGS"
"HAVE_GETGROUPS" : "HAVE_GETGROUPS"
"uname" : "uname"
"HAVE_GETRANDOM" : "HAVE_GETRANDOM"
"macturkish" : "macturkish"
"ms949" : "ms949"
"MACHDEPS" : "MACHDEPS"
"hp_roman8" : "hp_roman8"
"CFLAGS_NODIST" : "CFLAGS_NODIST"
"read" : "read"
"HAVE_RAND_EGD" : "HAVE_RAND_EGD"
"HAVE_DEVICE_MACROS" : "HAVE_DEVICE_MACROS"
"path_attr_name" : "path_attr_name"
"HAVE_RL_COMPLETION_SUPPRESS_APPEND" : "HAVE_RL_COMPLETION_SUPPRESS_APPEND"
"SC_PII_OSI_COTS" : "SC_PII_OSI_COTS"
"newpath" : "newpath"
"rlcompleter" : "rlcompleter"
"list_reverseiterator" : "list_reverseiterator"
"_write_atomic" : "_write_atomic"
"_PYTHON_HOST_PLATFORM" : "_PYTHON_HOST_PLATFORM"
"iso_8859_10_1992" : "iso_8859_10_1992"
"Sized" : "Sized"
".<locals>" : ".<locals>"
"HAVE_PWRITE" : "HAVE_PWRITE"
"_is_reload" : "_is_reload"
"stat_result" : "stat_result"
"DIST" : "DIST"
"_varprog" : "_varprog"
"check_enableusersite" : "check_enableusersite"
"__suppress_context__" : "__suppress_context__"
"PC_PATH_MAX" : "PC_PATH_MAX"
"PACKAGE_BUGREPORT" : "PACKAGE_BUGREPORT"
"__rmod__" : "__rmod__"
"_loaders" : "_loaders"
"BrokenPipeError" : "BrokenPipeError"
"HAVE_MKTIME" : "HAVE_MKTIME"
"st_dev" : "st_dev"
"5" : "5"
"iso_8859_6" : "iso_8859_6"
"ks_x_1001" : "ks_x_1001"
"no" : "no"
"COVERAGE_INFO" : "COVERAGE_INFO"
"HAVE_ALTZONE" : "HAVE_ALTZONE"
"_current_frames" : "_current_frames"
"x_mac_simp_chinese" : "x_mac_simp_chinese"
"__stderr__" : "__stderr__"
"INSTALL_SCRIPT" : "INSTALL_SCRIPT"
"abort" : "abort"
"minor" : "minor"
"BUILDPYTHON" : "BUILDPYTHON"
"warnoptions" : "warnoptions"
"get_scheme_names" : "get_scheme_names"
"euc_jis_2004" : "euc_jis_2004"
"co_filename" : "co_filename"
"supports_dir_fd" : "supports_dir_fd"
"iso_2022_kr" : "iso_2022_kr"
"iso8859_16" : "iso8859_16"
"_abc_negative_cache_version" : "_abc_negative_cache_version"
"READELF" : "READELF"
"cp1251" : "cp1251"
"normalize_encoding" : "normalize_encoding"
"1258" : "1258"
"SC_PAGE_SIZE" : "SC_PAGE_SIZE"
"cp858" : "cp858"
"ZipImportError" : "ZipImportError"
"rt" : "rt"
"FILE_ATTRIBUTE_NORMAL" : "FILE_ATTRIBUTE_NORMAL"
"euc_jis2004" : "euc_jis2004"
"byteorder" : "byteorder"
"site_prefix" : "site_prefix"
"escape_decode" : "escape_decode"
"csibm861" : "csibm861"
"SIGIO" : "SIGIO"
"SC_WORD_BIT" : "SC_WORD_BIT"
"a" : "a"
"HAVE_LCHMOD" : "HAVE_LCHMOD"
"SC_PII" : "SC_PII"
"_PROJECT_BASE" : "_PROJECT_BASE"
"SO" : "SO"
"HAVE_FCHMOD" : "HAVE_FCHMOD"
"PY_CFLAGS_NODIST" : "PY_CFLAGS_NODIST"
"samefile" : "samefile"
"charmap_encode" : "charmap_encode"
"IndentationError" : "IndentationError"
"WEXITED" : "WEXITED"
"ST_GID" : "ST_GID"
"top" : "top"
"winreg" : "winreg"
"O_NDELAY" : "O_NDELAY"
"csibm865" : "csibm865"
"IO_OBJS" : "IO_OBJS"
"HAVE_STRINGS_H" : "HAVE_STRINGS_H"
"candidate_confs" : "candidate_confs"
"_defaultaction" : "_defaultaction"
"check_home" : "check_home"
"__objclass__" : "__objclass__"
"HAVE_BROKEN_POLL" : "HAVE_BROKEN_POLL"
"seteuid" : "seteuid"
"getcheckinterval" : "getcheckinterval"
"_get_supported_file_loaders" : "_get_supported_file_loaders"
"pw_dir" : "pw_dir"
"HAVE_SETVBUF" : "HAVE_SETVBUF"
"SC_2_FORT_DEV" : "SC_2_FORT_DEV"
"HAVE_SIGWAIT" : "HAVE_SIGWAIT"
"streamreader" : "streamreader"
"pt154" : "pt154"
"dont_write_bytecode" : "dont_write_bytecode"
"SC_XBS5_LPBIG_OFFBIG" : "SC_XBS5_LPBIG_OFFBIG"
"HAVE_BUILTIN_ATOMIC" : "HAVE_BUILTIN_ATOMIC"
"register_readline" : "register_readline"
"500" : "500"
"utf_7_decode" : "utf_7_decode"
"HAVE_LANGINFO_H" : "HAVE_LANGINFO_H"
"True" : "True"
"bz2_codec" : "bz2_codec"
"spawnl" : "spawnl"
"korean" : "korean"
"pwd" : "pwd"
"TM_IN_SYS_TIME" : "TM_IN_SYS_TIME"
"void" : "void"
"maxunicode" : "maxunicode"
"HAVE_RENAMEAT" : "HAVE_RENAMEAT"
"element" : "element"
"hex_codec" : "hex_codec"
"S_IFDOOR" : "S_IFDOOR"
"_make_relax_case" : "_make_relax_case"
"HAVE_FPATHCONF" : "HAVE_FPATHCONF"
"_fix_up_module" : "_fix_up_module"
"BytesWarning" : "BytesWarning"
"iso_8859_4" : "iso_8859_4"
"FILE_ATTRIBUTE_HIDDEN" : "FILE_ATTRIBUTE_HIDDEN"
"writelines" : "writelines"
"HAVE_ACCEPT4" : "HAVE_ACCEPT4"
"HAVE_PTHREAD_H" : "HAVE_PTHREAD_H"
"SC_SAVED_IDS" : "SC_SAVED_IDS"
"HAVE_GCC_ASM_FOR_X64" : "HAVE_GCC_ASM_FOR_X64"
"env" : "env"
"base_64" : "base_64"
"package" : "package"
"HAVE_SETRESGID" : "HAVE_SETRESGID"
"super" : "super"
"ST_RDONLY" : "ST_RDONLY"
"HAVE_COPYSIGN" : "HAVE_COPYSIGN"
"iso2022_jp" : "iso2022_jp"
"end" : "end"
"_abc_" : "_abc_"
"_setup" : "_setup"
"HAVE_SYS_LOCK_H" : "HAVE_SYS_LOCK_H"
"pread" : "pread"
"O_TRUNC" : "O_TRUNC"
"getegid" : "getegid"
"862" : "862"
"HAVE_ALLOCA_H" : "HAVE_ALLOCA_H"
"dont_inherit" : "dont_inherit"
"SIGCONT" : "SIGCONT"
"kz1048" : "kz1048"
"HAVE_BROKEN_PIPE_BUF" : "HAVE_BROKEN_PIPE_BUF"
"bz2" : "bz2"
"euc_jp" : "euc_jp"
"S_IFLNK" : "S_IFLNK"
"S_IRWXG" : "S_IRWXG"
"mod" : "mod"
"max" : "max"
"HAVE_SYS_SENDFILE_H" : "HAVE_SYS_SENDFILE_H"
"PYTHONFRAMEWORKINSTALLDIR" : "PYTHONFRAMEWORKINSTALLDIR"
"f" : "f"
"CS_XBS5_LP64_OFF64_LINTFLAGS" : "CS_XBS5_LP64_OFF64_LINTFLAGS"
"CS_XBS5_LP64_OFF64_LDFLAGS" : "CS_XBS5_LP64_OFF64_LDFLAGS"
"get_ident" : "get_ident"
"INSTSONAME" : "INSTSONAME"
"_RawIOBase" : "_RawIOBase"
"full_path" : "full_path"
"cp1254" : "cp1254"
"__slots__" : "__slots__"
"DISTFILES" : "DISTFILES"
"RTLD_LAZY" : "RTLD_LAZY"
"io" : "io"
"__kwdefaults__" : "__kwdefaults__"
"rmdir" : "rmdir"
"filenameIndex" : "filenameIndex"
"HAVE_FSYNC" : "HAVE_FSYNC"
"rsplit" : "rsplit"
"dirname" : "dirname"
"johab" : "johab"
"start_list" : "start_list"
"POSIX_FADV_NORMAL" : "POSIX_FADV_NORMAL"
"SC_CHAR_MAX" : "SC_CHAR_MAX"
"HAVE_INT64_T" : "HAVE_INT64_T"
"fp2" : "fp2"
"encoder" : "encoder"
"ibm863" : "ibm863"
"SC_2_LOCALEDEF" : "SC_2_LOCALEDEF"
"repr" : "repr"
"getgid" : "getgid"
"PY_CFLAGS" : "PY_CFLAGS"
"latin1" : "latin1"
"__ceil__" : "__ceil__"
"HAVE_NICE" : "HAVE_NICE"
"P_PGID" : "P_PGID"
"HAVE_NDIR_H" : "HAVE_NDIR_H"
"ARFLAGS" : "ARFLAGS"
"LICENSE" : "LICENSE"
"_varprogb" : "_varprogb"
"S_ENFMT" : "S_ENFMT"
"SCHED_FIFO" : "SCHED_FIFO"
"tis620" : "tis620"
"str_iterator" : "str_iterator"
"HAVE_CLOCK_GETTIME" : "HAVE_CLOCK_GETTIME"
"tmpv" : "tmpv"
"CS_GNU_LIBC_VERSION" : "CS_GNU_LIBC_VERSION"
"ms936" : "ms936"
"unicodebigunmarked" : "unicodebigunmarked"
"HAVE_EPOLL_CREATE1" : "HAVE_EPOLL_CREATE1"
"tuple_iterator" : "tuple_iterator"
"S_ISBLK" : "S_ISBLK"
"PREFIXES" : "PREFIXES"
"getbuffer" : "getbuffer"
"PC_VDISABLE" : "PC_VDISABLE"
"HAVE_SYS_UN_H" : "HAVE_SYS_UN_H"
"HAVE_LUTIMES" : "HAVE_LUTIMES"
"exists" : "exists"
"s2" : "s2"
"subclass" : "subclass"
"__aiter__" : "__aiter__"
"file_encoding" : "file_encoding"
"ENOTDIR" : "ENOTDIR"
"decodedbytes" : "decodedbytes"
"HAVE_SYS_WAIT_H" : "HAVE_SYS_WAIT_H"
"inc_dir" : "inc_dir"
"here" : "here"
"SIGSTOP" : "SIGSTOP"
"FrozenImporter" : "FrozenImporter"
"X87_DOUBLE_ROUNDING" : "X87_DOUBLE_ROUNDING"
"home" : "home"
"uhc" : "uhc"
"csibm500" : "csibm500"
"HAVE_PTHREAD_ATFORK" : "HAVE_PTHREAD_ATFORK"
"getweakrefcount" : "getweakrefcount"
"SourcelessFileLoader" : "SourcelessFileLoader"
"file_name" : "file_name"
"x86_64" : "x86_64"
"UnicodeEncodeError" : "UnicodeEncodeError"
"AST_C" : "AST_C"
"get_platform_osx" : "get_platform_osx"
"DeprecationWarning" : "DeprecationWarning"
"_EXEC_PREFIX" : "_EXEC_PREFIX"
"USER_BASE" : "USER_BASE"
"fileno" : "fileno"
"f_lineno" : "f_lineno"
"readelf" : "readelf"
"complex" : "complex"
"SC_MEMLOCK_RANGE" : "SC_MEMLOCK_RANGE"
"windows_1252" : "windows_1252"
"exec_prefix" : "exec_prefix"
"PGENOBJS" : "PGENOBJS"
"SC_ARG_MAX" : "SC_ARG_MAX"
"utf16" : "utf16"
"ST_WRITE" : "ST_WRITE"
"LIPO_32BIT_FLAGS" : "LIPO_32BIT_FLAGS"
"O_SYNC" : "O_SYNC"
"no_site" : "no_site"
"get_cache_token" : "get_cache_token"
"ibm437" : "ibm437"
"HAVE_SYS_DIR_H" : "HAVE_SYS_DIR_H"
"_filemode_table" : "_filemode_table"
"has_deadlock" : "has_deadlock"
"prefix" : "prefix"
"wait4" : "wait4"
"HAVE_LINUX_CAN_RAW_H" : "HAVE_LINUX_CAN_RAW_H"
"readline_doc" : "readline_doc"
"SystemError" : "SystemError"
"_find_and_load" : "_find_and_load"
"part" : "part"
"iso_8859_9" : "iso_8859_9"
"SIZEOF_PTHREAD_T" : "SIZEOF_PTHREAD_T"
"l5" : "l5"
"hz_gb" : "hz_gb"
"HAVE_CURSES_RESIZE_TERM" : "HAVE_CURSES_RESIZE_TERM"
"add" : "add"
"LIBDIR" : "LIBDIR"
"f_back" : "f_back"
"readbuffer_encode" : "readbuffer_encode"
"ebcdic_cp_wt" : "ebcdic_cp_wt"
"shiftjisx0213" : "shiftjisx0213"
"HAVE_ALARM" : "HAVE_ALARM"
"EX_SOFTWARE" : "EX_SOFTWARE"
"posix_fadvise" : "posix_fadvise"
"solaris" : "solaris"
"_DummyDirEntry" : "_DummyDirEntry"
"SF_SNAPSHOT" : "SF_SNAPSHOT"
"pprint" : "pprint"
"CC" : "CC"
"_legacy_get_spec" : "_legacy_get_spec"
"intersection" : "intersection"
"AST_ASDL" : "AST_ASDL"
"_sitebuiltins" : "_sitebuiltins"
"fchown" : "fchown"
"BUILD_GNU_TYPE" : "BUILD_GNU_TYPE"
"latin8" : "latin8"
"cp866" : "cp866"
"DESTLIB" : "DESTLIB"
"license" : "license"
"iso_8859_10" : "iso_8859_10"
"_" : "_"
"iso_2022_jp_ext" : "iso_2022_jp_ext"
"__mod__" : "__mod__"
"ZeroDivisionError" : "ZeroDivisionError"
"PGEN" : "PGEN"
"interactive" : "interactive"
"namereplace" : "namereplace"
"kill" : "kill"
"SC_SCHAR_MAX" : "SC_SCHAR_MAX"
"errno" : "errno"
"_collections_abc" : "_collections_abc"
"ENOENT" : "ENOENT"
"HAVE_SENDFILE" : "HAVE_SENDFILE"
"spec_from_loader" : "spec_from_loader"
"clock_getres" : "clock_getres"
"HAVE_LINUX_TIPC_H" : "HAVE_LINUX_TIPC_H"
"loader_details" : "loader_details"
"HAVE_GCC_ASM_FOR_MC68881" : "HAVE_GCC_ASM_FOR_MC68881"
"SC_THREAD_THREADS_MAX" : "SC_THREAD_THREADS_MAX"
"ibm500" : "ibm500"
"HAVE_LINUX_CAN_BCM_H" : "HAVE_LINUX_CAN_BCM_H"
"_debugmallocstats" : "_debugmallocstats"
"Popen" : "Popen"
"__enter__" : "__enter__"
"DYNLOADFILE" : "DYNLOADFILE"
"expandvars" : "expandvars"
"HAVE_DECL_ISFINITE" : "HAVE_DECL_ISFINITE"
"sendfile" : "sendfile"
"supports_effective_ids" : "supports_effective_ids"
"ebcdic_cp_ch" : "ebcdic_cp_ch"
"_from_iterable" : "_from_iterable"
"lock_held" : "lock_held"
"rjust" : "rjust"
"_PYCACHE" : "_PYCACHE"
"__reduce__" : "__reduce__"
"_bootstrap_external" : "_bootstrap_external"
"HAVE_SCHED_SETPARAM" : "HAVE_SCHED_SETPARAM"
"HAVE_STRUCT_STAT_ST_BIRTHTIME" : "HAVE_STRUCT_STAT_ST_BIRTHTIME"
"HAVE_SIGALTSTACK" : "HAVE_SIGALTSTACK"
"latin_1_decode" : "latin_1_decode"
"ks_c_5601" : "ks_c_5601"
"O_RDONLY" : "O_RDONLY"
"_xoptions" : "_xoptions"
"getweakrefs" : "getweakrefs"
"_initializing" : "_initializing"
"HAVE_GETHOSTBYNAME_R_3_ARG" : "HAVE_GETHOSTBYNAME_R_3_ARG"
"HAVE_MMAP" : "HAVE_MMAP"
"getgrouplist" : "getgrouplist"
"ItimerError" : "ItimerError"
"getstate" : "getstate"
"HAVE_GETLOGIN" : "HAVE_GETLOGIN"
"CPPFLAGS" : "CPPFLAGS"
"SCHED_RR" : "SCHED_RR"
"history" : "history"
"HAVE_UTIMES" : "HAVE_UTIMES"
"ST_APPEND" : "ST_APPEND"
"readinto" : "readinto"
"os" : "os"
"HAVE_UINTPTR_T" : "HAVE_UINTPTR_T"
"FILE_ATTRIBUTE_SPARSE_FILE" : "FILE_ATTRIBUTE_SPARSE_FILE"
"_path_split" : "_path_split"
"ReferenceError" : "ReferenceError"
"prompt" : "prompt"
"setreuid" : "setreuid"
"SF_NOUNLINK" : "SF_NOUNLINK"
"__setattr__" : "__setattr__"
"isinstance" : "isinstance"
"spec_from_file_location" : "spec_from_file_location"
"set_data" : "set_data"
"LN" : "LN"
"850" : "850"
"toppath" : "toppath"
"BOM32_BE" : "BOM32_BE"
"j" : "j"
"modulus" : "modulus"
"thai" : "thai"
"dirpath" : "dirpath"
"__IOBase_closed" : "__IOBase_closed"
"code_object" : "code_object"
"__base__" : "__base__"
"HAVE_RL_CATCH_SIGNAL" : "HAVE_RL_CATCH_SIGNAL"
"filters" : "filters"
"_spec" : "_spec"
"latin5" : "latin5"
"_find_parent_path_names" : "_find_parent_path_names"
"__floordiv__" : "__floordiv__"
"timezone" : "timezone"
"result" : "result"
"PC_NAME_MAX" : "PC_NAME_MAX"
"si_uid" : "si_uid"
"HAVE_DIRENT_D_TYPE" : "HAVE_DIRENT_D_TYPE"
"sethelper" : "sethelper"
"HAVE_SYS_TYPES_H" : "HAVE_SYS_TYPES_H"
"nt_user" : "nt_user"
"HAVE_SYS_EVENT_H" : "HAVE_SYS_EVENT_H"
"UnicodeWarning" : "UnicodeWarning"
"_spec_from_module" : "_spec_from_module"
"__annotations__" : "__annotations__"
"__file__" : "__file__"
"expanduser" : "expanduser"
"rot13" : "rot13"
"getter" : "getter"
"st" : "st"
"confstr" : "confstr"
"popen" : "popen"
"ujis" : "ujis"
"tb_lasti" : "tb_lasti"
"getctime" : "getctime"
"walk" : "walk"
"O_ASYNC" : "O_ASYNC"
"newdata" : "newdata"
"iso2022jp" : "iso2022jp"
"HAVE_LOG1P" : "HAVE_LOG1P"
"file" : "file"
"get_platform" : "get_platform"
"__matmul__" : "__matmul__"
"abstractstaticmethod" : "abstractstaticmethod"
"_BufferedIOBase" : "_BufferedIOBase"
"return" : "return"
"MAKESETUP" : "MAKESETUP"
"tb" : "tb"
"iso_ir_138" : "iso_ir_138"
"HAVE_REALPATH" : "HAVE_REALPATH"
"SC_PAGESIZE" : "SC_PAGESIZE"
"getloadavg" : "getloadavg"
"altsepIndex" : "altsepIndex"
"ASDLGEN_FILES" : "ASDLGEN_FILES"
"level" : "level"
"HAVE_DUP2" : "HAVE_DUP2"
"SIZEOF_LONG_DOUBLE" : "SIZEOF_LONG_DOUBLE"
"SC_EXPR_NEST_MAX" : "SC_EXPR_NEST_MAX"
"NGROUPS_MAX" : "NGROUPS_MAX"
"locked_lock" : "locked_lock"
"_relax_case" : "_relax_case"
"partition" : "partition"
"SC_RTSIG_MAX" : "SC_RTSIG_MAX"
"opt_level" : "opt_level"
"RawIOBase" : "RawIOBase"
"maxsplit" : "maxsplit"
"COREPYTHONPATH" : "COREPYTHONPATH"
"f1" : "f1"
"P_WAIT" : "P_WAIT"
"CS_XBS5_ILP32_OFFBIG_CFLAGS" : "CS_XBS5_ILP32_OFFBIG_CFLAGS"
"ST_INO" : "ST_INO"
"close" : "close"
"iso2022_jp_3" : "iso2022_jp_3"
"HAVE_GRP_H" : "HAVE_GRP_H"
"SIGNAL_OBJS" : "SIGNAL_OBJS"
"_import_tail" : "_import_tail"
"SC_2_SW_DEV" : "SC_2_SW_DEV"
"weakref_module" : "weakref_module"
"locked" : "locked"
"cyrillic" : "cyrillic"
"create_builtin" : "create_builtin"
"islink" : "islink"
"BOM64_BE" : "BOM64_BE"
"iter" : "iter"
"search" : "search"
"winreg_module" : "winreg_module"
"HAVE_TM_ZONE" : "HAVE_TM_ZONE"
"v" : "v"
"newset" : "newset"
"CS_XBS5_ILP32_OFFBIG_LIBS" : "CS_XBS5_ILP32_OFFBIG_LIBS"
"fchdir" : "fchdir"
"scls" : "scls"
"S_IFWHT" : "S_IFWHT"
"rk1048" : "rk1048"
"comps" : "comps"
"CodecRegistryError" : "CodecRegistryError"
"obj" : "obj"
"DEBUG_BYTECODE_SUFFIXES" : "DEBUG_BYTECODE_SUFFIXES"
"TCLTK_LIBS" : "TCLTK_LIBS"
"SIZEOF_SIZE_T" : "SIZEOF_SIZE_T"
"kz_1048" : "kz_1048"
"HAVE_GETPRIORITY" : "HAVE_GETPRIORITY"
"__instancecheck__" : "__instancecheck__"
"source_to_code" : "source_to_code"
"HAVE_SHADOW_H" : "HAVE_SHADOW_H"
"cp949" : "cp949"
"_stat" : "_stat"
"HAVE_FCHMODAT" : "HAVE_FCHMODAT"
"bytes_warning" : "bytes_warning"
"AST_H_DIR" : "AST_H_DIR"
"f_blocks" : "f_blocks"
"iso_8859_3_1988" : "iso_8859_3_1988"
"POSIX_FADV_DONTNEED" : "POSIX_FADV_DONTNEED"
"posix" : "posix"
"TIMEOUT_MAX" : "TIMEOUT_MAX"
"s_jisx0213" : "s_jisx0213"
"HAVE_STRUCT_TM_TM_ZONE" : "HAVE_STRUCT_TM_TM_ZONE"
"us_ascii" : "us_ascii"
"callstats" : "callstats"
"dir_fd" : "dir_fd"
"SOABI" : "SOABI"
"common" : "common"
"utf_32_be" : "utf_32_be"
"rounds" : "rounds"
"unsetenv" : "unsetenv"
"__gt__" : "__gt__"
"lock" : "lock"
"cast" : "cast"
"csshiftjis" : "csshiftjis"
"setregid" : "setregid"
"iso2022_jp_ext" : "iso2022_jp_ext"
"strftime" : "strftime"
"conf_basename" : "conf_basename"
"fchmod" : "fchmod"
"_builtin_from_name" : "_builtin_from_name"
"gmtime" : "gmtime"
"cache" : "cache"
"_init_pathinfo" : "_init_pathinfo"
"co_cellvars" : "co_cellvars"
"pycache_filename" : "pycache_filename"
"s_jis_2004" : "s_jis_2004"
"__stdout__" : "__stdout__"
"cell_contents" : "cell_contents"
"SC_PII_OSI_CLTS" : "SC_PII_OSI_CLTS"
"dict_items" : "dict_items"
"utf_8_encode" : "utf_8_encode"
"bytecode" : "bytecode"
"input" : "input"
"execlpe" : "execlpe"
"euckr" : "euckr"
"exit_thread" : "exit_thread"
"parent_module_name" : "parent_module_name"
"CS_LFS_LIBS" : "CS_LFS_LIBS"
"location" : "location"
"cp437" : "cp437"
"b" : "b"
"W_OK" : "W_OK"
"peek" : "peek"
"write_history_file" : "write_history_file"
"ms1361" : "ms1361"
"ecma_118" : "ecma_118"
"lower_suffix_contents" : "lower_suffix_contents"
"getxattr" : "getxattr"
"SC_THREAD_PRIO_PROTECT" : "SC_THREAD_PRIO_PROTECT"
"UnsupportedOperation" : "UnsupportedOperation"
"_blocking_on" : "_blocking_on"
"AST_H" : "AST_H"
"fp1" : "fp1"
"read1" : "read1"
"define_rx" : "define_rx"
"TESTPATH" : "TESTPATH"
"csibm1026" : "csibm1026"
"_Printer__lines" : "_Printer__lines"
"LIB" : "LIB"
"S_ISFIFO" : "S_ISFIFO"
"StreamWriter" : "StreamWriter"
"_findvar1_rx" : "_findvar1_rx"
"quopri" : "quopri"
"vars" : "vars"
"get_blocking" : "get_blocking"
"next" : "next"
"RTLD_DEEPBIND" : "RTLD_DEEPBIND"
"_PY_VERSION_SHORT" : "_PY_VERSION_SHORT"
"SC_PII_XTI" : "SC_PII_XTI"
"StopIteration" : "StopIteration"
"chr" : "chr"
"HAVE_PROTOTYPES" : "HAVE_PROTOTYPES"
"SYSLIBS" : "SYSLIBS"
"HAVE_BROKEN_SEM_GETVALUE" : "HAVE_BROKEN_SEM_GETVALUE"
"comp" : "comp"
"ST_NOSUID" : "ST_NOSUID"
"portions" : "portions"
"_SCHEME_KEYS" : "_SCHEME_KEYS"
"__bool__" : "__bool__"
"cp367" : "cp367"
"setresgid" : "setresgid"
"HAVE_SYS_XATTR_H" : "HAVE_SYS_XATTR_H"
"f_code" : "f_code"
"HAVE_MKDIRAT" : "HAVE_MKDIRAT"
"makefile" : "makefile"
"_code_type" : "_code_type"
"HAVE_USABLE_WCHAR_T" : "HAVE_USABLE_WCHAR_T"
"MODULE_OBJS" : "MODULE_OBJS"
"__imul__" : "__imul__"
"LIBRARY_OBJS_OMIT_FROZEN" : "LIBRARY_OBJS_OMIT_FROZEN"
"setgid" : "setgid"
"cp819" : "cp819"
"__rdivmod__" : "__rdivmod__"
"__reduce_ex__" : "__reduce_ex__"
"SC_MAPPED_FILES" : "SC_MAPPED_FILES"
"sum" : "sum"
"setitimer" : "setitimer"
"HAVE_SIGWAITINFO" : "HAVE_SIGWAITINFO"
"GRAMMAR_H" : "GRAMMAR_H"
"iso8859_3" : "iso8859_3"
"mac_greek" : "mac_greek"
"csibm858" : "csibm858"
"cr_code" : "cr_code"
"enablerlcompleter" : "enablerlcompleter"
"chroot" : "chroot"
"HAVE_MKFIFOAT" : "HAVE_MKFIFOAT"
"F_TLOCK" : "F_TLOCK"
"BufferedReader" : "BufferedReader"
"seekable" : "seekable"
"SC_XOPEN_REALTIME" : "SC_XOPEN_REALTIME"
"closerange" : "closerange"
"HAVE_TMPNAM_R" : "HAVE_TMPNAM_R"
"MACHDESTLIB" : "MACHDESTLIB"
"SC_XOPEN_UNIX" : "SC_XOPEN_UNIX"
"lexists" : "lexists"
"S_IFBLK" : "S_IFBLK"
"SC_USHRT_MAX" : "SC_USHRT_MAX"
"_resolve_name" : "_resolve_name"
"all" : "all"
"SC_PII_OSI_M" : "SC_PII_OSI_M"
"__ipow__" : "__ipow__"
"CallableProxyType" : "CallableProxyType"
"getwriter" : "getwriter"
"clear" : "clear"
"HAVE_READLINK" : "HAVE_READLINK"
"hebrew" : "hebrew"
"c" : "c"
"StreamReader" : "StreamReader"
"exe_dir" : "exe_dir"
"ibm819" : "ibm819"
"hasbytes" : "hasbytes"
"surrogatepass" : "surrogatepass"
"format" : "format"
"start_new_thread" : "start_new_thread"
"_onceregistry" : "_onceregistry"
"alias" : "alias"
"HAVE_TZNAME" : "HAVE_TZNAME"
"SIGHUP" : "SIGHUP"
"bits_per_digit" : "bits_per_digit"
"symlink" : "symlink"
"SIGURG" : "SIGURG"
"HAVE_SETUID" : "HAVE_SETUID"
"zip" : "zip"
"getuserbase" : "getuserbase"
"FLOCK_NEEDS_LIBBSD" : "FLOCK_NEEDS_LIBBSD"
"iso2022_kr" : "iso2022_kr"
"SC_PRIORITIZED_IO" : "SC_PRIORITIZED_IO"
"srw" : "srw"
"rename" : "rename"
"samestat" : "samestat"
"zfill" : "zfill"
"HAVE_STRUCT_STAT_ST_BLKSIZE" : "HAVE_STRUCT_STAT_ST_BLKSIZE"
"ks_c_5601_1987" : "ks_c_5601_1987"
"csiso2022jp" : "csiso2022jp"
"extensions" : "extensions"
"StreamRecoder" : "StreamRecoder"
"latin7" : "latin7"
"1125" : "1125"
"PendingDeprecationWarning" : "PendingDeprecationWarning"
"S_ISSOCK" : "S_ISSOCK"
"LIBOBJDIR" : "LIBOBJDIR"
"BuiltinImporter" : "BuiltinImporter"
"parse_and_bind" : "parse_and_bind"
"pydoc" : "pydoc"
"RLock" : "RLock"
"EX_CONFIG" : "EX_CONFIG"
"conjugate" : "conjugate"
"pathname" : "pathname"
"property" : "property"
"old" : "old"
"PY_" : "PY_"
"__getnewargs__" : "__getnewargs__"
"HAVE_SEM_UNLINK" : "HAVE_SEM_UNLINK"
"ITIMER_VIRTUAL" : "ITIMER_VIRTUAL"
"radix" : "radix"
"data_info" : "data_info"
"dotdot" : "dotdot"
"encoding" : "encoding"
"SC_XOPEN_CRYPT" : "SC_XOPEN_CRYPT"
"S_ISWHT" : "S_ISWHT"
"width" : "width"
"commonpath" : "commonpath"
"builtin_os" : "builtin_os"
"BufferedRWPair" : "BufferedRWPair"
"ST_CTIME" : "ST_CTIME"
"exc_type" : "exc_type"
"nondirs" : "nondirs"
"__flags__" : "__flags__"
"PYLONG_BITS_IN_DIGIT" : "PYLONG_BITS_IN_DIGIT"
"get_config_var" : "get_config_var"
"EX_UNAVAILABLE" : "EX_UNAVAILABLE"
"TextIOBase" : "TextIOBase"
"isalpha" : "isalpha"
"_validate_bytecode_header" : "_validate_bytecode_header"
"cache_tag" : "cache_tag"
"S" : "S"
"latin4" : "latin4"
"append" : "append"
"HAVE_STRUCT_STAT_ST_RDEV" : "HAVE_STRUCT_STAT_ST_RDEV"
"_script" : "_script"
"tzset" : "tzset"
"java" : "java"
"ST_SIZE" : "ST_SIZE"
"cspc862latinhebrew" : "cspc862latinhebrew"
"GRAMMAR_INPUT" : "GRAMMAR_INPUT"
"micro" : "micro"
"__loader__" : "__loader__"
"SC_LOGIN_NAME_MAX" : "SC_LOGIN_NAME_MAX"
"SC_SCHAR_MIN" : "SC_SCHAR_MIN"
"Warning" : "Warning"
"dev2" : "dev2"
"iso_ir_58" : "iso_ir_58"
"real" : "real"
"_open_registry" : "_open_registry"
"source_path" : "source_path"
"HAVE_LINUX_NETLINK_H" : "HAVE_LINUX_NETLINK_H"
"exc_info" : "exc_info"
"getrefcount" : "getrefcount"
"PARSER_OBJS" : "PARSER_OBJS"
"ValuesView" : "ValuesView"
"HAVE_TMPFILE" : "HAVE_TMPFILE"
"HAVE_SETSID" : "HAVE_SETSID"
"PYTHON" : "PYTHON"
"HAVE_GETHOSTBYNAME_R_5_ARG" : "HAVE_GETHOSTBYNAME_R_5_ARG"
"iso2022_jp_2004" : "iso2022_jp_2004"
"getreader" : "getreader"
"HAVE_DECL_ISNAN" : "HAVE_DECL_ISNAN"
"cb" : "cb"
"OpenWrapper" : "OpenWrapper"
"tail_name" : "tail_name"
"C" : "C"
"source_bytes_readline" : "source_bytes_readline"
"LIBOBJS" : "LIBOBJS"
"TESTTIMEOUT" : "TESTTIMEOUT"
"ItemsView" : "ItemsView"
"x" : "x"
"utf_16_be_decode" : "utf_16_be_decode"
"fullname" : "fullname"
"py_version_short" : "py_version_short"
"HAVE_SYS_TIME_H" : "HAVE_SYS_TIME_H"
"set_blocking" : "set_blocking"
"find_module" : "find_module"
"iso_8859_13" : "iso_8859_13"
"1255" : "1255"
"SC_NPROCESSORS_CONF" : "SC_NPROCESSORS_CONF"
"isfile" : "isfile"
"wait" : "wait"
"HAVE_SYS_BSDTTY_H" : "HAVE_SYS_BSDTTY_H"
"follow_symlinks" : "follow_symlinks"
"HAVE_GCC_UINT128_T" : "HAVE_GCC_UINT128_T"
"setprofile" : "setprofile"
"tm_year" : "tm_year"
"filter" : "filter"
"builtin_module" : "builtin_module"
"BOM_UTF16_LE" : "BOM_UTF16_LE"
"FILE_ATTRIBUTE_DIRECTORY" : "FILE_ATTRIBUTE_DIRECTORY"
"csisolatin2" : "csisolatin2"
"SyntaxError" : "SyntaxError"
"stat_info" : "stat_info"
"SC_STREAM_MAX" : "SC_STREAM_MAX"
"SC_XOPEN_VERSION" : "SC_XOPEN_VERSION"
"HAVE_FINITE" : "HAVE_FINITE"
"MODOBJS" : "MODOBJS"
"HAVE_DECL_ISINF" : "HAVE_DECL_ISINF"
"PYTHONPATH" : "PYTHONPATH"
"_remove" : "_remove"
"__rand__" : "__rand__"
"min_exp" : "min_exp"
"WITH_NEXT_FRAMEWORK" : "WITH_NEXT_FRAMEWORK"
"cpu_count" : "cpu_count"
"posix_prefix" : "posix_prefix"
"INCLUDEDIR" : "INCLUDEDIR"
"pwrite" : "pwrite"
"csisolatin3" : "csisolatin3"
"archive" : "archive"
"false" : "false"
"callable" : "callable"
"SIGSYS" : "SIGSYS"
"l9" : "l9"
"CS_LFS64_LDFLAGS" : "CS_LFS64_LDFLAGS"
"_safe_realpath" : "_safe_realpath"
"CS_LFS_CFLAGS" : "CS_LFS_CFLAGS"
"_fix_co_filename" : "_fix_co_filename"
"quoted_printable" : "quoted_printable"
"HAVE_SETHOSTNAME" : "HAVE_SETHOSTNAME"
"HAVE_BLUETOOTH_BLUETOOTH_H" : "HAVE_BLUETOOTH_BLUETOOTH_H"
"GRAMMAR_C" : "GRAMMAR_C"
"CLD_CONTINUED" : "CLD_CONTINUED"
"_STRUCT_TM_ITEMS" : "_STRUCT_TM_ITEMS"
"HAVE_SIGRELSE" : "HAVE_SIGRELSE"
"utf_16le" : "utf_16le"
"__exit__" : "__exit__"
"HAVE_FTELLO" : "HAVE_FTELLO"
"utf_32_decode" : "utf_32_decode"
"PC_FILESIZEBITS" : "PC_FILESIZEBITS"
"intersection_update" : "intersection_update"
"is_finalizing" : "is_finalizing"
"LLVM_PROF_ERR" : "LLVM_PROF_ERR"
"path" : "path"
"stderr" : "stderr"
"HAVE_BLUETOOTH_H" : "HAVE_BLUETOOTH_H"
"S_ISREG" : "S_ISREG"
"T" : "T"
"BOM_UTF32_LE" : "BOM_UTF32_LE"
"target_dict" : "target_dict"
"WeakSet" : "WeakSet"
"MAX" : "MAX"
"INSTALL_PROGRAM" : "INSTALL_PROGRAM"
"HAVE_SEM_OPEN" : "HAVE_SEM_OPEN"
"424" : "424"
"virtual_conf" : "virtual_conf"
"st_gid" : "st_gid"
"FileLoader" : "FileLoader"
"_exists" : "_exists"
"ProxyType" : "ProxyType"
"MemoryError" : "MemoryError"
"_ManageReload" : "_ManageReload"
"KeyboardInterrupt" : "KeyboardInterrupt"
"zip_iterator" : "zip_iterator"
"setegid" : "setegid"
"_path_cache" : "_path_cache"
"intern" : "intern"
"isabs" : "isabs"
"__round__" : "__round__"
"numerator" : "numerator"
"cp" : "cp"
"map" : "map"
"_get_cached" : "_get_cached"
"S_IXOTH" : "S_IXOTH"
"S_ISLNK" : "S_ISLNK"
"WITH_DOC_STRINGS" : "WITH_DOC_STRINGS"
"Py_DEBUG" : "Py_DEBUG"
"P_NOWAITO" : "P_NOWAITO"
"orig_st" : "orig_st"
"getregentry" : "getregentry"
"SC_BC_DIM_MAX" : "SC_BC_DIM_MAX"
"elot_928" : "elot_928"
"k" : "k"
"format_exception" : "format_exception"
"argrest" : "argrest"
"UserWarning" : "UserWarning"
"builtin_name" : "builtin_name"
"pow" : "pow"
"O_LARGEFILE" : "O_LARGEFILE"
"machine" : "machine"
"itanium" : "itanium"
"SC_SIGQUEUE_MAX" : "SC_SIGQUEUE_MAX"
"as_integer_ratio" : "as_integer_ratio"
"_verbose_message" : "_verbose_message"
"macintosh" : "macintosh"
"ENSUREPIP" : "ENSUREPIP"
"HAVE_GETRESGID" : "HAVE_GETRESGID"
"indices" : "indices"
"find_loader" : "find_loader"
"strict" : "strict"
"euc_kr" : "euc_kr"
"CONFIGFILES" : "CONFIGFILES"
"_compile_bytecode" : "_compile_bytecode"
"SC_DELAYTIMER_MAX" : "SC_DELAYTIMER_MAX"
"utf" : "utf"
"start" : "start"
"S_ISPORT" : "S_ISPORT"
"OBJECT_OBJS" : "OBJECT_OBJS"
"si_signo" : "si_signo"
"cp860" : "cp860"
"exec" : "exec"
"S_IFPORT" : "S_IFPORT"
"sitecustomize" : "sitecustomize"
"csibm857" : "csibm857"
"EX_NOINPUT" : "EX_NOINPUT"
"SEEK_END" : "SEEK_END"
"LLVM_PROF_MERGER" : "LLVM_PROF_MERGER"
"iso_2022_jp" : "iso_2022_jp"
"arabic" : "arabic"
"issuperset" : "issuperset"
"charmap_decode" : "charmap_decode"
"437" : "437"
"execl" : "execl"
"after" : "after"
"bool" : "bool"
"thread_info" : "thread_info"
"cp1257" : "cp1257"
"sys_module" : "sys_module"
"LINKFORSHARED" : "LINKFORSHARED"
"tis_620_2529_0" : "tis_620_2529_0"
"waiters" : "waiters"
"m2" : "m2"
"isnumeric" : "isnumeric"
"found" : "found"
"SUBDIRS" : "SUBDIRS"
"
" : "
"
"val" : "val"
"HAVE_LCHOWN" : "HAVE_LCHOWN"
"maccentraleurope" : "maccentraleurope"
"HAVE_BROKEN_NICE" : "HAVE_BROKEN_NICE"
"path_hook" : "path_hook"
"__self_class__" : "__self_class__"
"csisolatin6" : "csisolatin6"
"AST_C_DIR" : "AST_C_DIR"
"st_rdev" : "st_rdev"
"SC_THREAD_PROCESS_SHARED" : "SC_THREAD_PROCESS_SHARED"
"enumerate" : "enumerate"
"XMLLIBSUBDIRS" : "XMLLIBSUBDIRS"
"SIGWINCH" : "SIGWINCH"
"_lstat" : "_lstat"
"HAVE_NETPACKET_PACKET_H" : "HAVE_NETPACKET_PACKET_H"
"SC_UCHAR_MAX" : "SC_UCHAR_MAX"
"ebcdic_cp_he" : "ebcdic_cp_he"
"atexit" : "atexit"
"__hash__" : "__hash__"
"SC_SEMAPHORES" : "SC_SEMAPHORES"
"gi_code" : "gi_code"
"kwds" : "kwds"
"decodevalue" : "decodevalue"
"tis_620" : "tis_620"
"O_WRONLY" : "O_WRONLY"
"_abc_invalidation_counter" : "_abc_invalidation_counter"
"UF_COMPRESSED" : "UF_COMPRESSED"
"HAVE_UNSETENV" : "HAVE_UNSETENV"
"S_IRWXU" : "S_IRWXU"
"__delattr__" : "__delattr__"
"__isub__" : "__isub__"
"typ" : "typ"
"incrementalencoder" : "incrementalencoder"
"dircase" : "dircase"
"getprofile" : "getprofile"
"bytes_iterator" : "bytes_iterator"
"CS_XBS5_ILP32_OFF32_LDFLAGS" : "CS_XBS5_ILP32_OFF32_LDFLAGS"
"fwalk" : "fwalk"
"BOM_UTF32_BE" : "BOM_UTF32_BE"
"gi_yieldfrom" : "gi_yieldfrom"
"IndexError" : "IndexError"
"parse_config_h" : "parse_config_h"
"HAVE_SYS_MKDEV_H" : "HAVE_SYS_MKDEV_H"
"_zip_directory_cache" : "_zip_directory_cache"
"_finalizing" : "_finalizing"
"HAVE_SYS_ENDIAN_H" : "HAVE_SYS_ENDIAN_H"
"SC_2_C_DEV" : "SC_2_C_DEV"
"HAVE_EXPM1" : "HAVE_EXPM1"
"zlib" : "zlib"
"F_LOCK" : "F_LOCK"
"HAVE_ENDIAN_H" : "HAVE_ENDIAN_H"
"chown" : "chown"
"SC_XOPEN_REALTIME_THREADS" : "SC_XOPEN_REALTIME_THREADS"
"__ne__" : "__ne__"
"returncode" : "returncode"
"BINLIBDEST" : "BINLIBDEST"
"help" : "help"
"cr_frame" : "cr_frame"
"O_NOFOLLOW" : "O_NOFOLLOW"
"ByteString" : "ByteString"
"ms932" : "ms932"
"CLOCK_MONOTONIC" : "CLOCK_MONOTONIC"
"HAVE_UINT32_T" : "HAVE_UINT32_T"
"euccn" : "euccn"
"_joinrealpath" : "_joinrealpath"
"HAVE_MREMAP" : "HAVE_MREMAP"
"_exec" : "_exec"
"EX_OK" : "EX_OK"
"_spawnvef" : "_spawnvef"
"HAVE_CTERMID" : "HAVE_CTERMID"
"debug" : "debug"
"set" : "set"
"MutableSequence" : "MutableSequence"
"__and__" : "__and__"
"abs" : "abs"
"_path" : "_path"
"parent_module" : "parent_module"
"sizehint" : "sizehint"
"SC_TTY_NAME_MAX" : "SC_TTY_NAME_MAX"
"SIZEOF_LONG" : "SIZEOF_LONG"
"id" : "id"
"HAVE_UNAME" : "HAVE_UNAME"
"platlib" : "platlib"
"sjis" : "sjis"
"iso_8859_2" : "iso_8859_2"
"new" : "new"
"SIZEOF_TIME_T" : "SIZEOF_TIME_T"
"invalidate_caches" : "invalidate_caches"
"__len__" : "__len__"
"INSTALL" : "INSTALL"
"get_paths" : "get_paths"
"cp1252" : "cp1252"
"HAVE_KQUEUE" : "HAVE_KQUEUE"
"EncodedFile" : "EncodedFile"
"_find_and_load_unlocked" : "_find_and_load_unlocked"
"releaselevel" : "releaselevel"
"mac_turkish" : "mac_turkish"
"LIBS" : "LIBS"
"filepath" : "filepath"
"setpriority" : "setpriority"
"CCSHARED" : "CCSHARED"
"_recalculate" : "_recalculate"
"HAVE_GETRANDOM_SYSCALL" : "HAVE_GETRANDOM_SYSCALL"
"__context__" : "__context__"
"_get_parent_path" : "_get_parent_path"
"readv" : "readv"
"rcls" : "rcls"
"_path_importer_cache" : "_path_importer_cache"
"_lock" : "_lock"
"strict_errors" : "strict_errors"
"getenvb" : "getenvb"
"_bootstrap_module" : "_bootstrap_module"
"st_mtime_ns" : "st_mtime_ns"
"isatty" : "isatty"
"execlp" : "execlp"
"864" : "864"
"is_python_build" : "is_python_build"
"cp1250" : "cp1250"
"X_OK" : "X_OK"
"tuple" : "tuple"
"_get_default_scheme" : "_get_default_scheme"
"popitem" : "popitem"
"_buffer_encode" : "_buffer_encode"
"keepends" : "keepends"
"PACKAGE_URL" : "PACKAGE_URL"
"__globals__" : "__globals__"
"B" : "B"
"1254" : "1254"
"CS_LFS_LINTFLAGS" : "CS_LFS_LINTFLAGS"
"DISTDIRS" : "DISTDIRS"
"reset" : "reset"
"UnboundLocalError" : "UnboundLocalError"
"f_flag" : "f_flag"
"EXEMODE" : "EXEMODE"
"S_IROTH" : "S_IROTH"
"S_IFREG" : "S_IFREG"
"_mercurial" : "_mercurial"
"WINDOW_HAS_FLAGS" : "WINDOW_HAS_FLAGS"
"ruscii" : "ruscii"
"cp500" : "cp500"
"mktime" : "mktime"
"mac_iceland" : "mac_iceland"
"Variables" : "Variables"
"WIFSTOPPED" : "WIFSTOPPED"
"_fill_cache" : "_fill_cache"
"HAVE_LIBDLD" : "HAVE_LIBDLD"
"SC_XOPEN_XPG3" : "SC_XOPEN_XPG3"
"getdlopenflags" : "getdlopenflags"
"geteuid" : "geteuid"
"set_inheritable" : "set_inheritable"
"_pending_removals" : "_pending_removals"
"_find_module_shim" : "_find_module_shim"
"abstractmethod" : "abstractmethod"
"HAVE_IF_NAMEINDEX" : "HAVE_IF_NAMEINDEX"
"iso_ir_127" : "iso_ir_127"
"str" : "str"
"record" : "record"
"SC_2_C_BIND" : "SC_2_C_BIND"
"decoding_map" : "decoding_map"
"codecaliases" : "codecaliases"
"HAVE_ADDRINFO" : "HAVE_ADDRINFO"
"platform" : "platform"
"terminal_size" : "terminal_size"
"setquit" : "setquit"
"TextIOWrapper" : "TextIOWrapper"
"_USER_BASE" : "_USER_BASE"
"iso2022jp_ext" : "iso2022jp_ext"
"fget" : "fget"
"DOUBLE_IS_ARM_MIXED_ENDIAN_IEEE754" : "DOUBLE_IS_ARM_MIXED_ENDIAN_IEEE754"
"HAVE_SYS_POLL_H" : "HAVE_SYS_POLL_H"
"Ellipsis" : "Ellipsis"
"itemsize" : "itemsize"
"__rtruediv__" : "__rtruediv__"
"displayhook" : "displayhook"
"stdlib" : "stdlib"
"mant_dig" : "mant_dig"
"SC_INT_MAX" : "SC_INT_MAX"
"HAVE_OPENPTY" : "HAVE_OPENPTY"
"ibm858" : "ibm858"
"access" : "access"
"Py_ENABLE_SHARED" : "Py_ENABLE_SHARED"
"owner" : "owner"
"swapcase" : "swapcase"
"framework" : "framework"
"_have_functions" : "_have_functions"
"cspc8codepage437" : "cspc8codepage437"
"HAVE_GETNAMEINFO" : "HAVE_GETNAMEINFO"
"_sys_home" : "_sys_home"
"RuntimeWarning" : "RuntimeWarning"
"HAVE_ASM_TYPES_H" : "HAVE_ASM_TYPES_H"
"platbase" : "platbase"
"getdecoder" : "getdecoder"
"target" : "target"
"argv" : "argv"
"getgroups" : "getgroups"
"FutureWarning" : "FutureWarning"
"SC_PII_SOCKET" : "SC_PII_SOCKET"
"mskanji" : "mskanji"
"tis260" : "tis260"
"hasattr" : "hasattr"
"rel_re" : "rel_re"
"sitedircase" : "sitedircase"
"is_file" : "is_file"
"gb2312" : "gb2312"
"supports_fd" : "supports_fd"
"co_consts" : "co_consts"
"HAVE_FTIME" : "HAVE_FTIME"
"__ror__" : "__ror__"
"_get_exports_list" : "_get_exports_list"
"_load_unlocked" : "_load_unlocked"
"HAVE_STRLCPY" : "HAVE_STRLCPY"
"latin10" : "latin10"
"iso8859_13" : "iso8859_13"
"greek" : "greek"
"abs_srcdir" : "abs_srcdir"
"__new__" : "__new__"
"makepath" : "makepath"
"truncate" : "truncate"
"OPTIMIZED_BYTECODE_SUFFIXES" : "OPTIMIZED_BYTECODE_SUFFIXES"
"HAVE_SYS_PARAM_H" : "HAVE_SYS_PARAM_H"
"executable" : "executable"
"SYS_SELECT_WITH_SYS_TIME" : "SYS_SELECT_WITH_SYS_TIME"
"error" : "error"
"CONFINCLUDEDIR" : "CONFINCLUDEDIR"
"P_PID" : "P_PID"
"import_" : "import_"
"FILE_ATTRIBUTE_REPARSE_POINT" : "FILE_ATTRIBUTE_REPARSE_POINT"
"WNOHANG" : "WNOHANG"
"self" : "self"
"HAVE_CHOWN" : "HAVE_CHOWN"
"EX_NOHOST" : "EX_NOHOST"
"big5_hkscs" : "big5_hkscs"
"HAVE_GETGROUPLIST" : "HAVE_GETGROUPLIST"
"ibm869" : "ibm869"
"MappingView" : "MappingView"
"arch" : "arch"
"object" : "object"
"POSIX_FADV_WILLNEED" : "POSIX_FADV_WILLNEED"
"HAVE_UTIL_H" : "HAVE_UTIL_H"
"listcomp" : "listcomp"
"HAVE_CURSES_H" : "HAVE_CURSES_H"
"load_module" : "load_module"
"vals" : "vals"
"EX_IOERR" : "EX_IOERR"
"EXTRA_CFLAGS" : "EXTRA_CFLAGS"
"fromlist" : "fromlist"
"codecs" : "codecs"
"SC_SEM_VALUE_MAX" : "SC_SEM_VALUE_MAX"
"__float__" : "__float__"
"TCLTK_INCLUDES" : "TCLTK_INCLUDES"
"F_OK" : "F_OK"
"closed" : "closed"
"ibm855" : "ibm855"
"__defaults__" : "__defaults__"
"LockType" : "LockType"
"sysconf_names" : "sysconf_names"
"_attributes" : "_attributes"
"windows_1250" : "windows_1250"
"FILE_ATTRIBUTE_READONLY" : "FILE_ATTRIBUTE_READONLY"
"defpath" : "defpath"
"cr_running" : "cr_running"
"LIBM" : "LIBM"
"spawnv" : "spawnv"
"S_IWGRP" : "S_IWGRP"
"__reversed__" : "__reversed__"
"HAVE_WAIT4" : "HAVE_WAIT4"
"HAVE_BROKEN_UNSETENV" : "HAVE_BROKEN_UNSETENV"
"IOError" : "IOError"
"__call__" : "__call__"
"funcobj" : "funcobj"
"head" : "head"
"endswith" : "endswith"
"characters_written" : "characters_written"
"initgroups" : "initgroups"
"StreamConverter" : "StreamConverter"
"FloatingPointError" : "FloatingPointError"
"HAVE_POLL" : "HAVE_POLL"
"SC_MESSAGE_PASSING" : "SC_MESSAGE_PASSING"
"scandir_it" : "scandir_it"
"sched_setscheduler" : "sched_setscheduler"
"incrementaldecoder" : "incrementaldecoder"
"ibm852" : "ibm852"
"866" : "866"
"co_names" : "co_names"
"ConnectionAbortedError" : "ConnectionAbortedError"
"DESTDIRS" : "DESTDIRS"
"PC_SOCK_MAXBUF" : "PC_SOCK_MAXBUF"
"target_keys" : "target_keys"
"EX_OSERR" : "EX_OSERR"
"FILE_ATTRIBUTE_SYSTEM" : "FILE_ATTRIBUTE_SYSTEM"
"tokenize" : "tokenize"
"_lock_unlock_module" : "_lock_unlock_module"
"HAVE_LONG_LONG" : "HAVE_LONG_LONG"
"ebcdic_cp_ca" : "ebcdic_cp_ca"
"_dummy_scandir" : "_dummy_scandir"
"front" : "front"
"csibm424" : "csibm424"
"ST_MANDLOCK" : "ST_MANDLOCK"
"HAVE__GETPTY" : "HAVE__GETPTY"
"DLLLIBRARY" : "DLLLIBRARY"
"ascii_encode" : "ascii_encode"
"si_pid" : "si_pid"
"chmod" : "chmod"
"cp424" : "cp424"
"SC_MEMLOCK" : "SC_MEMLOCK"
"HAVE_SYMLINKAT" : "HAVE_SYMLINKAT"
"env_base" : "env_base"
"HAVE_FCHDIR" : "HAVE_FCHDIR"
"SC_ATEXIT_MAX" : "SC_ATEXIT_MAX"
"MAJOR_IN_SYSMACROS" : "MAJOR_IN_SYSMACROS"
"confstr_names" : "confstr_names"
"S_ISGID" : "S_ISGID"
"inf" : "inf"
"SC_UINT_MAX" : "SC_UINT_MAX"
"_PREFIX" : "_PREFIX"
"__ifloordiv__" : "__ifloordiv__"
"si_status" : "si_status"
"lower" : "lower"
"__author__" : "__author__"
"csisolatingreek" : "csisolatingreek"
"NO_AS_NEEDED" : "NO_AS_NEEDED"
"latin6" : "latin6"
"utf_32_le_encode" : "utf_32_le_encode"
"clock" : "clock"
"st_mtime" : "st_mtime"
"FILE_ATTRIBUTE_NO_SCRUB_DATA" : "FILE_ATTRIBUTE_NO_SCRUB_DATA"
"ismount" : "ismount"
"BOM_UTF8" : "BOM_UTF8"
"__delitem__" : "__delitem__"
"SIGTERM" : "SIGTERM"
"iso_8859_9_1989" : "iso_8859_9_1989"
"item" : "item"
"finder" : "finder"
"Exception" : "Exception"
"st_ctime_ns" : "st_ctime_ns"
"count" : "count"
"macgreek" : "macgreek"
"__iand__" : "__iand__"
"__imatmul__" : "__imatmul__"
"869" : "869"
"x_mac_korean" : "x_mac_korean"
"code" : "code"
"root" : "root"
"xmlcharrefreplace" : "xmlcharrefreplace"
"863" : "863"
"S_IRGRP" : "S_IRGRP"
"csibm866" : "csibm866"
"LDLAST" : "LDLAST"
"HAVE_PTHREAD_INIT" : "HAVE_PTHREAD_INIT"
"__itemsize__" : "__itemsize__"
"iso8859_7" : "iso8859_7"
"epsilon" : "epsilon"
"cp1125" : "cp1125"
"PYTHONFRAMEWORK" : "PYTHONFRAMEWORK"
"HAVE_CHFLAGS" : "HAVE_CHFLAGS"
"addsitepackages" : "addsitepackages"
"POBJS" : "POBJS"
"HAVE_TEMPNAM" : "HAVE_TEMPNAM"
"__divmod__" : "__divmod__"
"__callback__" : "__callback__"
"system_site" : "system_site"
"environ" : "environ"
"getppid" : "getppid"
"OPCODETARGETS_H" : "OPCODETARGETS_H"
"clock_settime" : "clock_settime"
"lchown" : "lchown"
"children_user" : "children_user"
"_Printer__filenames" : "_Printer__filenames"
"PC_LINK_MAX" : "PC_LINK_MAX"
"_local" : "_local"
"key" : "key"
"get_python_version" : "get_python_version"
"nice" : "nice"
"SC_LONG_BIT" : "SC_LONG_BIT"
"HAVE_EPOLL" : "HAVE_EPOLL"
"tm_mon" : "tm_mon"
"__weakrefoffset__" : "__weakrefoffset__"
"csisolatinhebrew" : "csisolatinhebrew"
"HAVE_BIND_TEXTDOMAIN_CODESET" : "HAVE_BIND_TEXTDOMAIN_CODESET"
"marshal" : "marshal"
"HAVE_LIBRESOLV" : "HAVE_LIBRESOLV"
"_mapping" : "_mapping"
"base64" : "base64"
"ibm1140" : "ibm1140"
"ABCMeta" : "ABCMeta"
"encodedkey" : "encodedkey"
"TANH_PRESERVES_ZERO_SIGN" : "TANH_PRESERVES_ZERO_SIGN"
"raw_timestamp" : "raw_timestamp"
"BOM_UTF16" : "BOM_UTF16"
"iso_celtic" : "iso_celtic"
"bases" : "bases"
"PGOBJS" : "PGOBJS"
"set_iterator" : "set_iterator"
"S_IWUSR" : "S_IWUSR"
"namespace" : "namespace"
"__subclasses__" : "__subclasses__"
"R_OK" : "R_OK"
"HAVE_WCSXFRM" : "HAVE_WCSXFRM"
"__rsub__" : "__rsub__"
"Container" : "Container"
"_commit_removals" : "_commit_removals"
"ibm273" : "ibm273"
"ok" : "ok"
"cp037" : "cp037"
"big5" : "big5"
"<lambda>" : "<lambda>"
"HAVE_ALIGNED_REQUIRED" : "HAVE_ALIGNED_REQUIRED"
"alarm" : "alarm"
"HAVE_PROCESS_H" : "HAVE_PROCESS_H"
"HAVE_FSTATVFS" : "HAVE_FSTATVFS"
"SC_INT_MIN" : "SC_INT_MIN"
"get_path" : "get_path"
"cp865" : "cp865"
"MAINCC" : "MAINCC"
"__ixor__" : "__ixor__"
"strerror" : "strerror"
"commonprefix" : "commonprefix"
"IncrementalEncoder" : "IncrementalEncoder"
"HAVE_DIRENT_H" : "HAVE_DIRENT_H"
"SIGXCPU" : "SIGXCPU"
"__bytes__" : "__bytes__"
"Iterable" : "Iterable"
"iso_8859_14" : "iso_8859_14"
"INCLUDEPY" : "INCLUDEPY"
"iso2022jp_1" : "iso2022jp_1"
"HAVE_SYS_SYS_DOMAIN_H" : "HAVE_SYS_SYS_DOMAIN_H"
"tb_frame" : "tb_frame"
"_checkClosed" : "_checkClosed"
"contents" : "contents"
"SC_PII_INTERNET_DGRAM" : "SC_PII_INTERNET_DGRAM"
"HAVE_KILLPG" : "HAVE_KILLPG"
"USE_INLINE" : "USE_INLINE"
"LDVERSION" : "LDVERSION"
"HAVE_LCHFLAGS" : "HAVE_LCHFLAGS"
"SC_SYNCHRONIZED_IO" : "SC_SYNCHRONIZED_IO"
"S_IWRITE" : "S_IWRITE"
"exec_func" : "exec_func"
"SIZEOF_FLOAT" : "SIZEOF_FLOAT"
"_cache_bytecode" : "_cache_bytecode"
"HAVE_SYS_RESOURCE_H" : "HAVE_SYS_RESOURCE_H"
"_init_non_posix" : "_init_non_posix"
"Writer" : "Writer"
"norm_encoding" : "norm_encoding"
"HAVE_CONIO_H" : "HAVE_CONIO_H"
"ResourceWarning" : "ResourceWarning"
"u8" : "u8"
"removedirs" : "removedirs"
"S_IFMT" : "S_IFMT"
"S_ISDOOR" : "S_ISDOOR"
"__rshift__" : "__rshift__"
"format_map" : "format_map"
"getatime" : "getatime"
"SC_POLL" : "SC_POLL"
"buffer" : "buffer"
"PTHREAD_SYSTEM_SCHED_SUPPORTED" : "PTHREAD_SYSTEM_SCHED_SUPPORTED"
"base_path" : "base_path"
"SIGALRM" : "SIGALRM"
"775" : "775"
"_ERR_MSG" : "_ERR_MSG"
"ibm860" : "ibm860"
"SIG_UNBLOCK" : "SIG_UNBLOCK"
"submodule_search_locations" : "submodule_search_locations"
"l2" : "l2"
"windows_1255" : "windows_1255"
"861" : "861"
"euc_cn" : "euc_cn"
"LLVM_PROF_FILE" : "LLVM_PROF_FILE"
"tzname" : "tzname"
"HAVE_SIGTIMEDWAIT" : "HAVE_SIGTIMEDWAIT"
"acquire" : "acquire"
"DESTPATH" : "DESTPATH"
"unicode_escape_decode" : "unicode_escape_decode"
"ns" : "ns"
"kwargs" : "kwargs"
"quiet" : "quiet"
"aix" : "aix"
"PGSRCS" : "PGSRCS"
"u16" : "u16"
"_DeadlockError" : "_DeadlockError"
"ignore_environment" : "ignore_environment"
"HAVE_EXECV" : "HAVE_EXECV"
"HAVE_LGAMMA" : "HAVE_LGAMMA"
"HAVE_STATVFS" : "HAVE_STATVFS"
"HAVE_STRUCT_STAT_ST_FLAGS" : "HAVE_STRUCT_STAT_ST_FLAGS"
"eucgb2312_cn" : "eucgb2312_cn"
"cp857" : "cp857"
"decode" : "decode"
"device_encoding" : "device_encoding"
"pardir" : "pardir"
"uu" : "uu"
"WNOWAIT" : "WNOWAIT"
"__thisclass__" : "__thisclass__"
"utf-8" : "utf-8"
"csiso58gb231280" : "csiso58gb231280"
"_cached" : "_cached"
"s_jis" : "s_jis"
"HAVE_RL_RESIZE_TERMINAL" : "HAVE_RL_RESIZE_TERMINAL"
"__import__" : "__import__"
"SC_THREAD_SAFE_FUNCTIONS" : "SC_THREAD_SAFE_FUNCTIONS"
"stdout" : "stdout"
"OPCODE_H_DIR" : "OPCODE_H_DIR"
"expand" : "expand"
"SC_NZERO" : "SC_NZERO"
"discard" : "discard"
"bytearray_iterator" : "bytearray_iterator"
"HAVE_DEV_PTMX" : "HAVE_DEV_PTMX"
"SC_BC_SCALE_MAX" : "SC_BC_SCALE_MAX"
"osname" : "osname"
"_Environ" : "_Environ"
"ms_kanji" : "ms_kanji"
"ascii" : "ascii"
"SIGPROF" : "SIGPROF"
"sort" : "sort"
"cp154" : "cp154"
"_os" : "_os"
"CXX" : "CXX"
"cp869" : "cp869"
"siginterrupt" : "siginterrupt"
"title" : "title"
"credits" : "credits"
"t" : "t"
"__interactivehook__" : "__interactivehook__"
"latin" : "latin"
"ValueError" : "ValueError"
"csibm869" : "csibm869"
"setpgid" : "setpgid"
"eucjis2004" : "eucjis2004"
"_splitext" : "_splitext"
"_get_sourcefile" : "_get_sourcefile"
"iso2022kr" : "iso2022kr"
"ino1" : "ino1"
"MANDIR" : "MANDIR"
"csascii" : "csascii"
"_path_mtime" : "_path_mtime"
"modname" : "modname"
"SC_XOPEN_XPG2" : "SC_XOPEN_XPG2"
"setxattr" : "setxattr"
"sysconf" : "sysconf"
"path_mtime" : "path_mtime"
"HAVE_SETPGRP" : "HAVE_SETPGRP"
"iso_8859_8_1988" : "iso_8859_8_1988"
"getfilesystemencoding" : "getfilesystemencoding"
"decodekey" : "decodekey"
"columns" : "columns"
"865" : "865"
"times_result" : "times_result"
"HAVE_SETREUID" : "HAVE_SETREUID"
"variables" : "variables"
"scheme" : "scheme"
"UnicodeTranslateError" : "UnicodeTranslateError"
"e" : "e"
"273" : "273"
"HAVE_HTOLE64" : "HAVE_HTOLE64"
"magic" : "magic"
"makedirs" : "makedirs"
"utf_16_encode" : "utf_16_encode"
"iso8859_5" : "iso8859_5"
"copyright" : "copyright"
"HAVE_SOCKADDR_STORAGE" : "HAVE_SOCKADDR_STORAGE"
"PYTHON_HEADERS" : "PYTHON_HEADERS"
"1252" : "1252"
"SIG_BLOCK" : "SIG_BLOCK"
"Python" : "Python"
"get_frozen_object" : "get_frozen_object"
"default" : "default"
"__debug__" : "__debug__"
"BaseException" : "BaseException"
"HAVE_WCHAR_H" : "HAVE_WCHAR_H"
"n_sequence_fields" : "n_sequence_fields"
"unicode_escape_encode" : "unicode_escape_encode"
"getpgid" : "getpgid"
"ITIMER_REAL" : "ITIMER_REAL"
"HAVE_SETREGID" : "HAVE_SETREGID"
"pathconf_names" : "pathconf_names"
"SIZEOF_PID_T" : "SIZEOF_PID_T"
"_release_save" : "_release_save"
"_weakref" : "_weakref"
"_CASE_INSENSITIVE_PLATFORMS" : "_CASE_INSENSITIVE_PLATFORMS"
"WITH_TSC" : "WITH_TSC"
"__radd__" : "__radd__"
"tb_lineno" : "tb_lineno"
"projectbase" : "projectbase"
"hash" : "hash"
"_imp" : "_imp"
"SIGFPE" : "SIGFPE"
"__lshift__" : "__lshift__"
"STRIPFLAG" : "STRIPFLAG"
"utf_32" : "utf_32"
"n" : "n"
"shape" : "shape"
"SIZEOF_FPOS_T" : "SIZEOF_FPOS_T"
"tm_zone" : "tm_zone"
"undef_rx" : "undef_rx"
"tilde" : "tilde"
"OSError" : "OSError"
"value" : "value"
"HAVE_STRING_H" : "HAVE_STRING_H"
"m1" : "m1"
"listdir" : "listdir"
"SIGILL" : "SIGILL"
"LIBSUBDIRS" : "LIBSUBDIRS"
"keys" : "keys"
"spawnvp" : "spawnvp"
"co_code" : "co_code"
"EX_PROTOCOL" : "EX_PROTOCOL"
"_call_with_frames_removed" : "_call_with_frames_removed"
"l10" : "l10"
"HAVE_LIBREADLINE" : "HAVE_LIBREADLINE"
"HAVE_OPENAT" : "HAVE_OPENAT"
"iso8859_9" : "iso8859_9"
"exit" : "exit"
"Makefile" : "Makefile"
"ibm037" : "ibm037"
"SC_ASYNCHRONOUS_IO" : "SC_ASYNCHRONOUS_IO"
"supported_loaders" : "supported_loaders"
"lines" : "lines"
"base_filename" : "base_filename"
"TIME_WITH_SYS_TIME" : "TIME_WITH_SYS_TIME"
"SC_SSIZE_MAX" : "SC_SSIZE_MAX"
"relpath" : "relpath"
"gb18030_2000" : "gb18030_2000"
"unicodelittleunmarked" : "unicodelittleunmarked"
"HAVE_LOG2" : "HAVE_LOG2"
"chinese" : "chinese"
"windows_1256" : "windows_1256"
"issubset" : "issubset"
"fdel" : "fdel"
"PC_PIPE_BUF" : "PC_PIPE_BUF"
"Paths" : "Paths"
"generator" : "generator"
"Callable" : "Callable"
"bytes" : "bytes"
"posix_fallocate" : "posix_fallocate"
"range_iterator" : "range_iterator"
"_filters_mutated" : "_filters_mutated"
"sync" : "sync"
"_load_backward_compatible" : "_load_backward_compatible"
"MODLIBS" : "MODLIBS"
"PC_NO_TRUNC" : "PC_NO_TRUNC"
"LIBRARY_OBJS" : "LIBRARY_OBJS"
"O_NOATIME" : "O_NOATIME"
"lineno" : "lineno"
"lib64" : "lib64"
"HAVE_READLINKAT" : "HAVE_READLINKAT"
"iso8859_15" : "iso8859_15"
"SC_T_IOV_MAX" : "SC_T_IOV_MAX"
"cr_await" : "cr_await"
"read_history_file" : "read_history_file"
"SIGBUS" : "SIGBUS"
"open" : "open"
"split_paths" : "split_paths"
"S_ISCHR" : "S_ISCHR"
"TypeError" : "TypeError"
"SC_NPROCESSORS_ONLN" : "SC_NPROCESSORS_ONLN"
"_blksize" : "_blksize"
"HAVE_RL_COMPLETION_DISPLAY_MATCHES_HOOK" : "HAVE_RL_COMPLETION_DISPLAY_MATCHES_HOOK"
"HAVE_TCGETPGRP" : "HAVE_TCGETPGRP"
"_unknown" : "_unknown"
"UNIVERSALSDK" : "UNIVERSALSDK"
"HAVE_SIGACTION" : "HAVE_SIGACTION"
"traceback" : "traceback"
"CLOCK_REALTIME" : "CLOCK_REALTIME"
"getincrementaldecoder" : "getincrementaldecoder"
"setuid" : "setuid"
"platinclude" : "platinclude"
"iso8859_10" : "iso8859_10"
"PC_MAX_INPUT" : "PC_MAX_INPUT"
"ibm861" : "ibm861"
"lambda" : "lambda"
"AR" : "AR"
"PC_REC_MIN_XFER_SIZE" : "PC_REC_MIN_XFER_SIZE"
"_path_is_mode_type" : "_path_is_mode_type"
"__or__" : "__or__"
"_abc_registry" : "_abc_registry"
"lib" : "lib"
"BYTESTR_DEPS" : "BYTESTR_DEPS"
"HAVE_SYS_STAT_H" : "HAVE_SYS_STAT_H"
"HAVE_DLOPEN" : "HAVE_DLOPEN"
"float_repr_style" : "float_repr_style"
"RuntimeError" : "RuntimeError"
"dumps" : "dumps"
"HAVE_SNPRINTF" : "HAVE_SNPRINTF"
"new_path" : "new_path"
"purelib" : "purelib"
"sched_get_priority_min" : "sched_get_priority_min"
"wpid" : "wpid"
"HAVE_SIGNAL_H" : "HAVE_SIGNAL_H"
"cwd" : "cwd"
"suboffsets" : "suboffsets"
"HAVE_SETPGID" : "HAVE_SETPGID"
"symmetric_difference" : "symmetric_difference"
"ABC" : "ABC"
"GeneratorExit" : "GeneratorExit"
"SC_THREADS" : "SC_THREADS"
"perf_counter" : "perf_counter"
"join" : "join"
"SIZEOF_UINTPTR_T" : "SIZEOF_UINTPTR_T"
"ABIFLAGS" : "ABIFLAGS"
"windows_1254" : "windows_1254"
"__dir__" : "__dir__"
"pathsep" : "pathsep"
"st_blocks" : "st_blocks"
"852" : "852"
"symmetric_difference_update" : "symmetric_difference_update"
"unicode_internal_decode" : "unicode_internal_decode"
"SIG_IGN" : "SIG_IGN"
"config_h" : "config_h"
"default_int_handler" : "default_int_handler"
"nodename" : "nodename"
"SC_XOPEN_SHM" : "SC_XOPEN_SHM"
"<module>" : "<module>"
"seen" : "seen"
"_CHUNK_SIZE" : "_CHUNK_SIZE"
"isupper" : "isupper"
"module_type" : "module_type"
"system" : "system"
"interrupt_main" : "interrupt_main"
"flags" : "flags"
"cdir" : "cdir"
"SUBDIRSTOO" : "SUBDIRSTOO"
"irix" : "irix"
"_winreg" : "_winreg"
"cp936" : "cp936"
"FILE_ATTRIBUTE_ARCHIVE" : "FILE_ATTRIBUTE_ARCHIVE"
"HAVE_GETPAGESIZE" : "HAVE_GETPAGESIZE"
"HAVE_CURSES_IS_TERM_RESIZED" : "HAVE_CURSES_IS_TERM_RESIZED"
"cp1253" : "cp1253"
"iso2022_jp_2" : "iso2022_jp_2"
"call_tracing" : "call_tracing"
"altzone" : "altzone"
"SIGCHLD" : "SIGCHLD"
"itemref" : "itemref"
"O_DSYNC" : "O_DSYNC"
"modules" : "modules"
"ibm1026" : "ibm1026"
"bitness" : "bitness"
"pthread_sigmask" : "pthread_sigmask"
"_home" : "_home"
"n_unnamed_fields" : "n_unnamed_fields"
"_set_fileattr" : "_set_fileattr"
"loader" : "loader"
"utf32" : "utf32"
"__build_class__" : "__build_class__"
"get_path_names" : "get_path_names"
"tm_sec" : "tm_sec"
"L" : "L"
"fsync" : "fsync"
"FILE_ATTRIBUTE_TEMPORARY" : "FILE_ATTRIBUTE_TEMPORARY"
"HAVE_STDARG_PROTOTYPES" : "HAVE_STDARG_PROTOTYPES"
"csisolatincyrillic" : "csisolatincyrillic"
"HAVE_GETHOSTBYNAME_R" : "HAVE_GETHOSTBYNAME_R"
"mkfifo" : "mkfifo"
"include" : "include"
"HAVE_MAKEDEV" : "HAVE_MAKEDEV"
"SC_MQ_OPEN_MAX" : "SC_MQ_OPEN_MAX"
"allocate" : "allocate"
"HAVE_FDOPENDIR" : "HAVE_FDOPENDIR"
"RecursionError" : "RecursionError"
"dotIndex" : "dotIndex"
"getpgrp" : "getpgrp"
"HAVE_TRUNCATE" : "HAVE_TRUNCATE"
"GNULD" : "GNULD"
"ST_NODEV" : "ST_NODEV"
"_RAW_MAGIC_NUMBER" : "_RAW_MAGIC_NUMBER"
"SC_SEM_NSEMS_MAX" : "SC_SEM_NSEMS_MAX"
"uname_result" : "uname_result"
"libedit" : "libedit"
"memoryview" : "memoryview"
"method" : "method"
"issubclass" : "issubclass"
"HAVE_SCHED_H" : "HAVE_SCHED_H"
"cache_from_source" : "cache_from_source"
"CONFIGURE_CFLAGS_NODIST" : "CONFIGURE_CFLAGS_NODIST"
"readlink" : "readlink"
"supports_bytes_environ" : "supports_bytes_environ"
"sunos" : "sunos"
"CLD_TRAPPED" : "CLD_TRAPPED"
"HAVE_DECL_TZNAME" : "HAVE_DECL_TZNAME"
"BufferedIncrementalEncoder" : "BufferedIncrementalEncoder"
"HAVE_RL_COMPLETION_MATCHES" : "HAVE_RL_COMPLETION_MATCHES"
"acquire_lock" : "acquire_lock"
"lseek" : "lseek"
"HAVE_STRDUP" : "HAVE_STRDUP"
"LookupError" : "LookupError"
"CLOCK_PROCESS_CPUTIME_ID" : "CLOCK_PROCESS_CPUTIME_ID"
"denominator" : "denominator"
"getresuid" : "getresuid"
"HAVE_STD_ATOMIC" : "HAVE_STD_ATOMIC"
"PYTHON_FOR_BUILD" : "PYTHON_FOR_BUILD"
"UF_NOUNLINK" : "UF_NOUNLINK"
"setstate" : "setstate"
"StopAsyncIteration" : "StopAsyncIteration"
"setcheckinterval" : "setcheckinterval"
"MACOSX_DEPLOYMENT_TARGET" : "MACOSX_DEPLOYMENT_TARGET"
"GETTIMEOFDAY_NO_TZ" : "GETTIMEOFDAY_NO_TZ"
"suffixes" : "suffixes"
"utf_8_decode" : "utf_8_decode"
"CFLAGS" : "CFLAGS"
"iso_ir_144" : "iso_ir_144"
"HAVE_PREAD" : "HAVE_PREAD"
"__mro__" : "__mro__"
"mac_cyrillic" : "mac_cyrillic"
"FileNotFoundError" : "FileNotFoundError"
"platstdlib" : "platstdlib"
"len" : "len"
"subprocess" : "subprocess"
"splitdrive" : "splitdrive"
"HAVE_SYS_IOCTL_H" : "HAVE_SYS_IOCTL_H"
"tm_min" : "tm_min"
"write" : "write"
"utf_32_ex_decode" : "utf_32_ex_decode"
"S_IFSOCK" : "S_IFSOCK"
"st_blksize" : "st_blksize"
"CS_XBS5_LP64_OFF64_LIBS" : "CS_XBS5_LP64_OFF64_LIBS"
"raw" : "raw"
"base_exec_prefix" : "base_exec_prefix"
"_subst_vars" : "_subst_vars"
"HAVE_MEMRCHR" : "HAVE_MEMRCHR"
"__abs__" : "__abs__"
"1256" : "1256"
"rel_list" : "rel_list"
"upper" : "upper"
"h" : "h"
"HAVE_LINUX_RANDOM_H" : "HAVE_LINUX_RANDOM_H"
"initial_slashes" : "initial_slashes"
"_handle_fromlist" : "_handle_fromlist"
"utf_16_decode" : "utf_16_decode"
"RETSIGTYPE" : "RETSIGTYPE"
"globals" : "globals"
"get_config_h_filename" : "get_config_h_filename"
"cspc775baltic" : "cspc775baltic"
"HAVE_MEMORY_H" : "HAVE_MEMORY_H"
"__neg__" : "__neg__"
"_requires_builtin_wrapper" : "_requires_builtin_wrapper"
"translate" : "translate"
"SC_AIO_LISTIO_MAX" : "SC_AIO_LISTIO_MAX"
"ljust" : "ljust"
"saved_exc" : "saved_exc"
"__anext__" : "__anext__"
"HAVE_WAITID" : "HAVE_WAITID"
"iso_8859_6_1987" : "iso_8859_6_1987"
"bufsize" : "bufsize"
"origin" : "origin"
"PYTHONFRAMEWORKDIR" : "PYTHONFRAMEWORKDIR"
"f_contiguous" : "f_contiguous"
"iterator" : "iterator"
"exc" : "exc"
"getdefaultencoding" : "getdefaultencoding"
"COVERAGE_REPORT" : "COVERAGE_REPORT"
"__invert__" : "__invert__"
"SIGIOT" : "SIGIOT"
"HAVE_BROKEN_POSIX_SEMAPHORES" : "HAVE_BROKEN_POSIX_SEMAPHORES"
"pid" : "pid"
"_POPULATE" : "_POPULATE"
"get_source" : "get_source"
"__format__" : "__format__"
"ST_SYNCHRONOUS" : "ST_SYNCHRONOUS"
"r8" : "r8"
"source_stats" : "source_stats"
"module" : "module"
"cspc850multilingual" : "cspc850multilingual"
"PSRCS" : "PSRCS"
"__imod__" : "__imod__"
"CONFIG_LINE" : "CONFIG_LINE"
"files" : "files"
"scripts" : "scripts"
"builtins" : "builtins"
"SC_PII_INTERNET" : "SC_PII_INTERNET"
"IOBase" : "IOBase"
"_mode" : "_mode"
"posix_home" : "posix_home"
"HOME" : "HOME"
"__self__" : "__self__"
"PRIO_PROCESS" : "PRIO_PROCESS"
"inode" : "inode"
"_calc_mode" : "_calc_mode"
"__ge__" : "__ge__"
"S_IXGRP" : "S_IXGRP"
"OpenKey" : "OpenKey"
"csisolatinarabic" : "csisolatinarabic"
"WITH_THREAD" : "WITH_THREAD"
"_IterationGuard" : "_IterationGuard"
"cls" : "cls"
"sts" : "sts"
"ibm850" : "ibm850"
"XATTR_SIZE_MAX" : "XATTR_SIZE_MAX"
"__ior__" : "__ior__"
"HKEY_LOCAL_MACHINE" : "HKEY_LOCAL_MACHINE"
"1026" : "1026"
"aliased_encoding" : "aliased_encoding"
"min_10_exp" : "min_10_exp"
"iso2022jp_2" : "iso2022jp_2"
"HAVE_GETSPENT" : "HAVE_GETSPENT"
"_generate_posix_vars" : "_generate_posix_vars"
"cp864" : "cp864"
"SC_BC_STRING_MAX" : "SC_BC_STRING_MAX"
"removeduppaths" : "removeduppaths"
"ImportError" : "ImportError"
"cp1140" : "cp1140"
"RUNSHARED" : "RUNSHARED"
"verbose" : "verbose"
"64bit" : "64bit"
"unicode_internal_encode" : "unicode_internal_encode"
"shift_jis" : "shift_jis"
"user" : "user"
"Quitter" : "Quitter"
"PC_MAX_CANON" : "PC_MAX_CANON"
"__dict__" : "__dict__"
"tm_gmtoff" : "tm_gmtoff"
"bin" : "bin"
"exec_module" : "exec_module"
"addusersitepackages" : "addusersitepackages"
"DIRMODE" : "DIRMODE"
"setdlopenflags" : "setdlopenflags"
"HAVE_PTY_H" : "HAVE_PTY_H"
"c_contiguous" : "c_contiguous"
"SIZEOF_SHORT" : "SIZEOF_SHORT"
"HAVE_SYS_UIO_H" : "HAVE_SYS_UIO_H"
"HAVE_STDLIB_H" : "HAVE_STDLIB_H"
"mknod" : "mknod"
"charmap_build" : "charmap_build"
"tm_mday" : "tm_mday"
"types" : "types"
"backslashreplace_errors" : "backslashreplace_errors"
"HAVE_SYS_AUDIOIO_H" : "HAVE_SYS_AUDIOIO_H"
"SC_BC_BASE_MAX" : "SC_BC_BASE_MAX"
"eof" : "eof"
"_LoaderBasics" : "_LoaderBasics"
"cspcp852" : "cspcp852"
"QueryValue" : "QueryValue"
"HAVE_MKFIFO" : "HAVE_MKFIFO"
"dup" : "dup"
"co_freevars" : "co_freevars"
"_extend_dict" : "_extend_dict"
"altsep" : "altsep"
"HAVE_SYS_STATVFS_H" : "HAVE_SYS_STATVFS_H"
"tm_isdst" : "tm_isdst"
"ino2" : "ino2"
"execvpe" : "execvpe"
"BOM_LE" : "BOM_LE"
"f_locals" : "f_locals"
"getsitepackages" : "getsitepackages"
"latin3" : "latin3"
"HAVE_DIRFD" : "HAVE_DIRFD"
"HAVE_INET_PTON" : "HAVE_INET_PTON"
"gb2312_80" : "gb2312_80"
"hook" : "hook"
"_optimize" : "_optimize"
"ST_DEV" : "ST_DEV"
"HAVE_UTIMENSAT" : "HAVE_UTIMENSAT"
"csisolatin1" : "csisolatin1"
"decoder" : "decoder"
"cmd" : "cmd"
"__cause__" : "__cause__"
"eucjp" : "eucjp"
"WindowsRegistryFinder" : "WindowsRegistryFinder"
"HAVE_CHROOT" : "HAVE_CHROOT"
"SC_THREAD_STACK_MIN" : "SC_THREAD_STACK_MIN"
"HAVE_GETWD" : "HAVE_GETWD"
"init_frozen" : "init_frozen"
"Iterator" : "Iterator"
"tis_620_0" : "tis_620_0"
"_weakrefset" : "_weakrefset"
"__stdin__" : "__stdin__"
"signal" : "signal"
"VERSION" : "VERSION"
"UnicodeError" : "UnicodeError"
"exist_ok" : "exist_ok"
"MASK" : "MASK"
"TMP_MAX" : "TMP_MAX"
"tcsetpgrp" : "tcsetpgrp"
"x_mac_japanese" : "x_mac_japanese"
"streamwriter" : "streamwriter"
"maclatin2" : "maclatin2"
"CONFINCLUDEPY" : "CONFINCLUDEPY"
"readable" : "readable"
"iso_8859_1" : "iso_8859_1"
"HAVE_STAT_TV_NSEC" : "HAVE_STAT_TV_NSEC"
"latin9" : "latin9"
"getencoder" : "getencoder"
"_Printer__setup" : "_Printer__setup"
"_codecs" : "_codecs"
"HAVE_BROKEN_MBSTOWCS" : "HAVE_BROKEN_MBSTOWCS"
"_variable_rx" : "_variable_rx"
"_clear_type_cache" : "_clear_type_cache"
"co_lnotab" : "co_lnotab"
"ebcdic_cp_be" : "ebcdic_cp_be"
"CS_LFS_LDFLAGS" : "CS_LFS_LDFLAGS"
"cp_is" : "cp_is"
"_IOBase" : "_IOBase"
"setpgrp" : "setpgrp"
"SC_THREAD_ATTR_STACKADDR" : "SC_THREAD_ATTR_STACKADDR"
"create_module" : "create_module"
"SC_2_CHAR_TERM" : "SC_2_CHAR_TERM"
"cyrillic_asian" : "cyrillic_asian"
"dig" : "dig"
"si_errno" : "si_errno"
"__ilshift__" : "__ilshift__"
"HGBRANCH" : "HGBRANCH"
"scandir" : "scandir"
"PLATDIR" : "PLATDIR"
"is_package" : "is_package"
"__setformat__" : "__setformat__"
"sysconfig" : "sysconfig"
"__weakref__" : "__weakref__"
"SC_2_UPE" : "SC_2_UPE"
"_name" : "_name"
"has_location" : "has_location"
"_PY_VERSION_SHORT_NO_DOT" : "_PY_VERSION_SHORT_NO_DOT"
"_module_locks" : "_module_locks"
"ENABLE_IPV6" : "ENABLE_IPV6"
"__set__" : "__set__"
"PACKAGE_TARNAME" : "PACKAGE_TARNAME"
"make_encoding_map" : "make_encoding_map"
"dump" : "dump"
"S_IFIFO" : "S_IFIFO"
"lookup" : "lookup"
"CS_LFS64_LINTFLAGS" : "CS_LFS64_LINTFLAGS"
"nan" : "nan"
"l6" : "l6"
"DOUBLE_IS_BIG_ENDIAN_IEEE754" : "DOUBLE_IS_BIG_ENDIAN_IEEE754"
"SRC_GDB_HOOKS" : "SRC_GDB_HOOKS"
"HAVE_MKNOD" : "HAVE_MKNOD"
"CS_XBS5_ILP32_OFF32_LIBS" : "CS_XBS5_ILP32_OFF32_LIBS"
"HAVE_SYS_TERMIO_H" : "HAVE_SYS_TERMIO_H"
"buffering" : "buffering"
"SC_NL_LANGMAX" : "SC_NL_LANGMAX"
"_get_sep" : "_get_sep"
"csibm855" : "csibm855"
"PY_LDFLAGS" : "PY_LDFLAGS"
"O_CREAT" : "O_CREAT"
"_calc___package__" : "_calc___package__"
"dot_count" : "dot_count"
"windows_1258" : "windows_1258"
"path_hooks" : "path_hooks"
"iterdecode" : "iterdecode"
"UF_APPEND" : "UF_APPEND"
"ReferenceType" : "ReferenceType"
"__code__" : "__code__"
"HAVE_READV" : "HAVE_READV"
"tag" : "tag"
"IncrementalDecoder" : "IncrementalDecoder"
"WIFSIGNALED" : "WIFSIGNALED"
"p" : "p"
"_installed_safely" : "_installed_safely"
"var" : "var"
"co_nlocals" : "co_nlocals"
"ST_NODIRATIME" : "ST_NODIRATIME"
"HAVE_GETPGRP" : "HAVE_GETPGRP"
"getrecursionlimit" : "getrecursionlimit"
"step" : "step"
"_cache" : "_cache"
"punct" : "punct"
"_gcd_import" : "_gcd_import"
"setdefault" : "setdefault"
"1251" : "1251"
"iso8859_2" : "iso8859_2"
"HAVE_SYS_LOADAVG_H" : "HAVE_SYS_LOADAVG_H"
"gb18030" : "gb18030"
"saved_tb" : "saved_tb"
"hex" : "hex"
"init_filename" : "init_filename"
"followlinks" : "followlinks"
"waitid" : "waitid"
"escape_encode" : "escape_encode"
"__add__" : "__add__"
"REGISTRY_KEY_DEBUG" : "REGISTRY_KEY_DEBUG"
"coroutine" : "coroutine"
"hash_randomization" : "hash_randomization"
"S_IFDIR" : "S_IFDIR"
"PYTHONFRAMEWORKPREFIX" : "PYTHONFRAMEWORKPREFIX"
"source_mtime" : "source_mtime"
"quotedprintable" : "quotedprintable"
"no_user_site" : "no_user_site"
"extsep" : "extsep"
"stacklevel" : "stacklevel"
"CodecInfo" : "CodecInfo"
"SC_THREAD_DESTRUCTOR_ITERATIONS" : "SC_THREAD_DESTRUCTOR_ITERATIONS"
"cut_off" : "cut_off"
"int_bytes" : "int_bytes"
"SIGTRAP" : "SIGTRAP"
"CS_LFS64_CFLAGS" : "CS_LFS64_CFLAGS"
"replace" : "replace"
"__setitem__" : "__setitem__"
"setcopyright" : "setcopyright"
"SC_TIMER_MAX" : "SC_TIMER_MAX"
"ksx1001" : "ksx1001"
"Py_HASH_ALGORITHM" : "Py_HASH_ALGORITHM"
"HAVE_UINT64_T" : "HAVE_UINT64_T"
"get_makefile_filename" : "get_makefile_filename"
"builtin_module_names" : "builtin_module_names"
"readlines" : "readlines"
"StringIO" : "StringIO"
"HAVE_WAIT3" : "HAVE_WAIT3"
"ModuleSpec" : "ModuleSpec"
"EX_TEMPFAIL" : "EX_TEMPFAIL"
"slice" : "slice"
"SC_XBS5_ILP32_OFF32" : "SC_XBS5_ILP32_OFF32"
"tid" : "tid"
"646" : "646"
"removexattr" : "removexattr"
"HAVE_SYS_SELECT_H" : "HAVE_SYS_SELECT_H"
"__prepare__" : "__prepare__"
"SIGTTIN" : "SIGTTIN"
"SIZEOF_OFF_T" : "SIZEOF_OFF_T"
"BINDIR" : "BINDIR"
"cross_compiling" : "cross_compiling"
"output" : "output"
"StreamReaderWriter" : "StreamReaderWriter"
"frozen" : "frozen"
"path_parts" : "path_parts"
"group" : "group"
"lockf" : "lockf"
"path_hook_for_FileFinder" : "path_hook_for_FileFinder"
"OPCODETARGETGEN" : "OPCODETARGETGEN"
"HAVE_FSEEK64" : "HAVE_FSEEK64"
"dictcomp" : "dictcomp"
"divmod" : "divmod"
"getincrementalencoder" : "getincrementalencoder"
"RTLD_NODELETE" : "RTLD_NODELETE"
"Generator" : "Generator"
"find" : "find"
"HAVE_SYS_FILE_H" : "HAVE_SYS_FILE_H"
"SIGXFSZ" : "SIGXFSZ"
"PC_REC_INCR_XFER_SIZE" : "PC_REC_INCR_XFER_SIZE"
"S_ISVTX" : "S_ISVTX"
"getresgid" : "getresgid"
"_sanity_check" : "_sanity_check"
"HAVE_INITGROUPS" : "HAVE_INITGROUPS"
"it" : "it"
"CONFIGURE_CPPFLAGS" : "CONFIGURE_CPPFLAGS"
"setter" : "setter"
"loaders" : "loaders"
"BufferedIncrementalDecoder" : "BufferedIncrementalDecoder"
"_checkSeekable" : "_checkSeekable"
"HAVE_LIBUTIL_H" : "HAVE_LIBUTIL_H"
"COVERAGE_REPORT_OPTIONS" : "COVERAGE_REPORT_OPTIONS"
"cygwin" : "cygwin"
"l7" : "l7"
"rest" : "rest"
"known_paths" : "known_paths"
"LIBC" : "LIBC"
"pybuilddir" : "pybuilddir"
"SC_GETGR_R_SIZE_MAX" : "SC_GETGR_R_SIZE_MAX"
"HAVE_FCHOWNAT" : "HAVE_FCHOWNAT"
"offset" : "offset"
"f_lasti" : "f_lasti"
"InterruptedError" : "InterruptedError"
"HAVE_LIBIEEE" : "HAVE_LIBIEEE"
"PROFILE_TASK" : "PROFILE_TASK"
"subtype" : "subtype"
"posixpath" : "posixpath"
"unlink" : "unlink"
"LINKCC" : "LINKCC"
"sysname" : "sysname"
"__abstractmethods__" : "__abstractmethods__"
"HAVE_GETHOSTBYNAME" : "HAVE_GETHOSTBYNAME"
"rng" : "rng"
"RTLD_GLOBAL" : "RTLD_GLOBAL"
"SOURCE_SUFFIXES" : "SOURCE_SUFFIXES"
"startswith" : "startswith"
"fromkeys" : "fromkeys"
"n_fields" : "n_fields"
"_PYTHON_BUILD" : "_PYTHON_BUILD"
"OPCODE_H_GEN" : "OPCODE_H_GEN"
"sitedir" : "sitedir"
"d" : "d"
"__rlshift__" : "__rlshift__"
"BufferedIOBase" : "BufferedIOBase"
"warn" : "warn"
"WANT_SIGFPE_HANDLER" : "WANT_SIGFPE_HANDLER"
"exc_traceback" : "exc_traceback"
"_Helper" : "_Helper"
"get_inheritable" : "get_inheritable"
"stat_float_times" : "stat_float_times"
"ST_ATIME" : "ST_ATIME"
"SHLIBS" : "SHLIBS"
"_is_owned" : "_is_owned"
"SIGNED_RIGHT_SHIFT_ZERO_FILLS" : "SIGNED_RIGHT_SHIFT_ZERO_FILLS"
"tcgetpgrp" : "tcgetpgrp"
"path_stats" : "path_stats"
"HAVE_SCHED_SETAFFINITY" : "HAVE_SCHED_SETAFFINITY"
"PC_PRIO_IO" : "PC_PRIO_IO"
"srcdir" : "srcdir"
"_abc_cache" : "_abc_cache"
"unicode_1_1_utf_7" : "unicode_1_1_utf_7"
"HAVE_FCNTL_H" : "HAVE_FCNTL_H"
"hzgb" : "hzgb"
"rpartition" : "rpartition"
"PYTHON_OBJS" : "PYTHON_OBJS"
"PC_CHOWN_RESTRICTED" : "PC_CHOWN_RESTRICTED"
"setsid" : "setsid"
"tolist" : "tolist"
"EX_NOUSER" : "EX_NOUSER"
"__eq__" : "__eq__"
"BYTECODE_SUFFIXES" : "BYTECODE_SUFFIXES"
"wb" : "wb"
"HAVE_FACCESSAT" : "HAVE_FACCESSAT"
"ref" : "ref"
"HAVE_SYNC" : "HAVE_SYNC"
"HAVE_SEM_TIMEDWAIT" : "HAVE_SEM_TIMEDWAIT"
"SC_PHYS_PAGES" : "SC_PHYS_PAGES"
"meta_path" : "meta_path"
"dirs" : "dirs"
"SC_PII_OSI" : "SC_PII_OSI"
"parent" : "parent"
"utf8_ucs2" : "utf8_ucs2"
"PathFinder" : "PathFinder"
"wait3" : "wait3"
"INSTALL_DATA" : "INSTALL_DATA"
"SC_THREAD_KEYS_MAX" : "SC_THREAD_KEYS_MAX"
"NotImplemented" : "NotImplemented"
"SIGPOLL" : "SIGPOLL"
"SC_XOPEN_ENH_I18N" : "SC_XOPEN_ENH_I18N"
"HAVE_PLOCK" : "HAVE_PLOCK"
"register" : "register"
"cp1258" : "cp1258"
"__str__" : "__str__"
"sys" : "sys"
"POSIX_FADV_SEQUENTIAL" : "POSIX_FADV_SEQUENTIAL"
"__index__" : "__index__"
"__text_signature__" : "__text_signature__"
"utf_16be" : "utf_16be"
"f_bavail" : "f_bavail"
"getcwdb" : "getcwdb"
"tobytes" : "tobytes"
"__isabstractmethod__" : "__isabstractmethod__"
"execusercustomize" : "execusercustomize"
"SIGKILL" : "SIGKILL"
"l4" : "l4"
"index" : "index"
"__package__" : "__package__"
"hz" : "hz"
"_bootstrap" : "_bootstrap"
"execsitecustomize" : "execsitecustomize"
"UF_NODUMP" : "UF_NODUMP"
"arg" : "arg"
"xmlcharrefreplace_errors" : "xmlcharrefreplace_errors"
"iso8859_14" : "iso8859_14"
"rc" : "rc"
"cp866u" : "cp866u"
"reverse" : "reverse"
"HAVE_WRITEV" : "HAVE_WRITEV"
"FILE_ATTRIBUTE_NOT_CONTENT_INDEXED" : "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"
"HAVE_DUP3" : "HAVE_DUP3"
"isdecimal" : "isdecimal"
"MACHDEP_OBJS" : "MACHDEP_OBJS"
"strptime" : "strptime"
"_Printer__data" : "_Printer__data"
"_count" : "_count"
"HAVE_INT32_T" : "HAVE_INT32_T"
"_requires_frozen" : "_requires_frozen"
"O_NOCTTY" : "O_NOCTTY"
"__repr__" : "__repr__"
"s" : "s"
"hash_bits" : "hash_bits"
"iso_8859_16" : "iso_8859_16"
"hkscs" : "hkscs"
"HAVE_IEEEFP_H" : "HAVE_IEEEFP_H"
"UnicodeDecodeError" : "UnicodeDecodeError"
"DEFAULT_BUFFER_SIZE" : "DEFAULT_BUFFER_SIZE"
"ndim" : "ndim"
"gettotalrefcount" : "gettotalrefcount"
"zlib_codec" : "zlib_codec"
"HAVE_FTRUNCATE" : "HAVE_FTRUNCATE"
"writer" : "writer"
"_Printer" : "_Printer"
"splitext" : "splitext"
"getsizeof" : "getsizeof"
"getsize" : "getsize"
"int" : "int"
"unknown" : "unknown"
"RESSRCDIR" : "RESSRCDIR"
"module_from_spec" : "module_from_spec"
"SIGRTMAX" : "SIGRTMAX"
"FILE_ATTRIBUTE_INTEGRITY_STREAM" : "FILE_ATTRIBUTE_INTEGRITY_STREAM"
"UNICODE_DEPS" : "UNICODE_DEPS"
"LIBRARY" : "LIBRARY"
"time" : "time"
"imag" : "imag"
"register_error" : "register_error"
"Hashable" : "Hashable"
"walk_into" : "walk_into"
"funcname" : "funcname"
"readline" : "readline"
"SC_CLK_TCK" : "SC_CLK_TCK"
"ibm367" : "ibm367"
"loads" : "loads"
"suffix" : "suffix"
"st_nlink" : "st_nlink"
"execve" : "execve"
"__doc__" : "__doc__"
"HAVE_SIGINTERRUPT" : "HAVE_SIGINTERRUPT"
"elem" : "elem"
"Library" : "Library"
"consumed" : "consumed"
"st_atime" : "st_atime"
"get_exec_path" : "get_exec_path"
"getpwnam" : "getpwnam"
"_init_posix" : "_init_posix"
"LDSHARED" : "LDSHARED"
"isprintable" : "isprintable"
"csibm864" : "csibm864"
"set_wakeup_fd" : "set_wakeup_fd"
"EXT_SUFFIX" : "EXT_SUFFIX"
"ctermid" : "ctermid"
"release" : "release"
"HAVE_SYS_MODEM_H" : "HAVE_SYS_MODEM_H"
"iso_8859_5" : "iso_8859_5"
"bytebuffer" : "bytebuffer"
"chdir" : "chdir"
"HAVE_SYS_NDIR_H" : "HAVE_SYS_NDIR_H"
"None" : "None"
"HAVE_PTHREAD_SIGMASK" : "HAVE_PTHREAD_SIGMASK"
"O_EXCL" : "O_EXCL"
"EXTRAMACHDEPPATH" : "EXTRAMACHDEPPATH"
"base" : "base"
"win32" : "win32"
"SEEK_SET" : "SEEK_SET"
"RTLD_LOCAL" : "RTLD_LOCAL"
"WITH_DYLD" : "WITH_DYLD"
"_path_isdir" : "_path_isdir"
"ttyname" : "ttyname"
"clock_gettime" : "clock_gettime"
"shiftjis2004" : "shiftjis2004"
"utf_16" : "utf_16"
"_putenv" : "_putenv"
"abiflags" : "abiflags"
"cutoff" : "cutoff"
"seed_bits" : "seed_bits"
"is_frozen_package" : "is_frozen_package"
"HAVE_ATANH" : "HAVE_ATANH"
"ST_MTIME" : "ST_MTIME"
"dict" : "dict"
"get_current_history_length" : "get_current_history_length"
"HAVE_SYSCONF" : "HAVE_SYSCONF"
"SC_CHAR_MIN" : "SC_CHAR_MIN"
"_ModuleLockManager" : "_ModuleLockManager"
"TESTRUNNER" : "TESTRUNNER"
"HAVE_GETSPNAM" : "HAVE_GETSPNAM"
"APPDATA" : "APPDATA"
"min" : "min"
"KeyError" : "KeyError"
"TimeoutError" : "TimeoutError"
"ibm775" : "ibm775"
"EXE" : "EXE"
"SC_THREAD_ATTR_STACKSIZE" : "SC_THREAD_ATTR_STACKSIZE"
"SC_RE_DUP_MAX" : "SC_RE_DUP_MAX"
"ChildProcessError" : "ChildProcessError"
"ebcdic_cp_nl" : "ebcdic_cp_nl"
"_OPT" : "_OPT"
"_unsetenv" : "_unsetenv"
"parent_path" : "parent_path"
"_io" : "_io"
"big5_tw" : "big5_tw"
"_print_dict" : "_print_dict"
"done" : "done"
"ctime" : "ctime"
"csisolatin5" : "csisolatin5"
"SC_CHILD_MAX" : "SC_CHILD_MAX"
"SC_MB_LEN_MAX" : "SC_MB_LEN_MAX"
"is_frozen" : "is_frozen"
"ftruncate" : "ftruncate"
"S_IRWXO" : "S_IRWXO"
"_imp_module" : "_imp_module"
"forkpty" : "forkpty"
"charbuffer" : "charbuffer"
"POSIX_FADV_RANDOM" : "POSIX_FADV_RANDOM"
"iterencode" : "iterencode"
"SIGCLD" : "SIGCLD"
"USER_SITE" : "USER_SITE"
"ksc5601" : "ksc5601"
"_DummyModuleLock" : "_DummyModuleLock"
"closefd" : "closefd"
"utf_32_le_decode" : "utf_32_le_decode"
"ENABLE_USER_SITE" : "ENABLE_USER_SITE"
"start_new" : "start_new"
"windows_1253" : "windows_1253"
"splitlines" : "splitlines"
"catch_warnings" : "catch_warnings"
"HAVE_CLOCK" : "HAVE_CLOCK"
"_module_repr" : "_module_repr"
"HAVE_CONFSTR" : "HAVE_CONFSTR"
"struct_siginfo" : "struct_siginfo"
"PYTHONUSERBASE" : "PYTHONUSERBASE"
"proc" : "proc"
"writev" : "writev"
"SystemExit" : "SystemExit"
"ptcp154" : "ptcp154"
"SIGPWR" : "SIGPWR"
"loader_class" : "loader_class"
"__getstate__" : "__getstate__"
"__iter__" : "__iter__"
"HAVE_LARGEFILE_SUPPORT" : "HAVE_LARGEFILE_SUPPORT"
"f_namemax" : "f_namemax"
"st_size" : "st_size"
"__subclasshook__" : "__subclasshook__"
"ITIMER_PROF" : "ITIMER_PROF"
"_get_module_lock" : "_get_module_lock"
"SC_GETPW_R_SIZE_MAX" : "SC_GETPW_R_SIZE_MAX"
"utf_16_be" : "utf_16_be"
"csibm860" : "csibm860"
"thread_module" : "thread_module"
"HAVE_STAT_TV_NSEC2" : "HAVE_STAT_TV_NSEC2"
"860" : "860"
"SC_XOPEN_XCU_VERSION" : "SC_XOPEN_XCU_VERSION"
"rindex" : "rindex"
"HAVE_FSTATAT" : "HAVE_FSTATAT"
"load" : "load"
"range" : "range"
"_osx_support" : "_osx_support"
"HAVE_GETPWENT" : "HAVE_GETPWENT"
"sitepackages" : "sitepackages"
"BASECFLAGS" : "BASECFLAGS"
"fork" : "fork"
"Sequence" : "Sequence"
"1250" : "1250"
"firstline" : "firstline"
"HAVE_LONG_DOUBLE" : "HAVE_LONG_DOUBLE"
"SC_XBS5_LP64_OFF64" : "SC_XBS5_LP64_OFF64"
"O_RDWR" : "O_RDWR"
"WUNTRACED" : "WUNTRACED"
"sameopenfile" : "sameopenfile"
"isdigit" : "isdigit"
"getpriority" : "getpriority"
"PGO_PROF_GEN_FLAG" : "PGO_PROF_GEN_FLAG"
"_iterating" : "_iterating"
"encodings" : "encodings"
"hkey" : "hkey"
"i" : "i"
"858" : "858"
"KeysView" : "KeysView"
"bytearray" : "bytearray"
"serial" : "serial"
"move_to_end" : "move_to_end"
"__excepthook__" : "__excepthook__"
"OPCODETARGETGEN_FILES" : "OPCODETARGETGEN_FILES"
"new_name" : "new_name"
"yes" : "yes"
"addsitedir" : "addsitedir"
"stdin" : "stdin"
"__alloc__" : "__alloc__"
"FileIO" : "FileIO"
"HAVE_GETRESUID" : "HAVE_GETRESUID"
"__getattribute__" : "__getattribute__"
"config" : "config"
"LOCALMODLIBS" : "LOCALMODLIBS"
"final" : "final"
"SHLIB_SUFFIX" : "SHLIB_SUFFIX"
"1253" : "1253"
"PC_REC_XFER_ALIGN" : "PC_REC_XFER_ALIGN"
"HAVE_SYS_DEVPOLL_H" : "HAVE_SYS_DEVPOLL_H"
"fd" : "fd"
"LOG1P_DROPS_ZERO_SIGN" : "LOG1P_DROPS_ZERO_SIGN"
"_new_module" : "_new_module"
"fsencode" : "fsencode"
"RANLIB" : "RANLIB"
"stream" : "stream"
"SC_TIMERS" : "SC_TIMERS"
"insert" : "insert"
"shift_jis_2004" : "shift_jis_2004"
"HAVE_PTHREAD_DESTRUCTOR" : "HAVE_PTHREAD_DESTRUCTOR"
"detach" : "detach"
"reversed" : "reversed"
"ASDLGEN" : "ASDLGEN"
"SIGPIPE" : "SIGPIPE"
"S_IXUSR" : "S_IXUSR"
"detect_encoding" : "detect_encoding"
"HAVE_POSIX_FALLOCATE" : "HAVE_POSIX_FALLOCATE"
"SC_SHRT_MAX" : "SC_SHRT_MAX"
"makedev" : "makedev"
"__setstate__" : "__setstate__"
"_INSTALL_SCHEMES" : "_INSTALL_SCHEMES"
"normpath" : "normpath"
"tm_yday" : "tm_yday"
"latin2" : "latin2"
"capitalize" : "capitalize"
"nt" : "nt"
"_findvar2_rx" : "_findvar2_rx"
"supports_follow_symlinks" : "supports_follow_symlinks"
"STRICT_SYSV_CURSES" : "STRICT_SYSV_CURSES"
"__sub__" : "__sub__"
"venv" : "venv"
"HAVE_SYSEXITS_H" : "HAVE_SYSEXITS_H"
"st_uid" : "st_uid"
"dict_values" : "dict_values"
"waitid_result" : "waitid_result"
"SC_PII_INTERNET_STREAM" : "SC_PII_INTERNET_STREAM"
"is_reload" : "is_reload"
"HAVE_SOCKETPAIR" : "HAVE_SOCKETPAIR"
"print" : "print"
"__subclasscheck__" : "__subclasscheck__"
"SIZEOF_WCHAR_T" : "SIZEOF_WCHAR_T"
"spawnvpe" : "spawnvpe"
"ST_NOATIME" : "ST_NOATIME"
"cpathname" : "cpathname"
"LDLIBRARY" : "LDLIBRARY"
"HAVE_GETTIMEOFDAY" : "HAVE_GETTIMEOFDAY"
"HAVE_SCHED_RR_GET_INTERVAL" : "HAVE_SCHED_RR_GET_INTERVAL"
"settrace" : "settrace"
"__getformat__" : "__getformat__"
"bytesdecoded" : "bytesdecoded"
"urandom" : "urandom"
"HAVE_POSIX_FADVISE" : "HAVE_POSIX_FADVISE"
"iso8859_1" : "iso8859_1"
"fstatvfs" : "fstatvfs"
"HAVE_CURSES_RESIZETERM" : "HAVE_CURSES_RESIZETERM"
"read_init_file" : "read_init_file"
"SyntaxWarning" : "SyntaxWarning"
"ln" : "ln"
"HAVE_ASINH" : "HAVE_ASINH"
"ConnectionResetError" : "ConnectionResetError"
"gb2312_1980" : "gb2312_1980"
"st_ino" : "st_ino"
"fn" : "fn"
"from_name" : "from_name"
"__path__" : "__path__"
"PY_FORMAT_SIZE_T" : "PY_FORMAT_SIZE_T"
"WSTOPPED" : "WSTOPPED"
"BASECPPFLAGS" : "BASECPPFLAGS"
"__setup" : "__setup"
"rfind" : "rfind"
"mac_latin2" : "mac_latin2"
"__displayhook__" : "__displayhook__"
"FILE_ATTRIBUTE_DEVICE" : "FILE_ATTRIBUTE_DEVICE"
"HAVE_GETPID" : "HAVE_GETPID"
"implementation" : "implementation"
"PRIO_USER" : "PRIO_USER"
"SC_ULONG_MAX" : "SC_ULONG_MAX"
"ranlib" : "ranlib"
"_files" : "_files"
"optimize" : "optimize"
"SC_SHARED_MEMORY_OBJECTS" : "SC_SHARED_MEMORY_OBJECTS"
"CONFIG_ARGS" : "CONFIG_ARGS"
"949" : "949"
"span" : "span"
"HAVE_CLOCK_GETRES" : "HAVE_CLOCK_GETRES"
"HAVE_TCSETPGRP" : "HAVE_TCSETPGRP"
"utf_16_be_encode" : "utf_16_be_encode"
"latin_1_encode" : "latin_1_encode"
"_check_bytes" : "_check_bytes"
"path_importer_cache" : "path_importer_cache"
"utf_16_le" : "utf_16_le"
"getcwd" : "getcwd"
"EXTENSION_SUFFIXES" : "EXTENSION_SUFFIXES"
"notdone" : "notdone"
"charbuffertype" : "charbuffertype"
"EX_NOPERM" : "EX_NOPERM"
"SIZEOF_VOID_P" : "SIZEOF_VOID_P"
"devnull" : "devnull"
"inspect" : "inspect"
"HAVE_FUTIMESAT" : "HAVE_FUTIMESAT"
"950" : "950"
"si_band" : "si_band"
"_main" : "_main"
"co_varnames" : "co_varnames"
"ord" : "ord"
"spawnlp" : "spawnlp"
"__get__" : "__get__"
"find_spec" : "find_spec"
"ModuleType" : "ModuleType"
"SC_NL_NMAX" : "SC_NL_NMAX"
"bytesencoded" : "bytesencoded"
"." : "."
"cp855" : "cp855"
"getusersitepackages" : "getusersitepackages"
"_MutableMapping__marker" : "_MutableMapping__marker"
"other" : "other"
"FILE_ATTRIBUTE_VIRTUAL" : "FILE_ATTRIBUTE_VIRTUAL"
"readsize" : "readsize"
"FILEMODE" : "FILEMODE"
"hx" : "hx"
"MutableMapping" : "MutableMapping"
"_path_stat" : "_path_stat"
"PACKAGE_STRING" : "PACKAGE_STRING"
"eval" : "eval"
"send" : "send"
"SC_IOV_MAX" : "SC_IOV_MAX"
"release_lock" : "release_lock"
"TIMEMODULE_LIB" : "TIMEMODULE_LIB"
"HAVE_ZLIB_COPY" : "HAVE_ZLIB_COPY"
"utf_8" : "utf_8"
"Reader" : "Reader"
"_ERR_MSG_PREFIX" : "_ERR_MSG_PREFIX"
"expandtabs" : "expandtabs"
"RTLD_NOW" : "RTLD_NOW"
"linebuffer" : "linebuffer"
"ST_NLINK" : "ST_NLINK"
"ignore_errors" : "ignore_errors"
"tb_next" : "tb_next"
"__basicsize__" : "__basicsize__"
"m" : "m"
"struct_time" : "struct_time"
"TabError" : "TabError"
"fxn" : "fxn"
"HAVE_SELECT" : "HAVE_SELECT"
"shell" : "shell"
"HAVE_RL_APPEND_HISTORY" : "HAVE_RL_APPEND_HISTORY"
"raw_size" : "raw_size"
"conffile" : "conffile"
"is_integer" : "is_integer"
"F_TEST" : "F_TEST"
"HAVE_WORKING_TZSET" : "HAVE_WORKING_TZSET"
"f_files" : "f_files"
"round" : "round"
"exec_dynamic" : "exec_dynamic"
"lookup_error" : "lookup_error"
"ms950" : "ms950"
"HAVE_SOCKADDR_SA_LEN" : "HAVE_SOCKADDR_SA_LEN"
"x_mac_trad_chinese" : "x_mac_trad_chinese"
"text" : "text"
"BUILDEXE" : "BUILDEXE"
"eucjisx0213" : "eucjisx0213"
"dict_keyiterator" : "dict_keyiterator"
"strides" : "strides"
"getpwuid" : "getpwuid"
"getenv" : "getenv"
"utf8" : "utf8"
"verbosity" : "verbosity"
"remove" : "remove"
"fstat" : "fstat"
"037" : "037"
"__getitem__" : "__getitem__"
"hasstr" : "hasstr"
"HAVE_GAI_STRERROR" : "HAVE_GAI_STRERROR"
"f_frsize" : "f_frsize"
"PYTHONVERBOSE" : "PYTHONVERBOSE"
"cp850" : "cp850"
"iso_8859_8" : "iso_8859_8"
"iso2022jp_3" : "iso2022jp_3"
"iso_2022_jp_1" : "iso_2022_jp_1"
"_abc_negative_cache" : "_abc_negative_cache"
"_BASE_EXEC_PREFIX" : "_BASE_EXEC_PREFIX"
"statvfs_result" : "statvfs_result"
"cp_gr" : "cp_gr"
"O_APPEND" : "O_APPEND"
"config_line" : "config_line"
"HAVE_UTIME_H" : "HAVE_UTIME_H"
"errorcode" : "errorcode"
"CS_XBS5_ILP32_OFF32_LINTFLAGS" : "CS_XBS5_ILP32_OFF32_LINTFLAGS"
"chain" : "chain"
"__pos__" : "__pos__"
"applocal" : "applocal"
"_w_long" : "_w_long"
"HAVE_SETRESUID" : "HAVE_SETRESUID"
"debug_override" : "debug_override"
"iso_8859_15" : "iso_8859_15"
"ar" : "ar"
"ibm862" : "ibm862"
"HKEY_CURRENT_USER" : "HKEY_CURRENT_USER"
"l3" : "l3"
"HAVE_GCC_ASM_FOR_X87" : "HAVE_GCC_ASM_FOR_X87"
"s1" : "s1"
"print_file_and_line" : "print_file_and_line"
"NotADirectoryError" : "NotADirectoryError"
"857" : "857"
"_PY_VERSION" : "_PY_VERSION"
"TESTPYTHONOPTS" : "TESTPYTHONOPTS"
"version_info" : "version_info"
"INSTALL_SHARED" : "INSTALL_SHARED"
"line" : "line"
"metaclass" : "metaclass"
"fset" : "fset"
"mkdir" : "mkdir"
"HAVE_ERF" : "HAVE_ERF"
"main" : "main"
"HAVE_HYPOT" : "HAVE_HYPOT"
"dict_keys" : "dict_keys"
"False" : "False"
"f_bsize" : "f_bsize"
"ecma_114" : "ecma_114"
"SC_VERSION" : "SC_VERSION"
"dev1" : "dev1"
"iso_ir_6" : "iso_ir_6"
"line_buffering" : "line_buffering"
"iso2022jp_2004" : "iso2022jp_2004"
"co_flags" : "co_flags"
"py_version_nodot" : "py_version_nodot"
"HAVE_GETPEERNAME" : "HAVE_GETPEERNAME"
"shift_jisx0213" : "shift_jisx0213"
"readonly" : "readonly"
"HAVE_NCURSES_H" : "HAVE_NCURSES_H"
"globals_" : "globals_"
"WEXITSTATUS" : "WEXITSTATUS"
"userhome" : "userhome"
"q" : "q"
"loader_state" : "loader_state"
"topdown" : "topdown"
"FileFinder" : "FileFinder"
"MVWDELCH_IS_EXPRESSION" : "MVWDELCH_IS_EXPRESSION"
"difference_update" : "difference_update"
"windows_1257" : "windows_1257"
"_exit" : "_exit"
"_hash" : "_hash"
"CS_PATH" : "CS_PATH"
"HAVE_GAMMA" : "HAVE_GAMMA"
"cskoi8r" : "cskoi8r"
"bits" : "bits"
"_empty_charbuffer" : "_empty_charbuffer"
"ARCH" : "ARCH"
"getpreferredencoding" : "getpreferredencoding"
"list_iterator" : "list_iterator"
"O_ACCMODE" : "O_ACCMODE"
"HAVE_TERMIOS_H" : "HAVE_TERMIOS_H"
"HAVE_FDATASYNC" : "HAVE_FDATASYNC"
"__traceback__" : "__traceback__"
"center" : "center"
"cached" : "cached"
"getuid" : "getuid"
"update" : "update"
"tell" : "tell"
"dict_valueiterator" : "dict_valueiterator"
"_ORIGIN" : "_ORIGIN"
"is_symlink" : "is_symlink"
"TESTOPTS" : "TESTOPTS"
"FILE_ATTRIBUTE_ENCRYPTED" : "FILE_ATTRIBUTE_ENCRYPTED"
"_BASE_PREFIX" : "_BASE_PREFIX"
"Awaitable" : "Awaitable"
"gettrace" : "gettrace"
"HAVE_SYS_UTSNAME_H" : "HAVE_SYS_UTSNAME_H"
"filename_base" : "filename_base"
"gi_frame" : "gi_frame"
"Coroutine" : "Coroutine"
"file_info" : "file_info"
"spec" : "spec"
"SC_OPEN_MAX" : "SC_OPEN_MAX"
"utf_7" : "utf_7"
"_is_text_encoding" : "_is_text_encoding"
"__builtins__" : "__builtins__"
"setrecursionlimit" : "setrecursionlimit"
"l8" : "l8"
"SC_TZNAME_MAX" : "SC_TZNAME_MAX"
"HAVE_SETGID" : "HAVE_SETGID"
"HAVE_FUTIMENS" : "HAVE_FUTIMENS"
"IncrementalNewlineDecoder" : "IncrementalNewlineDecoder"
"HAVE_LINUX_CAN_H" : "HAVE_LINUX_CAN_H"
"SC_JOB_CONTROL" : "SC_JOB_CONTROL"
"SIGUSR2" : "SIGUSR2"
"dup2" : "dup2"
"ansi_x3_4_1968" : "ansi_x3_4_1968"
"dedent" : "dedent"
"iso_8859_1_1987" : "iso_8859_1_1987"
"iso_ir_110" : "iso_ir_110"
"newlines" : "newlines"
"__getattr__" : "__getattr__"
"HAVE_TMPNAM" : "HAVE_TMPNAM"
"true" : "true"
"st_ctime" : "st_ctime"
"decode_source" : "decode_source"
"cp775" : "cp775"
"HAVE_RL_CALLBACK" : "HAVE_RL_CALLBACK"
"BlockingIOError" : "BlockingIOError"
"HAVE_POLL_H" : "HAVE_POLL_H"
"_is_python_source_dir" : "_is_python_source_dir"
"WITH_LIBINTL" : "WITH_LIBINTL"
"l" : "l"
"bit_length" : "bit_length"
"ExtensionFileLoader" : "ExtensionFileLoader"
"DEBUG_BUILD" : "DEBUG_BUILD"
"nbytes" : "nbytes"
"__mul__" : "__mul__"
"any" : "any"
"IsADirectoryError" : "IsADirectoryError"
"maciceland" : "maciceland"
"config_dir_name" : "config_dir_name"
"HAVE_LINK" : "HAVE_LINK"
"cache_path" : "cache_path"
"SIGINT" : "SIGINT"
"pause" : "pause"
"iso_ir_101" : "iso_ir_101"
"abstracts" : "abstracts"
"path_tmp" : "path_tmp"
"utf_32_encode" : "utf_32_encode"
"version" : "version"
"HAVE_DLFCN_H" : "HAVE_DLFCN_H"
"renames" : "renames"
"istitle" : "istitle"
"__irshift__" : "__irshift__"
"SC_CHARCLASS_NAME_MAX" : "SC_CHARCLASS_NAME_MAX"
"rot_13" : "rot_13"
"NSIG" : "NSIG"
"empty" : "empty"
"_path_isfile" : "_path_isfile"
"chars" : "chars"
"SIG_DFL" : "SIG_DFL"
"sched_param" : "sched_param"
"selfref" : "selfref"
"_last_parent_path" : "_last_parent_path"
"dirfd" : "dirfd"
"_checkWritable" : "_checkWritable"
"SF_ARCHIVED" : "SF_ARCHIVED"
"_Printer__linecnt" : "_Printer__linecnt"
"iso_ir_157" : "iso_ir_157"
"POSIX_SEMAPHORES_NOT_ENABLED" : "POSIX_SEMAPHORES_NOT_ENABLED"
"__xor__" : "__xor__"
"mac_roman" : "mac_roman"
"abstractclassmethod" : "abstractclassmethod"
"HAVE_COMPUTED_GOTOS" : "HAVE_COMPUTED_GOTOS"
"PACKAGE_VERSION" : "PACKAGE_VERSION"
"setresuid" : "setresuid"
"sched_priority" : "sched_priority"
"putenv" : "putenv"
"to_bytes" : "to_bytes"
"curdir" : "curdir"
"HAVE_SETPRIORITY" : "HAVE_SETPRIORITY"
"ibm1125" : "ibm1125"
"HAVE_INET_ATON" : "HAVE_INET_ATON"
"readall" : "readall"
"HAVE_CTERMID_R" : "HAVE_CTERMID_R"
"HAVE_FLOCK" : "HAVE_FLOCK"
"py_version" : "py_version"
"HAVE_WMEMCMP" : "HAVE_WMEMCMP"
"greek8" : "greek8"
"utf_32_be_encode" : "utf_32_be_encode"
"_ModuleLock" : "_ModuleLock"
"iso_8859_11_2001" : "iso_8859_11_2001"
"other_dict" : "other_dict"
"__int__" : "__int__"
"_search_registry" : "_search_registry"
"PRIO_PGRP" : "PRIO_PGRP"
"HOST_GNU_TYPE" : "HOST_GNU_TYPE"
"iso_8859_16_2001" : "iso_8859_16_2001"
"u7" : "u7"
"setattr" : "setattr"
"HAVE_SPAWN_H" : "HAVE_SPAWN_H"
"UF_OPAQUE" : "UF_OPAQUE"
"__class__" : "__class__"
"iso_8859_2_1987" : "iso_8859_2_1987"
"AIX_GENUINE_CPLUSPLUS" : "AIX_GENUINE_CPLUSPLUS"
"path_listb" : "path_listb"
"HAVE_HSTRERROR" : "HAVE_HSTRERROR"
"MACHDEP" : "MACHDEP"
"difference" : "difference"
"_load_module_shim" : "_load_module_shim"
"HAVE_ROUND" : "HAVE_ROUND"
"cp861" : "cp861"
"WITH_PYMALLOC" : "WITH_PYMALLOC"
"iso_8859_5_1988" : "iso_8859_5_1988"
"_frozen_importlib" : "_frozen_importlib"
"HAVE_LSTAT" : "HAVE_LSTAT"
"mcls" : "mcls"
"SIZEOF_INT" : "SIZEOF_INT"
"HAVE_PTHREAD_KILL" : "HAVE_PTHREAD_KILL"
"HAVE_PUTENV" : "HAVE_PUTENV"
"writable" : "writable"
"HAVE_TERM_H" : "HAVE_TERM_H"
"st_mode" : "st_mode"
"SC_UIO_MAXIOV" : "SC_UIO_MAXIOV"
"1257" : "1257"
"PermissionError" : "PermissionError"
"_requires_builtin" : "_requires_builtin"
"path_finder" : "path_finder"
"utf7" : "utf7"
"iso2022_jp_1" : "iso2022_jp_1"
"_wrap" : "_wrap"
"co_argcount" : "co_argcount"
"CS_LFS64_LIBS" : "CS_LFS64_LIBS"
"process_time" : "process_time"
"python" : "python"
"SC_MEMORY_PROTECTION" : "SC_MEMORY_PROTECTION"
"_set_sentinel" : "_set_sentinel"
"PACKAGE_NAME" : "PACKAGE_NAME"
"dir" : "dir"
"py" : "py"
"osx_framework_user" : "osx_framework_user"
"Codec" : "Codec"
"PC_ALLOC_SIZE_MIN" : "PC_ALLOC_SIZE_MIN"
"setgroups" : "setgroups"
"iso_ir_226" : "iso_ir_226"
"ST_UID" : "ST_UID"
"HAVE_GETLOADAVG" : "HAVE_GETLOADAVG"
"PC" : "PC"
"HAVE_DYNAMIC_LOADING" : "HAVE_DYNAMIC_LOADING"
"iso_8859_14_1998" : "iso_8859_14_1998"
"textwrap" : "textwrap"
"us" : "us"
"Set" : "Set"
"PC_REC_MAX_XFER_SIZE" : "PC_REC_MAX_XFER_SIZE"
"base64_codec" : "base64_codec"
"HAVE_C99_BOOL" : "HAVE_C99_BOOL"
"monotonic" : "monotonic"
"realpath" : "realpath"
"_find_spec_legacy" : "_find_spec_legacy"
"newchars" : "newchars"
"PGENSRCS" : "PGENSRCS"
"_module" : "_module"
"ConnectionError" : "ConnectionError"
"CS_XBS5_LPBIG_OFFBIG_LIBS" : "CS_XBS5_LPBIG_OFFBIG_LIBS"
"__contains__" : "__contains__"
"1140" : "1140"
"throw" : "throw"
"set_coroutine_wrapper" : "set_coroutine_wrapper"
"SITEPATH" : "SITEPATH"
"UF_IMMUTABLE" : "UF_IMMUTABLE"
"maketrans" : "maketrans"
"whence" : "whence"
"__lt__" : "__lt__"
"tm_hour" : "tm_hour"
"setcomp" : "setcomp"
"_bootlocale" : "_bootlocale"
"_warnings" : "_warnings"
"elapsed" : "elapsed"
"basename" : "basename"
"source_bytes" : "source_bytes"
"normcase" : "normcase"
"casefold" : "casefold"
"PY_CORE_CFLAGS" : "PY_CORE_CFLAGS"
"__truediv__" : "__truediv__"
"get_coroutine_wrapper" : "get_coroutine_wrapper"
"exc_value" : "exc_value"
"f_globals" : "f_globals"
"HAVE_INTTYPES_H" : "HAVE_INTTYPES_H"
"topfd" : "topfd"
"roman8" : "roman8"
"getsignal" : "getsignal"
"__pow__" : "__pow__"
"LDLIBRARYDIR" : "LDLIBRARYDIR"
"HAVE_RL_PRE_INPUT_HOOK" : "HAVE_RL_PRE_INPUT_HOOK"
"ProcessLookupError" : "ProcessLookupError"
"sizeof_digit" : "sizeof_digit"
"warnings" : "warnings"
"SETPGRP_HAVE_ARG" : "SETPGRP_HAVE_ARG"
"fsdecode" : "fsdecode"
"filename" : "filename"
"SC_XBS5_ILP32_OFFBIG" : "SC_XBS5_ILP32_OFFBIG"
"names" : "names"
"windows_1251" : "windows_1251"
"SC_2_FORT_RUN" : "SC_2_FORT_RUN"
"flush" : "flush"
"AssertionError" : "AssertionError"
"HAVE_SYS_TIMES_H" : "HAVE_SYS_TIMES_H"
"NotImplementedError" : "NotImplementedError"
"SC_NL_SETMAX" : "SC_NL_SETMAX"
"lstrip" : "lstrip"
"SC_THREAD_PRIO_INHERIT" : "SC_THREAD_PRIO_INHERIT"
"SIGABRT" : "SIGABRT"
"cp273" : "cp273"
"msg" : "msg"
"SC_COLL_WEIGHTS_MAX" : "SC_COLL_WEIGHTS_MAX"
"get_code" : "get_code"
"f_favail" : "f_favail"
"union" : "union"
"utf_16_le_encode" : "utf_16_le_encode"
"iso8859_8" : "iso8859_8"
"O_NONBLOCK" : "O_NONBLOCK"
"CS_XBS5_LP64_OFF64_CFLAGS" : "CS_XBS5_LP64_OFF64_CFLAGS"
"HAVE_FORK" : "HAVE_FORK"
"HAVE_TIMEGM" : "HAVE_TIMEGM"
"from_bytes" : "from_bytes"
"proxy" : "proxy"
"__pycache__" : "__pycache__"
"SourceFileLoader" : "SourceFileLoader"
"utf_16_le_decode" : "utf_16_le_decode"
"__trunc__" : "__trunc__"
"host" : "host"
"csibm037" : "csibm037"
"_wrap_close" : "_wrap_close"
"win" : "win"
"__rfloordiv__" : "__rfloordiv__"
"__all__" : "__all__"
"f_ffree" : "f_ffree"
"int_info" : "int_info"
"SCHED_BATCH" : "SCHED_BATCH"
"addpackage" : "addpackage"
"HAVE_MKNODAT" : "HAVE_MKNODAT"
"_load" : "_load"
"AttributeError" : "AttributeError"
"quit" : "quit"
"HAVE_FORKPTY" : "HAVE_FORKPTY"
"raw_unicode_escape_decode" : "raw_unicode_escape_decode"
"last_exc" : "last_exc"
"items" : "items"
"get" : "get"
"CONFIGURE_LDFLAGS" : "CONFIGURE_LDFLAGS"
"ascii_decode" : "ascii_decode"
"with_traceback" : "with_traceback"
"cp932" : "cp932"
"gbk" : "gbk"
"args" : "args"
"koi8_r" : "koi8_r"
"onerror" : "onerror"
"CS_XBS5_LPBIG_OFFBIG_LDFLAGS" : "CS_XBS5_LPBIG_OFFBIG_LDFLAGS"
"base_prefix" : "base_prefix"
"sorted" : "sorted"
"registry_key" : "registry_key"
"_expand_vars" : "_expand_vars"
"BASEMODLIBS" : "BASEMODLIBS"
"almost_filename" : "almost_filename"
"__closure__" : "__closure__"
"SEEK_CUR" : "SEEK_CUR"
"HAVE_GETPGID" : "HAVE_GETPGID"
"_NamespaceLoader" : "_NamespaceLoader"
"EOFError" : "EOFError"
"local_vars" : "local_vars"
"STDC_HEADERS" : "STDC_HEADERS"
"warn_explicit" : "warn_explicit"
"isidentifier" : "isidentifier"
"hash_info" : "hash_info"
"environb" : "environb"
"sep" : "sep"
"darwin" : "darwin"
"sepIndex" : "sepIndex"
"ArithmeticError" : "ArithmeticError"
"err" : "err"
"32bit" : "32bit"
"S_IFCHR" : "S_IFCHR"
"weakcontainer" : "weakcontainer"
"mappingproxy" : "mappingproxy"
"INCLDIRSTOMAKE" : "INCLDIRSTOMAKE"
"MKDIR_P" : "MKDIR_P"
"FILE_ATTRIBUTE_COMPRESSED" : "FILE_ATTRIBUTE_COMPRESSED"
"isalnum" : "isalnum"
"re" : "re"
"dbcs" : "dbcs"
"path_separators" : "path_separators"
"HAVE_TGAMMA" : "HAVE_TGAMMA"
"S_ISDIR" : "S_ISDIR"
"PIPE" : "PIPE"
"abs_builddir" : "abs_builddir"
"_buffer_decode" : "_buffer_decode"
"cp1256" : "cp1256"
"HAVE_LINKAT" : "HAVE_LINKAT"
"datarootdir" : "datarootdir"
"exec_builtin" : "exec_builtin"
"get_clock_info" : "get_clock_info"
"cp852" : "cp852"
"supports_unicode_filenames" : "supports_unicode_filenames"
"OverflowError" : "OverflowError"
"SIZEOF__BOOL" : "SIZEOF__BOOL"
"children_system" : "children_system"
"MAXLINES" : "MAXLINES"
"getaliases" : "getaliases"
"algorithm" : "algorithm"
"_execvpe" : "_execvpe"
"iso_2022_jp_2004" : "iso_2022_jp_2004"
"getvalue" : "getvalue"
"userbase" : "userbase"
"seek" : "seek"
"__module__" : "__module__"
"iso646_us" : "iso646_us"
"HAVE_ERRNO_H" : "HAVE_ERRNO_H"
"HAVE_GETHOSTBYNAME_R_6_ARG" : "HAVE_GETHOSTBYNAME_R_6_ARG"
"MAGIC_NUMBER" : "MAGIC_NUMBER"
"usercustomize" : "usercustomize"
"MACHDEPPATH" : "MACHDEPPATH"
"tail" : "tail"
"pwent" : "pwent"
"iso_2022_jp_2" : "iso_2022_jp_2"
"match" : "match"
"HAVE_MBRTOWC" : "HAVE_MBRTOWC"
"__le__" : "__le__"
"entries" : "entries"
"state" : "state"
"QUICKTESTOPTS" : "QUICKTESTOPTS"
"NameError" : "NameError"
"LDCXXSHARED" : "LDCXXSHARED"
"sys_version" : "sys_version"
"_Printer__name" : "_Printer__name"
"__rpow__" : "__rpow__"
"func" : "func"
"_find_spec" : "_find_spec"
"S_IREAD" : "S_IREAD"
"installed_base" : "installed_base"
"utf_32be" : "utf_32be"
"_proc" : "_proc"
"umask" : "umask"
"CS_XBS5_LPBIG_OFFBIG_CFLAGS" : "CS_XBS5_LPBIG_OFFBIG_CFLAGS"
"build_time_vars" : "build_time_vars"
"readinto1" : "readinto1"
"customize_config_vars" : "customize_config_vars"
"ibm857" : "ibm857"
"WIFCONTINUED" : "WIFCONTINUED"
"maxsize" : "maxsize"
"HAVE_WAITPID" : "HAVE_WAITPID"
"SIGTTOU" : "SIGTTOU"
"res" : "res"
"float" : "float"
"CLD_DUMPED" : "CLD_DUMPED"
"oct" : "oct"
"aliases" : "aliases"
"abs_paths" : "abs_paths"
"LIBPC" : "LIBPC"
"HAVE_STRFTIME" : "HAVE_STRFTIME"
"compile" : "compile"
"cp862" : "cp862"
"iso8859_4" : "iso8859_4"
"user_base" : "user_base"
"HAVE_FUTIMES" : "HAVE_FUTIMES"
"cp863" : "cp863"
"SC_SELECT" : "SC_SELECT"
"__dictoffset__" : "__dictoffset__"
"SIGSEGV" : "SIGSEGV"
"UF_HIDDEN" : "UF_HIDDEN"
"HAVE_UNLINKAT" : "HAVE_UNLINKAT"
"__rmatmul__" : "__rmatmul__"
"newline_decoder" : "newline_decoder"
"SCRIPTDIR" : "SCRIPTDIR"
"HAVE_PATHCONF" : "HAVE_PATHCONF"
"get_config_vars" : "get_config_vars"
"source_size" : "source_size"
"CS_XBS5_ILP32_OFFBIG_LDFLAGS" : "CS_XBS5_ILP32_OFFBIG_LDFLAGS"
"installed_platbase" : "installed_platbase"
"path_list" : "path_list"
"DLINCLDIR" : "DLINCLDIR"
"_fwalk" : "_fwalk"
"SC_AIO_MAX" : "SC_AIO_MAX"
"HAVE_SETGROUPS" : "HAVE_SETGROUPS"
"dot" : "dot"
"sigwaitinfo" : "sigwaitinfo"
"max_10_exp" : "max_10_exp"
"shiftjis" : "shiftjis"
"936" : "936"
"csibm273" : "csibm273"
"os_details" : "os_details"
"isdisjoint" : "isdisjoint"
"_aliases" : "_aliases"
"HAVE_GETITIMER" : "HAVE_GETITIMER"
"XATTR_CREATE" : "XATTR_CREATE"
"iso_8859_11" : "iso_8859_11"
"_init_module_attrs" : "_init_module_attrs"
"HAVE_RL_COMPLETION_APPEND_CHARACTER" : "HAVE_RL_COMPLETION_APPEND_CHARACTER"
"amd64" : "amd64"
"filemode" : "filemode"
"_acquire_restore" : "_acquire_restore"
"POSIX_FADV_NOREUSE" : "POSIX_FADV_NOREUSE"
"HAVE_STDINT_H" : "HAVE_STDINT_H"
"fpathconf" : "fpathconf"
"link" : "link"
"utf_32_le" : "utf_32_le"
"cp1361" : "cp1361"
"tactis" : "tactis"
"ignore" : "ignore"
"O_DIRECTORY" : "O_DIRECTORY"
"sjisx0213" : "sjisx0213"
"getpid" : "getpid"
"me" : "me"
"bytes_data" : "bytes_data"
"PC_SYNC_IO" : "PC_SYNC_IO"
"surrogateescape" : "surrogateescape"
"_check_arg_types" : "_check_arg_types"
"waitpid" : "waitpid"
"SIGVTALRM" : "SIGVTALRM"
"_false" : "_false"
"simplefilter" : "simplefilter"
"deleter" : "deleter"
"genexpr" : "genexpr"
"csibm863" : "csibm863"
"namespace_path" : "namespace_path"
"name" : "name"
"HAVE_SCHED_GET_PRIORITY_MAX" : "HAVE_SCHED_GET_PRIORITY_MAX"
"SC_SHRT_MIN" : "SC_SHRT_MIN"
"SIGQUIT" : "SIGQUIT"
"co_stacksize" : "co_stacksize"
"getattr" : "getattr"
".0" : ".0"
"iso_2022_jp_3" : "iso_2022_jp_3"
"pathconf" : "pathconf"
"HAVE_WCSFTIME" : "HAVE_WCSFTIME"
"iso8859_11" : "iso8859_11"
"iso8859_6" : "iso8859_6"
"HAVE_SSIZE_T" : "HAVE_SSIZE_T"
"utf8_ucs4" : "utf8_ucs4"
"SC_NL_TEXTMAX" : "SC_NL_TEXTMAX"
"__spec__" : "__spec__"
"HAVE_FCHOWN" : "HAVE_FCHOWN"
"HAVE_ACOSH" : "HAVE_ACOSH"
"SC_XOPEN_LEGACY" : "SC_XOPEN_LEGACY"
"list" : "list"
"sr" : "sr"
"SC_EQUIV_CLASS_MAX" : "SC_EQUIV_CLASS_MAX"
"_NamespacePath" : "_NamespacePath"
"BOM32_LE" : "BOM32_LE"
"genericpath" : "genericpath"
"raw_unicode_escape_encode" : "raw_unicode_escape_encode"
"mtime" : "mtime"
"co_kwonlyargcount" : "co_kwonlyargcount"
"HAVE_STROPTS_H" : "HAVE_STROPTS_H"
"f_builtins" : "f_builtins"
"__next__" : "__next__"
"O_DIRECT" : "O_DIRECT"
"PARSER_HEADERS" : "PARSER_HEADERS"
"WITH_VALGRIND" : "WITH_VALGRIND"
"AsyncIterator" : "AsyncIterator"
"cp950" : "cp950"
"SC_PASS_MAX" : "SC_PASS_MAX"
"f_bfree" : "f_bfree"
"Mapping" : "Mapping"
"HAVE_LINUX_CAN_RAW_FD_FRAMES" : "HAVE_LINUX_CAN_RAW_FD_FRAMES"
"getsid" : "getsid"
"search_function" : "search_function"
"Include" : "Include"
"_check_name_wrapper" : "_check_name_wrapper"
"_r_long" : "_r_long"
"HAVE_FTELL64" : "HAVE_FTELL64"
"listxattr" : "listxattr"
"iso_8859_3" : "iso_8859_3"
"pthread_kill" : "pthread_kill"
"mbcs" : "mbcs"
"euc_jisx0213" : "euc_jisx0213"
"__del__" : "__del__"
"dict_itemiterator" : "dict_itemiterator"
"S_IWOTH" : "S_IWOTH"
"_dealloc_warn" : "_dealloc_warn"
"SC_2_VERSION" : "SC_2_VERSION"
"islower" : "islower"
"isolated" : "isolated"
"big5hkscs" : "big5hkscs"
"_dump_registry" : "_dump_registry"
"mro" : "mro"
"wr" : "wr"
"PY_CPPFLAGS" : "PY_CPPFLAGS"
"LIBDEST" : "LIBDEST"
"O_RSYNC" : "O_RSYNC"
"SourceLoader" : "SourceLoader"
"isdir" : "isdir"
"encodevalue" : "encodevalue"
"get_data" : "get_data"
"cp1255" : "cp1255"
"_stream" : "_stream"
"BOM_UTF32" : "BOM_UTF32"
"iso_8859_7" : "iso_8859_7"
"HAVE_UCS4_TCL" : "HAVE_UCS4_TCL"
"openpty" : "openpty"
"SF_APPEND" : "SF_APPEND"
"HAVE_DEV_PTC" : "HAVE_DEV_PTC"
"line0withend" : "line0withend"
"CFLAGSFORSHARED" : "CFLAGSFORSHARED"
"ST_MODE" : "ST_MODE"
"utf_7_encode" : "utf_7_encode"
"groupdict" : "groupdict"
"create_dynamic" : "create_dynamic"
"mapping" : "mapping"
"HAVE_LIBINTL_H" : "HAVE_LIBINTL_H"
"__func__" : "__func__"
"zipimporter" : "zipimporter"
"LIBPL" : "LIBPL"
"posix_user" : "posix_user"
"_requires_frozen_wrapper" : "_requires_frozen_wrapper"
"source_from_cache" : "source_from_cache"
"SC_REALTIME_SIGNALS" : "SC_REALTIME_SIGNALS"
"replace_errors" : "replace_errors"
"HAVE_GETENTROPY" : "HAVE_GETENTROPY"
"_CONFIG_VARS" : "_CONFIG_VARS"
"HAVE_NET_IF_H" : "HAVE_NET_IF_H"
"extend" : "extend"
"fdatasync" : "fdatasync"
"times" : "times"
"macroman" : "macroman"
"split" : "split"
"maccyrillic" : "maccyrillic"
"HAVE_SETEGID" : "HAVE_SETEGID"
"HAVE_IO_H" : "HAVE_IO_H"
"quopri_codec" : "quopri_codec"
"BufferedWriter" : "BufferedWriter"
"CLOCK_THREAD_CPUTIME_ID" : "CLOCK_THREAD_CPUTIME_ID"
"HAVE_PAUSE" : "HAVE_PAUSE"
"f2" : "f2"
"__floor__" : "__floor__"
"paths" : "paths"
"message" : "message"
"get_filename" : "get_filename"
"HAVE_SYS_SOCKET_H" : "HAVE_SYS_SOCKET_H"
"wakeup" : "wakeup"
"_code_to_bytecode" : "_code_to_bytecode"
"ibm039" : "ibm039"
"__rrshift__" : "__rrshift__"
"HAVE_STRUCT_STAT_ST_GEN" : "HAVE_STRUCT_STAT_ST_GEN"
"SCHED_OTHER" : "SCHED_OTHER"
"ebcdic_cp_us" : "ebcdic_cp_us"
"FILE_ATTRIBUTE_OFFLINE" : "FILE_ATTRIBUTE_OFFLINE"
"SGI_ABI" : "SGI_ABI"
"major" : "major"
"iso_8859_7_1987" : "iso_8859_7_1987"
"HAVE_LIBDL" : "HAVE_LIBDL"
"instance" : "instance"
"iso_ir_148" : "iso_ir_148"
"data" : "data"
"SC_MQ_PRIO_MAX" : "SC_MQ_PRIO_MAX"
"little" : "little"
"SIZEOF_DOUBLE" : "SIZEOF_DOUBLE"
"co_name" : "co_name"
"execle" : "execle"
"S_IEXEC" : "S_IEXEC"
"utf_32_be_decode" : "utf_32_be_decode"
"si_code" : "si_code"
"errors" : "errors"
"frozenset" : "frozenset"
"utf_16_ex_decode" : "utf_16_ex_decode"
"_frozen_importlib_external" : "_frozen_importlib_external"
"w" : "w"
"SF_IMMUTABLE" : "SF_IMMUTABLE"
"HAVE_DIRECT_H" : "HAVE_DIRECT_H"
"linesep" : "linesep"
"spawnle" : "spawnle"
"PY_FORMAT_LONG_LONG" : "PY_FORMAT_LONG_LONG"
"sched_setparam" : "sched_setparam"
"user_site" : "user_site"
"__length_hint__" : "__length_hint__"
"modnames" : "modnames"
"stop" : "stop"
"reader" : "reader"
"contiguous" : "contiguous"
"source" : "source"
"HAVE_SYS_EPOLL_H" : "HAVE_SYS_EPOLL_H"
"HAVE_SCHED_SETSCHEDULER" : "HAVE_SCHED_SETSCHEDULER"
"HAVE_SYS_SYSCALL_H" : "HAVE_SYS_SYSCALL_H"
"is_builtin" : "is_builtin"
"CS_XBS5_ILP32_OFF32_CFLAGS" : "CS_XBS5_ILP32_OFF32_CFLAGS"
"XATTR_REPLACE" : "XATTR_REPLACE"
"HAVE_OSX105_SDK" : "HAVE_OSX105_SDK"
"gi_running" : "gi_running"
"SIZEOF_LONG_LONG" : "SIZEOF_LONG_LONG"
"S_IRUSR" : "S_IRUSR"
"iso8859" : "iso8859"
"HAVE_GETC_UNLOCKED" : "HAVE_GETC_UNLOCKED"
"abspath" : "abspath"

747 allocations use 0xa95e0 (693,728) bytes.
